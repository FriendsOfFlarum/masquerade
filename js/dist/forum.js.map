{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/external \"flarum.core.compat['app']\"","webpack://@fof/masquerade/external \"flarum.core.compat['Model']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['extend']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['models/User']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/UserCard']\"","webpack://@fof/masquerade/./src/lib/models/Answer.js","webpack://@fof/masquerade/./src/forum/types/BaseField.js","webpack://@fof/masquerade/./src/forum/types/BooleanField.js","webpack://@fof/masquerade/./src/forum/types/EmailField.js","webpack://@fof/masquerade/./src/forum/types/SelectField.js","webpack://@fof/masquerade/./src/forum/types/UrlField.js","webpack://@fof/masquerade/./src/forum/types/TypeFactory.js","webpack://@fof/masquerade/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/forum/panes/ProfilePane.js","webpack://@fof/masquerade/./src/forum/mutateUserHero.js","webpack://@fof/masquerade/./src/forum/index.js","webpack://@fof/masquerade/./src/forum/addProfilePane.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","Field","apiEndpoint","this","exists","data","id","mixin","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","Answer","content","field","userId","BaseField","_ref","set","readAttribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","editorInput","editorInputProps","className","oninput","withAttr","answerField","iconName","answerContent","isNoOptionSelectedValue","BooleanField","_this","options","map","option","checked","selected","onclick","label","push","app","translator","trans","indexOf","EmailField","props","_BaseField","placeholder","email","segment","replace","join","Button","component","mailTo","children","window","location","Select","onchange","validationIn","UrlField","to","open","TypeFactory","typeForField","identify","types","fieldAttribute","boolean","select","SelectField","url","identified","fieldType","trim","ProfileConfigurePane","init","_UserPage","loading","loadUser","session","user","username","enforceProfileCompletion","forum","profileCompleted","fields","answers","load","onsubmit","update","a","b","prop","request","method","then","parseResponse","e","_this2","preventDefault","redraw","response","store","pushPayload","UserPage","route","param","show","mutateUserHero","extend","UserCard","items","bioFields","add","initializers","models","User","hasMany","routes","path","ProfilePane","isOwnProfileAndCanHaveMasquerade","href","LinkButton"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,mBCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAe,SAAAC,EAAAC,EAAAC,GACfD,EAAAR,UAAAlB,OAAAY,OAAAe,EAAAT,WACAQ,EAAAR,UAAAU,YAAAF,EACAA,EAAAG,UAAAF,EAHAzC,EAAAU,EAAAkC,EAAA,sBAAAL,mBCAApC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,+BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,sBCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,oCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,8BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,uHCGqBO,oGAmBjBC,YAAA,WACI,MAAO,sBAAwBC,KAAKC,OAAS,IAAMD,KAAKE,KAAKC,GAAK,cApBvCC,GAAMC,IAAO,CAC5CzC,KAAMyC,IAAMC,UAAU,QACtBC,YAAaF,IAAMC,UAAU,eAC7BE,KAAMH,IAAMC,UAAU,QACtBG,WAAYJ,IAAMC,UAAU,cAC5BI,SAAUL,IAAMC,UAAU,YAC1BK,OAAQN,IAAMC,UAAU,UACxBM,KAAMP,IAAMC,UAAU,QACtBO,KAAMR,IAAMC,UAAU,QACtBQ,WAAYT,IAAMC,UAAU,aAAcD,IAAMU,eAChDC,OAAQX,IAAMY,OAAO,UACrBC,OAAQb,IAAMC,UAAU,4BCd5BlD,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,uCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,8BCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,wCCAAnC,EAAAD,QAAAkC,OAAAC,KAAAC,OAAA,gJCGqB4B,oGAWjBpB,YAAA,WACI,MAAO,yBAA2BC,KAAKC,OAAS,IAAMD,KAAKE,KAAKC,GAAK,cAZzCC,GAAMC,IAAO,CAC7Ce,QAASf,IAAMC,UAAU,WACzBe,MAAOhB,IAAMY,OAAO,SACpBK,OAAQjB,IAAMC,UAAU,+ECFPiB,aACjB,SAAAA,EAAAC,GAAiC,IAApBH,EAAoBG,EAApBH,MAAOI,EAAaD,EAAbC,IAAKnD,EAAQkD,EAARlD,MACrB0B,KAAKqB,MAAQA,EACbrB,KAAKyB,IAAMA,EACXzB,KAAK1B,MAAQA,6BAGjBoD,cAAA,SAAc3C,EAAQuB,GAClB,MAAiC,mBAAtBvB,EAAOuB,GACPvB,EAAOuB,KAGXvB,EAAOuB,MAOlBqB,gBAAA,WACI,OAAO3B,KAAK0B,cAAc1B,KAAKqB,MAAO,cAAcO,MAAM,QAQ9DC,eAAA,SAAeC,GACX,IAAIC,EAAc,KAUlB,OARA/B,KAAK2B,kBAAkBK,QAAQ,SAAAC,GAC3B,IAAML,EAAQK,EAAKL,MAAM,IAAK,GAE1BA,EAAM,KAAOE,IACbC,EAAcH,EAAM,MAIrBG,KAGXG,YAAA,WACI,OAAOzE,EAAE,iBAAkB,CACvBA,EAAE,SAAU,CACRuC,KAAKqB,MAAMT,OAAS,CAACA,IAAKZ,KAAKqB,MAAMT,QAAS,KAAO,KACrDZ,KAAKqB,MAAMzD,OACXoC,KAAKqB,MAAMX,WAAa,KAAO,OAEnCjD,EAAE,aAAc,CACZuC,KAAKqB,MAAMV,SAAWlD,EAAE,UAAWuC,KAAKqB,MAAMV,UAAY,KAC1DX,KAAKmC,cACLnC,KAAKqB,MAAMd,cAAgB9C,EAAE,YAAauC,KAAKqB,MAAMd,eAAiB,YAKlF4B,YAAA,WACI,OAAO1E,EAAE,QAASuC,KAAKoC,uBAG3BA,iBAAA,WACI,MAAO,CACHC,UAAW,cACXC,QAAS7E,EAAE8E,SAAS,QAASvC,KAAKyB,KAClCnD,MAAO0B,KAAK1B,QACZoC,SAAUV,KAAKqB,MAAMX,eAI7B8B,YAAA,WACI,IAAMC,EAAWzC,KAAK0B,cAAc1B,KAAKqB,MAAO,QAEhD,OAAO5D,EAAE,sBAAuB,CAC5BA,EAAE,4BAA6B,CAC3BgF,EAAW,CAAC7B,IAAK6B,GAAW,KAAO,KACnCzC,KAAK0B,cAAc1B,KAAKqB,MAAO,QAAU,OAE7C5D,EAAE,6BAA8BuC,KAAK0C,sBAI7CA,cAAA,WACI,OAAO1C,KAAK1B,WAGTqE,wBAAP,SAA+BrE,GAG3B,OAAiB,OAAVA,GAA4B,KAAVA,QC1FZsE,4GACjBT,YAAA,WAAc,IAAAU,EAAA7C,KACV,OAAOA,KAAK8C,UAAUC,IAAI,SAAAC,GAAM,OAAIvF,EAAE,MAAOA,EAAE,QAAS,CACpDA,EAAE,oBAAqB,CACnBwF,QAASD,EAAOE,SAASL,EAAKvE,SAC9B6E,QAAS,WACLN,EAAKpB,IAAIuB,EAAOpE,QAGxB,IAAMoE,EAAOI,cAIrBN,QAAA,WACI,IAAIA,EAAU,GA+Bd,OA7BK9C,KAAK0B,cAAc1B,KAAKqB,MAAO,aAChCyB,EAAQO,KAAK,CACTH,SAAU,SAAA5E,GAAK,OAAIiD,EAAUoB,wBAAwBrE,IACrDM,IAAK,KACLwE,MAAOE,IAAIC,WAAWC,MAAM,sDAIpCV,EAAQO,KAAK,CACTH,SAAU,SAAA5E,GAAK,OAAsD,IAAlD,CAAC,OAAQ,IAAK,GAAG,EAAM,OAAOmF,QAAQnF,IACzDM,IAAK,OACLwE,MAAOE,IAAIC,WAAWC,MAAM,6CAGhCV,EAAQO,KAAK,CACTH,SAAU,SAAA5E,GAAK,OAAuD,IAAnD,CAAC,QAAS,IAAK,GAAG,EAAO,MAAMmF,QAAQnF,IAC1DM,IAAK,QACLwE,MAAOE,IAAIC,WAAWC,MAAM,4CAI3BjC,EAAUoB,wBAAwB3C,KAAK1B,WAAmG,IAAvF,CAAC,OAAQ,IAAK,GAAG,EAAM,MAAO,QAAS,IAAK,GAAG,EAAO,MAAMmF,QAAQzD,KAAK1B,UAC7HwE,EAAQO,KAAK,CACTH,SAAU,kBAAM,GAChBtE,IAAKoB,KAAK1B,QACV8E,MAAO,aAAepD,KAAK1B,UAI5BwE,KAGXJ,cAAA,WACI,OAAInB,EAAUoB,wBAAwB3C,KAAK1B,SAChC,IAGqD,IAAzD,CAAC,EAAG,KAAK,EAAM,OAAQ,OAAOmF,QAAQzD,KAAK1B,SAC9C,CAACsC,IAAK,uBAAwB,IAAK0C,IAAIC,WAAWC,MAAM,4CACxD,CAAC5C,IAAK,iBAAkB,IAAK0C,IAAIC,WAAWC,MAAM,+CAvDpBjC,GCArBmC,4GACjBtB,iBAAA,WACI,IAAIuB,EAAKC,EAAA3E,UAASmD,iBAAT5E,KAAAwC,MAKT,OAHA2D,EAAMnD,KAAO,QACbmD,EAAME,YAAc,kBAEbF,KAGXjB,cAAA,WAAgB,IAAAG,EAAA7C,KACN1B,EAAQ0B,KAAK1B,QAEnB,IAAKA,EACD,OAAO,KAGX,IAAMwF,EAAQxF,EACTsD,MAAM,QACNmB,IAAI,SAAAgB,GACD,OAAOA,EAAQC,QAAQ,WAAY,SAEtCC,KAAK,KAEV,OAAOC,IAAOC,UAAU,CACpBhB,QAAS,kBAAMN,EAAKuB,UACpB/B,UAAW,sBACXzB,KAAM,kBACNyD,SAAUP,OAIlBM,OAAA,WACIE,OAAOC,SAAW,UAAYvE,KAAK1B,YAjCHiD,mBCEnBmC,4GACjBvB,YAAA,WAAc,IAAAU,EAAA7C,KACV,OAAOwE,IAAOL,UAAU,CACpBM,SAAU,SAAAnG,GALS,sCAMXA,IACAA,EAAQ,MAGZuE,EAAKpB,IAAInD,IAEbA,MAAOiD,EAAUoB,wBAAwB3C,KAAK1B,SAZ3B,oCAY+D0B,KAAK1B,QACvFwE,QAAS9C,KAAK8C,eAItBA,QAAA,WACI,IAAIA,EAAU,GAET9C,KAAK0B,cAAc1B,KAAKqB,MAAO,YAEzBE,EAAUoB,wBAAwB3C,KAAK1B,WAC9CwE,EAAO,kCAA2BQ,IAAIC,WAAWC,MAAM,qDAFvDV,EAAO,kCAA2BQ,IAAIC,WAAWC,MAAM,oDAK3D,IAAMkB,EAAe1E,KAAK6B,eAAe,MAYzC,OAVI6C,GACAA,EAAa9C,MAAM,KAAKI,QAAQ,SAAA1D,GAC5BwE,EAAQxE,GAASA,IAIpBiD,EAAUoB,wBAAwB3C,KAAK1B,eAA6C,IAA1BwE,EAAQ9C,KAAK1B,WACxEwE,EAAQ9C,KAAK1B,SAAW,aAAe0B,KAAK1B,SAGzCwE,MApCyBvB,GCFnBoD,4GACjBvC,iBAAA,WACI,IAAIuB,EAAKC,EAAA3E,UAASmD,iBAAT5E,KAAAwC,MAKT,OAHA2D,EAAMnD,KAAO,MACbmD,EAAME,YAAc,sBAEbF,KAGXjB,cAAA,WAAgB,IAAAG,EAAA7C,KACN1B,EAAQ0B,KAAK1B,QAEnB,OAAKA,EAIE4F,IAAOC,UAAU,CACpBhB,QAAS,kBAAMN,EAAK+B,MACpBvC,UAAW,sBACXzB,KAAM,cACNyD,SAAU/F,EAAM0F,QAAQ,eAAgB,MAPjC,QAWfY,GAAA,WACkBN,OAAOO,OACfN,SAAWvE,KAAK1B,YA3BQiD,GCGjBuD,oCACVC,aAAP,SAAAvD,GAAyC,IAApBH,EAAoBG,EAApBH,MAAOI,EAAaD,EAAbC,IAAKnD,EAAQkD,EAARlD,MACzB+D,EAAYd,EAEVf,EAAOR,KAAKgF,SAAS3D,GAM3B,OAJIb,IACA6B,EAAYrC,KAAKiF,QAAQzE,IAGtB,IAAI6B,EAAU,CACjBhB,QACAI,MACAnD,aAID4G,eAAP,SAAsB7D,EAAOf,GACzB,MAAgC,mBAArBe,EAAMf,GACNe,EAAMf,KAGVe,EAAMf,MAGV2E,MAAP,WACI,MAAO,CACHE,QAASvC,EACTkB,MAAOJ,EACP0B,OAAQC,EACRC,IAAKX,MAQNK,SAAP,SAAgB3D,GAAO,IAAAwB,EAAA7C,KACbS,GAAcT,KAAKkF,eAAe7D,EAAO,eAAiB,IAAIO,MAAM,KACtE2D,EAAa,KAGXC,EAAYxF,KAAKkF,eAAe7D,EAAO,QAC7C,YAAuC,IAA5BrB,KAAKiF,QAAQO,GACbA,GAIX/E,EAAWuB,QAAQ,SAAAC,GACfA,EAAOA,EAAKwD,YAEsB,IAAvB5C,EAAKoC,QAAQhD,KACpBsD,EAAatD,KAIdsD,SCxDMG,4GACjBC,KAAA,WACIC,EAAA3G,UAAM0G,KAANnI,KAAAwC,MACAA,KAAK6F,SAAU,EAEf7F,KAAK8F,SAASxC,IAAIyC,QAAQC,KAAKC,YAC/BjG,KAAKkG,yBAA2B5C,IAAI6C,MAAM7F,UAAU,yCAA0C,EAC9FN,KAAKoG,iBAAmB9C,IAAI6C,MAAM7F,UAAU,kCAAmC,EAC/EN,KAAKqG,OAAS,GACdrG,KAAKsG,QAAU,GACftG,KAAKuG,UAGTnF,QAAA,WAAU,IAAAyB,EAAA7C,KACN,OAAOvC,EAAE,4BAA6B,CAClC+I,SAAUxG,KAAKyG,OAAO5H,KAAKmB,OAC5B,CACEA,KAAKkG,2BAA6BlG,KAAKoG,iBACpC3I,EAAE,sBAAuB6F,IAAIC,WAAWC,MAAM,4DAC9C,KACJ/F,EAAE,UAAWuC,KAAKqG,OACbxF,KAAK,SAAC6F,EAAGC,GAAJ,OAAUD,EAAE7F,OAAS8F,EAAE9F,SAC5BkC,IAAI,SAAA1B,GAKD,OAJKwB,EAAKyD,QAAQpH,eAAemC,EAAMlB,QACnC0C,EAAKyD,QAAQjF,EAAMlB,MAAQkB,EAAML,SAAWvD,EAAEmJ,KAAKvF,EAAML,SAASI,WAAa3D,EAAEmJ,KAAK,KAGnF/D,EAAKxB,MAAMA,MAG1B6C,IAAOC,UAAU,CACb3D,KAAM,SACN6B,UAAW,yBACXgC,SAAUf,IAAIC,WAAWC,MAAM,6CAC/BqC,QAAS7F,KAAK6F,eAK1BxE,MAAA,SAAMA,GAOF,OANayD,EAAYC,aAAa,CAClC1D,QACAI,IAAKzB,KAAKyB,IAAI5C,KAAKmB,KAAMqB,GACzB/C,MAAO0B,KAAKsG,QAAQjF,EAAMlB,QAGlB+B,iBAGhBqE,KAAA,WACIjD,IAAIuD,QAAQ,CACRC,OAAQ,MACRxB,IAAKhC,IAAI6C,MAAM7F,UAAU,UAAY,0BACtCyG,KACC/G,KAAKgH,cAAcnI,KAAKmB,UAIhCyB,IAAA,SAAIJ,EAAO/C,GACH0B,KAAKsG,QAAQpH,eAAemC,EAAMlB,MAClCH,KAAKsG,QAAQjF,EAAMlB,MAAM7B,GAEzB0B,KAAKsG,QAAQjF,EAAMlB,MAAQ1C,EAAEmJ,KAAKtI,MAI1CmI,OAAA,SAAOQ,GAAG,IAAAC,EAAAlH,KACNiH,EAAEE,iBAEFnH,KAAK6F,SAAU,EACf,IAAI3F,EAAOF,KAAKsG,QAEhBhD,IAAIuD,QAAQ,CACRC,OAAQ,OACRxB,IAAKhC,IAAI6C,MAAM7F,UAAU,UAAY,wBACrCJ,SACD6G,KACC/G,KAAKgH,cAAcnI,KAAKmB,OAL5B,MAMQ,WACJkH,EAAKrB,SAAU,EACfpI,EAAE2J,cAIVJ,cAAA,SAAcK,GACVrH,KAAKqG,OAAS/C,IAAIgE,MAAMC,YAAYF,GACpCrH,KAAK6F,SAAU,EACfpI,EAAE2J,aAvFwCI,KCF7B9B,4GACjBC,KAAA,WACIC,EAAA3G,UAAM0G,KAANnI,KAAAwC,MACAA,KAAK6F,SAAU,EAEf7F,KAAKqG,OAAS,GACdrG,KAAKsG,QAAU,GAEftG,KAAK8F,SAASrI,EAAEgK,MAAMC,MAAM,gBAGhCtG,QAAA,WAAU,IAAAyB,EAAA7C,KACN,OAAOvC,EAAE,kBAAmB,CACxBA,EAAE,UAAWuC,KAAKqG,OACbxF,KAAK,SAAC6F,EAAGC,GAAJ,OAAUD,EAAE7F,OAAS8F,EAAE9F,SAC5BkC,IAAI,SAAA1B,GAID,OAFAwB,EAAKyD,QAAQjF,EAAMlB,MAAQkB,EAAML,UAAYK,EAAML,SAASM,UAAYuB,EAAKmD,KAAK7F,KAAOkB,EAAML,SAASI,UAAY,KAE7GyB,EAAKxB,MAAMA,WAMlCA,MAAA,SAAMA,GAMF,OALayD,EAAYC,aAAa,CAClC1D,QACA/C,MAAOb,EAAEmJ,KAAK5G,KAAKsG,QAAQjF,EAAMlB,SAGzBqC,iBAGhB+D,KAAA,SAAKP,GACD1C,IAAIuD,QAAQ,CACRC,OAAQ,MACRxB,IAAKhC,IAAI6C,MAAM7F,UAAU,UAAY,uBAAyB0F,EAAK7F,OACpE4G,KACC/G,KAAKgH,cAAcnI,KAAKmB,UAIhC2H,KAAA,SAAK3B,GACDhG,KAAKuG,KAAKP,GAEVJ,EAAA3G,UAAM0I,KAANnK,KAAAwC,KAAWgG,MAGfgB,cAAA,SAAcK,GACVrH,KAAKsG,QAAU,GACftG,KAAKqG,OAAS/C,IAAIgE,MAAMC,YAAYF,GAEpCrH,KAAK6F,SAAU,EACfpI,EAAE2J,aAtDwCI,sBCDnCI,EAAA,WACXC,iBAAOC,IAAS7I,UAAW,YAAa,SAAU8I,GAC9C,IAAIzB,EAAUhD,IAAI6C,MAAM7F,UAAU,sBAAuBN,KAAK2D,MAAMqC,KAAKgC,aAAoB,GAE7FD,EAAME,IAAI,iBAAkBxK,EAAE,MAAO6I,EAAQvD,IAAI,SAAA/B,GAC7C,IAAMK,EAAQL,EAAOV,UAAU,SAQ/B,OAPawE,EAAYC,aAAa,CAClC1D,QACA/C,MAFkC,WAG9B,OAAO0C,EAAOI,aAIVoB,qBCPxBc,IAAI4E,aAAaD,IAAI,iBAAkB,SAAA3E,GACnCA,EAAIgE,MAAMa,OAAO,oBAAsBrI,IACvCwD,EAAIgE,MAAMa,OAAO,qBAAuBhH,EAExCiH,IAAKnJ,UAAU+I,UAAY3H,IAAMgI,QAAQ,aCNzC/E,IAAIgF,OAAO,+BAAiC,CACxCC,KAAM,wBACNpE,UAAWqE,EAAYrE,aAE3Bb,IAAIgF,OAAO,oCAAsC,CAC7CC,KAAM,wBACNpE,UAAWuB,EAAqBvB,aAGpC0D,iBAAOL,IAASvI,UAAW,WAAY,SAAU8I,GAC7C,IAAMU,EAAmCnF,IAAI6C,MAAM7F,UAAU,sBAAwBgD,IAAIyC,QAAQC,KAAK7F,OAASH,KAAKgG,KAAK7F,KAEzH,GAAImD,IAAI6C,MAAM7F,UAAU,sBAAwBmI,EAAkC,CAC9E,IAAMC,EAAOD,EACPnF,IAAImE,MAAM,oCACVnE,IAAImE,MAAM,8BAA+B,CAACxB,SAAUjG,KAAKgG,KAAKC,aACpE8B,EAAME,IAAI,aACNU,IAAWxE,UAAU,CACjBuE,OACArE,SAAUf,IAAIC,WAAWC,MAAM,6CAC/B5C,KAAM,mBAEV,QDZZgH","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/UserPage'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    type: Model.attribute('type'),\n    validation: Model.attribute('validation'),\n    required: Model.attribute('required'),\n    prefix: Model.attribute('prefix'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    answer: Model.hasOne('answer'),\n    on_bio: Model.attribute('on_bio')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/UserCard'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    field: Model.hasOne('field'),\n    userId: Model.attribute('user_id')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/configure' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import icon from 'flarum/helpers/icon';\n\n/* global m */\n\nexport default class BaseField {\n    constructor({field, set, value}) {\n        this.field = field;\n        this.set = set;\n        this.value = value;\n    }\n\n    readAttribute(object, attribute) {\n        if (typeof object[attribute] === 'function') {\n            return object[attribute]();\n        }\n\n        return object[attribute];\n    }\n\n    /**\n     * Gets all Laravel validation rules split by rule\n     * @returns {Array}\n     */\n    validationRules() {\n        return this.readAttribute(this.field, 'validation').split('|');\n    }\n\n    /**\n     * Gets a Laravel validation rule by name\n     * @param {string} ruleName\n     * @returns {string|null}\n     */\n    validationRule(ruleName) {\n        let ruleContent = null;\n\n        this.validationRules().forEach(rule => {\n            const split = rule.split(':', 2);\n\n            if (split[0] === ruleName) {\n                ruleContent = split[1];\n            }\n        });\n\n        return ruleContent;\n    }\n\n    editorField() {\n        return m('fieldset.Field', [\n            m('legend', [\n                this.field.icon() ? [icon(this.field.icon()), ' '] : null,\n                this.field.name(),\n                this.field.required() ? ' *' : null,\n            ]),\n            m('.FormField', [\n                this.field.prefix() ? m('.prefix', this.field.prefix()) : null,\n                this.editorInput(),\n                this.field.description() ? m('.helpText', this.field.description()) : null,\n            ]),\n        ]);\n    }\n\n    editorInput() {\n        return m('input', this.editorInputProps());\n    }\n\n    editorInputProps() {\n        return {\n            className: 'FormControl',\n            oninput: m.withAttr('value', this.set),\n            value: this.value(),\n            required: this.field.required(),\n        };\n    }\n\n    answerField() {\n        const iconName = this.readAttribute(this.field, 'icon');\n\n        return m('.Masquerade-Bio-Set', [\n            m('span.Masquerade-Bio-Field', [\n                iconName ? [icon(iconName), ' '] : null,\n                this.readAttribute(this.field, 'name') + ': ',\n            ]),\n            m('span.Masquerade-Bio-Answer', this.answerContent()),\n        ]);\n    }\n\n    answerContent() {\n        return this.value();\n    }\n\n    static isNoOptionSelectedValue(value) {\n        // The value can be null when coming from the API\n        // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\n        return value === null || value === '';\n    }\n}\n","import icon from 'flarum/helpers/icon';\nimport BaseField from './BaseField';\n\nexport default class BooleanField extends BaseField {\n    editorInput() {\n        return this.options().map(option => m('div', m('label', [\n            m('input[type=radio]', {\n                checked: option.selected(this.value()),\n                onclick: () => {\n                    this.set(option.key);\n                },\n            }),\n            ' ' + option.label,\n        ])));\n    }\n\n    options() {\n        let options = [];\n\n        if (!this.readAttribute(this.field, 'required')) {\n            options.push({\n                selected: value => BaseField.isNoOptionSelectedValue(value),\n                key: null,\n                label: app.translator.trans('fof-masquerade.forum.fields.select.none-optional'),\n            });\n        }\n\n        options.push({\n            selected: value => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\n            key: 'true',\n            label: app.translator.trans('fof-masquerade.forum.fields.boolean.yes'),\n        });\n\n        options.push({\n            selected: value => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\n            key: 'false',\n            label: app.translator.trans('fof-masquerade.forum.fields.boolean.no'),\n        });\n\n        // This is probably overkill because it looks like the backend casts the value anyway\n        if (!BaseField.isNoOptionSelectedValue(this.value()) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value()) === -1) {\n            options.push({\n                selected: () => true,\n                key: this.value(),\n                label: '(invalid) ' + this.value(),\n            });\n        }\n\n        return options;\n    }\n\n    answerContent() {\n        if (BaseField.isNoOptionSelectedValue(this.value())) {\n            return '';\n        }\n\n        return [1, '1', true, 'true', 'yes'].indexOf(this.value()) !== -1 ?\n            [icon('far fa-check-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.yes')] :\n            [icon('far fa-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.no')];\n    }\n}\n","import Button from 'flarum/components/Button';\nimport BaseField from './BaseField';\n\nexport default class EmailField extends BaseField {\n    editorInputProps() {\n        let props = super.editorInputProps();\n\n        props.type = 'email';\n        props.placeholder = 'you@example.com';\n\n        return props;\n    }\n\n    answerContent() {\n        const value = this.value();\n\n        if (!value) {\n            return null;\n        }\n\n        const email = value\n            .split(/@|\\./)\n            .map(segment => {\n                return segment.replace(/(.{2})./g, '$1*');\n            })\n            .join('*');\n\n        return Button.component({\n            onclick: () => this.mailTo(),\n            className: 'Button Button--text',\n            icon: 'far fa-envelope',\n            children: email,\n        });\n    }\n\n    mailTo() {\n        window.location = 'mailto:' + this.value();\n    }\n}\n","import Select from 'flarum/components/Select';\nimport BaseField from './BaseField';\n\nconst NO_OPTION_SELECTED_KEY = 'fof_masquerade_no_option_selected';\n\nexport default class EmailField extends BaseField {\n    editorInput() {\n        return Select.component({\n            onchange: value => {\n                if (value === NO_OPTION_SELECTED_KEY) {\n                    value = null;\n                }\n\n                this.set(value);\n            },\n            value: BaseField.isNoOptionSelectedValue(this.value()) ? NO_OPTION_SELECTED_KEY : this.value(),\n            options: this.options(),\n        });\n    }\n\n    options() {\n        let options = {};\n\n        if (!this.readAttribute(this.field, 'required')) {\n            options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-optional');\n        } else if (BaseField.isNoOptionSelectedValue(this.value())) {\n            options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-required');\n        }\n\n        const validationIn = this.validationRule('in');\n\n        if (validationIn) {\n            validationIn.split(',').forEach(value => {\n                options[value] = value;\n            });\n        }\n\n        if (!BaseField.isNoOptionSelectedValue(this.value()) && typeof options[this.value()] === 'undefined') {\n            options[this.value()] = '(invalid) ' + this.value();\n        }\n\n        return options;\n    }\n}\n","import Button from 'flarum/components/Button';\nimport BaseField from './BaseField';\n\nexport default class UrlField extends BaseField {\n    editorInputProps() {\n        let props = super.editorInputProps();\n\n        props.type = 'url';\n        props.placeholder = 'https://example.com';\n\n        return props;\n    }\n\n    answerContent() {\n        const value = this.value();\n\n        if (!value) {\n            return null;\n        }\n\n        return Button.component({\n            onclick: () => this.to(),\n            className: 'Button Button--text',\n            icon: 'fas fa-link',\n            children: value.replace(/^https?:\\/\\//, ''),\n        });\n    }\n\n    to() {\n        const popup = window.open();\n        popup.location = this.value();\n    }\n}\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport UrlField from './UrlField';\n\nexport default class TypeFactory {\n    static typeForField({field, set, value}) {\n        let className = BaseField;\n\n        const type = this.identify(field);\n\n        if (type) {\n            className = this.types()[type];\n        }\n\n        return new className({\n            field,\n            set,\n            value,\n        });\n    }\n\n    static fieldAttribute(field, attribute) {\n        if (typeof field[attribute] === 'function') {\n            return field[attribute]();\n        }\n\n        return field[attribute];\n    }\n\n    static types() {\n        return {\n            boolean: BooleanField,\n            email: EmailField,\n            select: SelectField,\n            url: UrlField,\n        };\n    }\n\n    /**\n     * Identifies how to parse the field answer.\n     * @returns {null|string}\n     */\n    static identify(field) {\n        const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\n        let identified = null;\n\n        // If the field has a type we use it\n        const fieldType = this.fieldAttribute(field, 'type');\n        if (typeof this.types()[fieldType] !== 'undefined') {\n            return fieldType;\n        }\n\n        // If it's an advanced field with no type we then guess the best type\n        validation.forEach(rule => {\n            rule = rule.trim();\n\n            if (typeof this.types()[rule] !== 'undefined') {\n                identified = rule;\n            }\n        });\n\n        return identified;\n    }\n}\n","import app from 'flarum/app';\nimport UserPage from 'flarum/components/UserPage';\nimport Button from 'flarum/components/Button';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n    init() {\n        super.init();\n        this.loading = true;\n\n        this.loadUser(app.session.user.username());\n        this.enforceProfileCompletion = app.forum.attribute('masquerade.force-profile-completion') || false;\n        this.profileCompleted = app.forum.attribute('masquerade.profile-completed') || false;\n        this.fields = [];\n        this.answers = {};\n        this.load();\n    }\n\n    content() {\n        return m('form.ProfileConfigurePane', {\n            onsubmit: this.update.bind(this),\n        }, [\n            (this.enforceProfileCompletion && !this.profileCompleted) ?\n                m('.Alert.Alert--Error', app.translator.trans('fof-masquerade.forum.alerts.profile-completion-required')) :\n                null,\n            m('.Fields', this.fields\n                .sort((a, b) => a.sort() - b.sort())\n                .map(field => {\n                    if (!this.answers.hasOwnProperty(field.id())) {\n                        this.answers[field.id()] = field.answer() ? m.prop(field.answer().content()) : m.prop('');\n                    }\n\n                    return this.field(field);\n                })\n            ),\n            Button.component({\n                type: 'submit',\n                className: 'Button Button--primary',\n                children: app.translator.trans('fof-masquerade.forum.buttons.save-profile'),\n                loading: this.loading,\n            }),\n        ]);\n    }\n\n    field(field) {\n        const type = TypeFactory.typeForField({\n            field,\n            set: this.set.bind(this, field),\n            value: this.answers[field.id()],\n        });\n\n        return type.editorField();\n    }\n\n    load() {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n        }).then(\n            this.parseResponse.bind(this)\n        );\n    }\n\n    set(field, value) {\n        if (this.answers.hasOwnProperty(field.id())) {\n            this.answers[field.id()](value);\n        } else {\n            this.answers[field.id()] = m.prop(value);\n        }\n    }\n\n    update(e) {\n        e.preventDefault();\n\n        this.loading = true;\n        let data = this.answers;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n            data,\n        }).then(\n            this.parseResponse.bind(this)\n        ).catch(() => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    parseResponse(response) {\n        this.fields = app.store.pushPayload(response);\n        this.loading = false;\n        m.redraw();\n    }\n}\n","import UserPage from 'flarum/components/UserPage';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n    init() {\n        super.init();\n        this.loading = true;\n\n        this.fields = [];\n        this.answers = {};\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    content() {\n        return m('.Masquerade-Bio', [\n            m('.Fields', this.fields\n                .sort((a, b) => a.sort() - b.sort())\n                .map(field => {\n                    // UserID check must be done with == because userId() is number while id() is string\n                    this.answers[field.id()] = field.answer() && field.answer().userId() == this.user.id() ? field.answer().content() : null;\n\n                    return this.field(field);\n                })\n            ),\n        ]);\n    }\n\n    field(field) {\n        const type = TypeFactory.typeForField({\n            field,\n            value: m.prop(this.answers[field.id()]),\n        });\n\n        return type.answerField();\n    }\n\n    load(user) {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/profile/' + user.id(),\n        }).then(\n            this.parseResponse.bind(this)\n        );\n    }\n\n    show(user) {\n        this.load(user);\n\n        super.show(user);\n    }\n\n    parseResponse(response) {\n        this.answers = {};\n        this.fields = app.store.pushPayload(response);\n\n        this.loading = false;\n        m.redraw();\n    }\n}\n","import {extend} from \"flarum/extend\";\nimport UserCard from \"flarum/components/UserCard\";\nimport TypeFactory from './types/TypeFactory';\n\nexport default function () {\n    extend(UserCard.prototype, 'infoItems', function (items) {\n        let answers = app.forum.attribute('canViewMasquerade') ? this.props.user.bioFields() || [] : [];\n\n        items.add('masquerade-bio', m('div', answers.map(answer => {\n            const field = answer.attribute('field');\n            const type = TypeFactory.typeForField({\n                field,\n                value() {\n                    return answer.content();\n                },\n            });\n\n            return type.answerField();\n        })));\n    });\n}\n","import {extend} from \"flarum/extend\";\nimport app from \"flarum/app\";\nimport User from \"flarum/models/User\";\nimport Field from \"./../lib/models/Field\";\nimport Answer from \"./../lib/models/Answer\";\nimport Model from 'flarum/Model';\n\nimport addProfilePane from './addProfilePane';\nimport mutateUserHero from './mutateUserHero';\n\napp.initializers.add('fof-masquerade', app => {\n    app.store.models['masquerade-field'] = Field;\n    app.store.models['masquerade-answer'] = Answer;\n\n    User.prototype.bioFields = Model.hasMany('bioFields');\n\n    addProfilePane();\n\n    mutateUserHero();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport LinkButton from 'flarum/components/LinkButton';\nimport UserPage from 'flarum/components/UserPage';\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\nimport ProfilePane from './panes/ProfilePane';\n\nexport default function () {\n    app.routes['fof-masquerade-view-profile'] = {\n        path: '/masquerade/:username',\n        component: ProfilePane.component(),\n    };\n    app.routes['fof-masquerade-configure-profile'] = {\n        path: '/masquerade/configure',\n        component: ProfileConfigurePane.component(),\n    };\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        const isOwnProfileAndCanHaveMasquerade = app.forum.attribute('canHaveMasquerade') && app.session.user.id() === this.user.id();\n\n        if (app.forum.attribute('canViewMasquerade') || isOwnProfileAndCanHaveMasquerade) {\n            const href = isOwnProfileAndCanHaveMasquerade\n                ? app.route('fof-masquerade-configure-profile')\n                : app.route('fof-masquerade-view-profile', {username: this.user.username()});\n            items.add('masquerade',\n                LinkButton.component({\n                    href,\n                    children: app.translator.trans('fof-masquerade.forum.buttons.view-profile'),\n                    icon: 'far fa-id-card',\n                }),\n                200\n            );\n        }\n    });\n}\n"],"sourceRoot":""}