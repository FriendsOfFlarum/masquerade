{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/external \"flarum.core.compat['app']\"","webpack://@fof/masquerade/external \"flarum.core.compat['Model']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['extend']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['models/User']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/UserCard']\"","webpack://@fof/masquerade/./src/lib/models/Answer.js","webpack://@fof/masquerade/./src/forum/types/BaseField.js","webpack://@fof/masquerade/./src/forum/types/BooleanField.js","webpack://@fof/masquerade/./src/forum/types/EmailField.js","webpack://@fof/masquerade/./src/forum/types/SelectField.js","webpack://@fof/masquerade/./src/forum/types/UrlField.js","webpack://@fof/masquerade/./src/forum/types/TypeFactory.js","webpack://@fof/masquerade/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/forum/panes/ProfilePane.js","webpack://@fof/masquerade/./src/forum/mutateUserHero.js","webpack://@fof/masquerade/./src/forum/index.js","webpack://@fof/masquerade/./src/forum/addProfilePane.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Field","apiEndpoint","this","exists","data","id","mixin","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","Answer","content","field","userId","BaseField","set","readAttribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","editorInput","editorInputProps","className","oninput","withAttr","answerField","iconName","answerContent","isNoOptionSelectedValue","BooleanField","options","map","option","checked","selected","onclick","label","push","app","translator","trans","indexOf","EmailField","props","placeholder","email","segment","replace","join","Button","component","mailTo","children","window","location","Select","onchange","validationIn","UrlField","to","open","TypeFactory","typeForField","identify","types","fieldAttribute","boolean","select","SelectField","url","identified","fieldType","trim","ProfileConfigurePane","init","loading","loadUser","session","user","username","enforceProfileCompletion","forum","profileCompleted","fields","answers","load","onsubmit","update","a","b","prop","request","method","then","parseResponse","e","preventDefault","redraw","response","store","pushPayload","UserPage","route","param","show","extend","UserCard","items","bioFields","add","initializers","models","User","hasMany","routes","path","ProfilePane","isOwnProfileAndCanHaveMasquerade","href","LinkButton","mutateUserHero"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/UserPage'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    type: Model.attribute('type'),\n    validation: Model.attribute('validation'),\n    required: Model.attribute('required'),\n    prefix: Model.attribute('prefix'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    answer: Model.hasOne('answer'),\n    on_bio: Model.attribute('on_bio')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/UserCard'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    field: Model.hasOne('field'),\n    userId: Model.attribute('user_id')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/configure' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import icon from 'flarum/helpers/icon';\n\n/* global m */\n\nexport default class BaseField {\n    constructor({field, set, value}) {\n        this.field = field;\n        this.set = set;\n        this.value = value;\n    }\n\n    readAttribute(object, attribute) {\n        if (typeof object[attribute] === 'function') {\n            return object[attribute]();\n        }\n\n        return object[attribute];\n    }\n\n    /**\n     * Gets all Laravel validation rules split by rule\n     * @returns {Array}\n     */\n    validationRules() {\n        return this.readAttribute(this.field, 'validation').split('|');\n    }\n\n    /**\n     * Gets a Laravel validation rule by name\n     * @param {string} ruleName\n     * @returns {string|null}\n     */\n    validationRule(ruleName) {\n        let ruleContent = null;\n\n        this.validationRules().forEach(rule => {\n            const split = rule.split(':', 2);\n\n            if (split[0] === ruleName) {\n                ruleContent = split[1];\n            }\n        });\n\n        return ruleContent;\n    }\n\n    editorField() {\n        return m('fieldset.Field', [\n            m('legend', [\n                this.field.icon() ? [icon(this.field.icon()), ' '] : null,\n                this.field.name(),\n                this.field.required() ? ' *' : null,\n            ]),\n            m('.FormField', [\n                this.field.prefix() ? m('.prefix', this.field.prefix()) : null,\n                this.editorInput(),\n                this.field.description() ? m('.helpText', this.field.description()) : null,\n            ]),\n        ]);\n    }\n\n    editorInput() {\n        return m('input', this.editorInputProps());\n    }\n\n    editorInputProps() {\n        return {\n            className: 'FormControl',\n            oninput: m.withAttr('value', this.set),\n            value: this.value(),\n            required: this.field.required(),\n        };\n    }\n\n    answerField() {\n        const iconName = this.readAttribute(this.field, 'icon');\n\n        return m('.Masquerade-Bio-Set', [\n            m('span.Masquerade-Bio-Field', [\n                iconName ? [icon(iconName), ' '] : null,\n                this.readAttribute(this.field, 'name') + ': ',\n            ]),\n            m('span.Masquerade-Bio-Answer', this.answerContent()),\n        ]);\n    }\n\n    answerContent() {\n        return this.value();\n    }\n\n    static isNoOptionSelectedValue(value) {\n        // The value can be null when coming from the API\n        // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\n        return value === null || value === '';\n    }\n}\n","import icon from 'flarum/helpers/icon';\nimport BaseField from './BaseField';\n\nexport default class BooleanField extends BaseField {\n    editorInput() {\n        return this.options().map(option => m('div', m('label', [\n            m('input[type=radio]', {\n                checked: option.selected(this.value()),\n                onclick: () => {\n                    this.set(option.key);\n                },\n            }),\n            ' ' + option.label,\n        ])));\n    }\n\n    options() {\n        let options = [];\n\n        if (!this.readAttribute(this.field, 'required')) {\n            options.push({\n                selected: value => BaseField.isNoOptionSelectedValue(value),\n                key: null,\n                label: app.translator.trans('fof-masquerade.forum.fields.select.none-optional'),\n            });\n        }\n\n        options.push({\n            selected: value => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\n            key: 'true',\n            label: app.translator.trans('fof-masquerade.forum.fields.boolean.yes'),\n        });\n\n        options.push({\n            selected: value => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\n            key: 'false',\n            label: app.translator.trans('fof-masquerade.forum.fields.boolean.no'),\n        });\n\n        // This is probably overkill because it looks like the backend casts the value anyway\n        if (!BaseField.isNoOptionSelectedValue(this.value()) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value()) === -1) {\n            options.push({\n                selected: () => true,\n                key: this.value(),\n                label: '(invalid) ' + this.value(),\n            });\n        }\n\n        return options;\n    }\n\n    answerContent() {\n        if (BaseField.isNoOptionSelectedValue(this.value())) {\n            return '';\n        }\n\n        return [1, '1', true, 'true', 'yes'].indexOf(this.value()) !== -1 ?\n            [icon('far fa-check-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.yes')] :\n            [icon('far fa-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.no')];\n    }\n}\n","import Button from 'flarum/components/Button';\nimport BaseField from './BaseField';\n\nexport default class EmailField extends BaseField {\n    editorInputProps() {\n        let props = super.editorInputProps();\n\n        props.type = 'email';\n        props.placeholder = 'you@example.com';\n\n        return props;\n    }\n\n    answerContent() {\n        const value = this.value();\n\n        if (!value) {\n            return null;\n        }\n\n        const email = value\n            .split(/@|\\./)\n            .map(segment => {\n                return segment.replace(/(.{2})./g, '$1*');\n            })\n            .join('*');\n\n        return Button.component({\n            onclick: () => this.mailTo(),\n            className: 'Button Button--text',\n            icon: 'far fa-envelope',\n            children: email,\n        });\n    }\n\n    mailTo() {\n        window.location = 'mailto:' + this.value();\n    }\n}\n","import Select from 'flarum/components/Select';\nimport BaseField from './BaseField';\n\nconst NO_OPTION_SELECTED_KEY = 'fof_masquerade_no_option_selected';\n\nexport default class EmailField extends BaseField {\n    editorInput() {\n        return Select.component({\n            onchange: value => {\n                if (value === NO_OPTION_SELECTED_KEY) {\n                    value = null;\n                }\n\n                this.set(value);\n            },\n            value: BaseField.isNoOptionSelectedValue(this.value()) ? NO_OPTION_SELECTED_KEY : this.value(),\n            options: this.options(),\n        });\n    }\n\n    options() {\n        let options = {};\n\n        if (!this.readAttribute(this.field, 'required')) {\n            options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-optional');\n        } else if (BaseField.isNoOptionSelectedValue(this.value())) {\n            options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-required');\n        }\n\n        const validationIn = this.validationRule('in');\n\n        if (validationIn) {\n            validationIn.split(',').forEach(value => {\n                options[value] = value;\n            });\n        }\n\n        if (!BaseField.isNoOptionSelectedValue(this.value()) && typeof options[this.value()] === 'undefined') {\n            options[this.value()] = '(invalid) ' + this.value();\n        }\n\n        return options;\n    }\n}\n","import Button from 'flarum/components/Button';\nimport BaseField from './BaseField';\n\nexport default class UrlField extends BaseField {\n    editorInputProps() {\n        let props = super.editorInputProps();\n\n        props.type = 'url';\n        props.placeholder = 'https://example.com';\n\n        return props;\n    }\n\n    answerContent() {\n        const value = this.value();\n\n        if (!value) {\n            return null;\n        }\n\n        return Button.component({\n            onclick: () => this.to(),\n            className: 'Button Button--text',\n            icon: 'fas fa-link',\n            children: value.replace(/^https?:\\/\\//, ''),\n        });\n    }\n\n    to() {\n        const popup = window.open();\n        popup.location = this.value();\n    }\n}\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport UrlField from './UrlField';\n\nexport default class TypeFactory {\n    static typeForField({field, set, value}) {\n        let className = BaseField;\n\n        const type = this.identify(field);\n\n        if (type) {\n            className = this.types()[type];\n        }\n\n        return new className({\n            field,\n            set,\n            value,\n        });\n    }\n\n    static fieldAttribute(field, attribute) {\n        if (typeof field[attribute] === 'function') {\n            return field[attribute]();\n        }\n\n        return field[attribute];\n    }\n\n    static types() {\n        return {\n            boolean: BooleanField,\n            email: EmailField,\n            select: SelectField,\n            url: UrlField,\n        };\n    }\n\n    /**\n     * Identifies how to parse the field answer.\n     * @returns {null|string}\n     */\n    static identify(field) {\n        const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\n        let identified = null;\n\n        // If the field has a type we use it\n        const fieldType = this.fieldAttribute(field, 'type');\n        if (typeof this.types()[fieldType] !== 'undefined') {\n            return fieldType;\n        }\n\n        // If it's an advanced field with no type we then guess the best type\n        validation.forEach(rule => {\n            rule = rule.trim();\n\n            if (typeof this.types()[rule] !== 'undefined') {\n                identified = rule;\n            }\n        });\n\n        return identified;\n    }\n}\n","import app from 'flarum/app';\nimport UserPage from 'flarum/components/UserPage';\nimport Button from 'flarum/components/Button';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n    init() {\n        super.init();\n        this.loading = true;\n\n        this.loadUser(app.session.user.username());\n        this.enforceProfileCompletion = app.forum.attribute('masquerade.force-profile-completion') || false;\n        this.profileCompleted = app.forum.attribute('masquerade.profile-completed') || false;\n        this.fields = [];\n        this.answers = {};\n        this.load();\n    }\n\n    content() {\n        return m('form.ProfileConfigurePane', {\n            onsubmit: this.update.bind(this),\n        }, [\n            (this.enforceProfileCompletion && !this.profileCompleted) ?\n                m('.Alert.Alert--Error', app.translator.trans('fof-masquerade.forum.alerts.profile-completion-required')) :\n                null,\n            m('.Fields', this.fields\n                .sort((a, b) => a.sort() - b.sort())\n                .map(field => {\n                    if (!this.answers.hasOwnProperty(field.id())) {\n                        this.answers[field.id()] = field.answer() ? m.prop(field.answer().content()) : m.prop('');\n                    }\n\n                    return this.field(field);\n                })\n            ),\n            Button.component({\n                type: 'submit',\n                className: 'Button Button--primary',\n                children: app.translator.trans('fof-masquerade.forum.buttons.save-profile'),\n                loading: this.loading,\n            }),\n        ]);\n    }\n\n    field(field) {\n        const type = TypeFactory.typeForField({\n            field,\n            set: this.set.bind(this, field),\n            value: this.answers[field.id()],\n        });\n\n        return type.editorField();\n    }\n\n    load() {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n        }).then(\n            this.parseResponse.bind(this)\n        );\n    }\n\n    set(field, value) {\n        if (this.answers.hasOwnProperty(field.id())) {\n            this.answers[field.id()](value);\n        } else {\n            this.answers[field.id()] = m.prop(value);\n        }\n    }\n\n    update(e) {\n        e.preventDefault();\n\n        this.loading = true;\n        let data = this.answers;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n            data,\n        }).then(\n            this.parseResponse.bind(this)\n        ).catch(() => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    parseResponse(response) {\n        this.fields = app.store.pushPayload(response);\n        this.loading = false;\n        m.redraw();\n    }\n}\n","import UserPage from 'flarum/components/UserPage';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n    init() {\n        super.init();\n        this.loading = true;\n\n        this.fields = [];\n        this.answers = {};\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    content() {\n        return m('.Masquerade-Bio', [\n            m('.Fields', this.fields\n                .sort((a, b) => a.sort() - b.sort())\n                .map(field => {\n                    // UserID check must be done with == because userId() is number while id() is string\n                    this.answers[field.id()] = field.answer() && field.answer().userId() == this.user.id() ? field.answer().content() : null;\n\n                    return this.field(field);\n                })\n            ),\n        ]);\n    }\n\n    field(field) {\n        const type = TypeFactory.typeForField({\n            field,\n            value: m.prop(this.answers[field.id()]),\n        });\n\n        return type.answerField();\n    }\n\n    load(user) {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/profile/' + user.id(),\n        }).then(\n            this.parseResponse.bind(this)\n        );\n    }\n\n    show(user) {\n        this.load(user);\n\n        super.show(user);\n    }\n\n    parseResponse(response) {\n        this.answers = {};\n        this.fields = app.store.pushPayload(response);\n\n        this.loading = false;\n        m.redraw();\n    }\n}\n","import {extend} from \"flarum/extend\";\nimport UserCard from \"flarum/components/UserCard\";\nimport TypeFactory from './types/TypeFactory';\n\nexport default function () {\n    extend(UserCard.prototype, 'infoItems', function (items) {\n        let answers = app.forum.attribute('canViewMasquerade') ? this.props.user.bioFields() || [] : [];\n\n        items.add('masquerade-bio', m('div', answers.map(answer => {\n            const field = answer.attribute('field');\n            const type = TypeFactory.typeForField({\n                field,\n                value() {\n                    return answer.content();\n                },\n            });\n\n            return type.answerField();\n        })));\n    });\n}\n","import {extend} from \"flarum/extend\";\nimport app from \"flarum/app\";\nimport User from \"flarum/models/User\";\nimport Field from \"./../lib/models/Field\";\nimport Answer from \"./../lib/models/Answer\";\nimport Model from 'flarum/Model';\n\nimport addProfilePane from './addProfilePane';\nimport mutateUserHero from './mutateUserHero';\n\napp.initializers.add('fof-masquerade', app => {\n    app.store.models['masquerade-field'] = Field;\n    app.store.models['masquerade-answer'] = Answer;\n\n    User.prototype.bioFields = Model.hasMany('bioFields');\n\n    addProfilePane();\n\n    mutateUserHero();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport LinkButton from 'flarum/components/LinkButton';\nimport UserPage from 'flarum/components/UserPage';\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\nimport ProfilePane from './panes/ProfilePane';\n\nexport default function () {\n    app.routes['fof-masquerade-view-profile'] = {\n        path: '/masquerade/:username',\n        component: ProfilePane.component(),\n    };\n    app.routes['fof-masquerade-configure-profile'] = {\n        path: '/masquerade/configure',\n        component: ProfileConfigurePane.component(),\n    };\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        const isOwnProfileAndCanHaveMasquerade = app.forum.attribute('canHaveMasquerade') && app.session.user.id() === this.user.id();\n\n        if (app.forum.attribute('canViewMasquerade') || isOwnProfileAndCanHaveMasquerade) {\n            const href = isOwnProfileAndCanHaveMasquerade\n                ? app.route('fof-masquerade-configure-profile')\n                : app.route('fof-masquerade-view-profile', {username: this.user.username()});\n            items.add('masquerade',\n                LinkButton.component({\n                    href,\n                    children: app.translator.trans('fof-masquerade.forum.buttons.view-profile'),\n                    icon: 'far fa-id-card',\n                }),\n                200\n            );\n        }\n    });\n}\n"],"sourceRoot":""}