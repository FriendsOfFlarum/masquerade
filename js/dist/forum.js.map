{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/webpack/runtime/compat get default export","webpack://@fof/masquerade/webpack/runtime/define property getters","webpack://@fof/masquerade/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/masquerade/webpack/runtime/make namespace object","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/app']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/masquerade/./src/lib/models/Answer.ts","webpack://@fof/masquerade/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/masquerade/./src/forum/types/BaseField.js","webpack://@fof/masquerade/./src/forum/types/BooleanField.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/masquerade/./src/forum/types/EmailField.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Select']\"","webpack://@fof/masquerade/./src/forum/types/SelectField.js","webpack://@fof/masquerade/./src/forum/types/UrlField.js","webpack://@fof/masquerade/./src/forum/types/TypeFactory.js","webpack://@fof/masquerade/./src/forum/panes/ProfilePane.tsx","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Link']\"","webpack://@fof/masquerade/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/forum/panes/RootMasqueradePane.tsx","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/masquerade/./src/forum/index.js","webpack://@fof/masquerade/./src/forum/addProfilePane.js","webpack://@fof/masquerade/./src/forum/mutateUserHero.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\n\nexport default class Field extends Model {\n  name = Model.attribute('name');\n  description = Model.attribute('description');\n  type = Model.attribute('type');\n  validation = Model.attribute('validation');\n  required = Model.attribute('required');\n  prefix = Model.attribute('prefix');\n  icon = Model.attribute('icon');\n  sort = Model.attribute('sort');\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\n  answer = Model.hasOne('answer');\n  on_bio = Model.attribute('on_bio');\n\n  apiEndpoint() {\n    return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/computed'];","import app from 'flarum/common/app';\nimport Model from 'flarum/common/Model';\nimport computed from 'flarum/common/utils/computed';\n\nimport type Field from './Field';\n\nexport default class Answer extends Model {\n  content = Model.attribute('content');\n  fieldId = Model.attribute('fieldId');\n  field = computed<Field>('fieldId', (fieldId: string) => {\n    return app.store.getById('masquerade-field', fieldId);\n  });\n  userId = Model.attribute('user_id');\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import icon from 'flarum/common/helpers/icon';\n\n/* global m */\n\nexport default class BaseField {\n  constructor({ field, set, value }) {\n    this.field = field;\n    this.set = set;\n    this.value = value;\n  }\n\n  readAttribute(object, attribute) {\n    if (typeof object[attribute] === 'function') {\n      return object[attribute]();\n    }\n\n    return object[attribute];\n  }\n\n  /**\n   * Gets all Laravel validation rules split by rule\n   * @returns {Array}\n   */\n  validationRules() {\n    return this.readAttribute(this.field, 'validation').split('|');\n  }\n\n  /**\n   * Gets a Laravel validation rule by name\n   * @param {string} ruleName\n   * @returns {string|null}\n   */\n  validationRule(ruleName) {\n    let ruleContent = null;\n\n    this.validationRules().forEach((rule) => {\n      const split = rule.split(':', 2);\n\n      if (split[0] === ruleName) {\n        ruleContent = split[1];\n      }\n    });\n\n    return ruleContent;\n  }\n\n  editorField() {\n    return (\n      <div class=\"Form-group Field\">\n        <label>\n          {this.field.icon() ? [icon(this.field.icon()), ' '] : null} {this.field.name()} {this.field.required() ? '*' : null}\n        </label>\n\n        <div class=\"FormField\">\n          {this.field.prefix() ? m('.prefix', this.field.prefix()) : null}\n          {this.editorInput()}\n          {this.field.description() ? <div class=\"helpText\">{this.field.description()}</div> : null}\n        </div>\n      </div>\n    );\n  }\n\n  editorInput() {\n    return <input {...this.editorInputAttrs()} />;\n  }\n\n  editorInputAttrs() {\n    return {\n      className: 'FormControl',\n      oninput: (event) => {\n        this.set(event.target.value);\n      },\n      value: this.value,\n      required: this.field.required(),\n    };\n  }\n\n  answerField() {\n    const iconName = this.readAttribute(this.field, 'icon');\n\n    return (\n      <div className={`Masquerade-Bio-Set${this.hasAnswer() ? '' : ' Masquerade-Bio-Set--empty'}`}>\n        <span class=\"Masquerade-Bio-Field\">\n          {iconName && <>{icon(iconName)} </>}\n          {this.readAttribute(this.field, 'name')}:{' '}\n        </span>\n        <span class=\"Masquerade-Bio-Answer\">{this.answerContent()}</span>\n      </div>\n    );\n  }\n\n  answerContent() {\n    return this.value;\n  }\n\n  hasAnswer() {\n    const answerContent = this.answerContent();\n\n    if (answerContent === null) {\n      return false;\n    }\n\n    if (typeof answerContent === 'object') {\n      return !!Object.keys(answerContent).length;\n    }\n\n    return !!answerContent?.length;\n  }\n\n  static isNoOptionSelectedValue(value) {\n    // The value can be null when coming from the API\n    // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\n    return value === null || value === '';\n  }\n}\n","import icon from 'flarum/common/helpers/icon';\nimport BaseField from './BaseField';\n\nexport default class BooleanField extends BaseField {\n  editorInput() {\n    return this.options().map((option) =>\n      m(\n        'div',\n        m('label', [\n          m('input[type=radio]', {\n            checked: option.selected(this.value),\n            onclick: () => {\n              this.set(option.key);\n            },\n          }),\n          ' ' + option.label,\n        ])\n      )\n    );\n  }\n\n  options() {\n    let options = [];\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options.push({\n        selected: (value) => BaseField.isNoOptionSelectedValue(value),\n        key: null,\n        label: app.translator.trans('fof-masquerade.forum.fields.select.none-optional'),\n      });\n    }\n\n    options.push({\n      selected: (value) => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\n      key: 'true',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.yes'),\n    });\n\n    options.push({\n      selected: (value) => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\n      key: 'false',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.no'),\n    });\n\n    // This is probably overkill because it looks like the backend casts the value anyway\n    if (!BaseField.isNoOptionSelectedValue(this.value) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value) === -1) {\n      options.push({\n        selected: () => true,\n        key: this.value,\n        label: '(invalid) ' + this.value,\n      });\n    }\n\n    return options;\n  }\n\n  answerContent() {\n    if (BaseField.isNoOptionSelectedValue(this.value)) {\n      return '';\n    }\n\n    return [1, '1', true, 'true', 'yes'].indexOf(this.value) !== -1\n      ? [icon('far fa-check-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.yes')]\n      : [icon('far fa-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.no')];\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class EmailField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'email';\n    attrs.placeholder = 'you@example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    const email = value\n      .split(/@|\\./)\n      .map((segment) => {\n        return segment.replace(/(.{2})./g, '$1*');\n      })\n      .join('*');\n\n    return Button.component(\n      {\n        onclick: () => this.mailTo(),\n        className: 'Button Button--text',\n        icon: 'far fa-envelope',\n      },\n      email\n    );\n  }\n\n  mailTo() {\n    window.location = 'mailto:' + this.value;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","import app from 'flarum/forum/app';\nimport Select from 'flarum/common/components/Select';\nimport BaseField from './BaseField';\n\nconst NO_OPTION_SELECTED_KEY = 'fof_masquerade_no_option_selected';\n\nexport default class SelectField extends BaseField {\n  editorInput() {\n    return Select.component({\n      onchange: (value) => {\n        if (value === NO_OPTION_SELECTED_KEY) {\n          value = '';\n        }\n\n        this.set(value);\n      },\n      value: BaseField.isNoOptionSelectedValue(this.value) ? NO_OPTION_SELECTED_KEY : this.value,\n      options: this.options(),\n    });\n  }\n\n  options() {\n    let options = {};\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-optional');\n    } else if (BaseField.isNoOptionSelectedValue(this.value)) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-required');\n    }\n\n    const validationIn = this.validationRule('in');\n\n    if (validationIn) {\n      validationIn.split(',').forEach((value) => {\n        options[value] = value;\n      });\n    }\n\n    if (!BaseField.isNoOptionSelectedValue(this.value) && typeof options[this.value] === 'undefined') {\n      options[this.value] = '(invalid) ' + this.value;\n    }\n\n    return options;\n  }\n}\n","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class UrlField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'url';\n    attrs.placeholder = 'https://example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    return Button.component(\n      {\n        onclick: () => this.to(),\n        className: 'Button Button--text',\n        icon: 'fas fa-link',\n      },\n      value.replace(/^https?:\\/\\//, '')\n    );\n  }\n\n  to() {\n    const popup = window.open();\n    popup.location = this.value;\n  }\n}\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport UrlField from './UrlField';\n\nexport default class TypeFactory {\n  static typeForField({ field, set = undefined, value }) {\n    let className = BaseField;\n\n    const type = this.identify(field);\n\n    if (type) {\n      className = this.types()[type];\n    }\n\n    return new className({\n      field,\n      set,\n      value,\n    });\n  }\n\n  static fieldAttribute(field, attribute) {\n    if (typeof field[attribute] === 'function') {\n      return field[attribute]();\n    }\n\n    return field[attribute];\n  }\n\n  static types() {\n    return {\n      boolean: BooleanField,\n      email: EmailField,\n      select: SelectField,\n      url: UrlField,\n    };\n  }\n\n  /**\n   * Identifies how to parse the field answer.\n   * @returns {null|string}\n   */\n  static identify(field) {\n    const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\n    let identified = null;\n\n    // If the field has a type we use it\n    const fieldType = this.fieldAttribute(field, 'type');\n    if (typeof this.types()[fieldType] !== 'undefined') {\n      return fieldType;\n    }\n\n    // If it's an advanced field with no type we then guess the best type\n    validation.forEach((rule) => {\n      rule = rule.trim();\n\n      if (typeof this.types()[rule] !== 'undefined') {\n        identified = rule;\n      }\n    });\n\n    return identified;\n  }\n}\n","import app from 'flarum/forum/app';\n\nimport Component from 'flarum/common/Component';\nimport TypeFactory from '../types/TypeFactory';\nimport type Answer from '../../lib/models/Answer';\nimport type Field from 'src/lib/models/Field';\nimport type User from 'flarum/common/models/User';\n\nexport default class ProfilePane extends Component {\n  answers!: Answer[];\n  user!: User;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.answers = [];\n    this.user = this.attrs.user;\n\n    this.load(this.user);\n  }\n\n  view() {\n    return (\n      <div class=\"Masquerade-Bio\">\n        <div class=\"Fields\">\n          {app.store\n            .all('masquerade-field')\n            .sort((a, b) => a.sort() - b.sort())\n            .map((field) => {\n              const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n              return this.field(field, answer?.content() || '');\n            })}\n        </div>\n      </div>\n    );\n  }\n\n  field(field: Field, content) {\n    const type = TypeFactory.typeForField({\n      field,\n      value: content,\n    });\n\n    return type.answerField();\n  }\n\n  load() {\n    this.answers = this.user.masqueradeAnswers();\n\n    if (this.answers === false) {\n      this.answers = [];\n      app.store.find('users', this.user.id(), { include: 'masqueradeAnswers' }).then(() => {\n        this.answers = this.user.masqueradeAnswers();\n        m.redraw();\n      });\n    }\n\n    m.redraw();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import app from 'flarum/forum/app';\n\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport TypeFactory from '../types/TypeFactory';\nimport Component from 'flarum/common/Component';\n\nexport default class ProfileConfigurePane extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.enforceProfileCompletion = app.forum.attribute('masquerade.force-profile-completion') || false;\n    this.profileCompleted = app.forum.attribute('masquerade.profile-completed') || false;\n    this.profileNowCompleted = false; // Show \"after required\" text\n    this.answers = [];\n    this.answerValues = {};\n    this.user = this.attrs.user;\n    this.load();\n\n    // Show disabled state if everything is saved\n    // Unless the profile isn't complete, in which case show enabled button so it's obvious you will need to save\n    this.dirty = !this.profileCompleted;\n  }\n\n  view() {\n    return (\n      <form class=\"ProfileConfigurePane\" onsubmit={this.update.bind(this)}>\n        {!!(this.enforceProfileCompletion && !this.profileCompleted) && (\n          <div class=\"Alert Alert--Error\">{app.translator.trans('fof-masquerade.forum.alerts.profile-completion-required')}</div>\n        )}\n\n        <div class=\"Fields\">\n          {app.store\n            .all('masquerade-field')\n            .sort((a, b) => a.sort() - b.sort())\n            .map((field) => {\n              return this.field(field);\n            })}\n        </div>\n\n        <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading} disabled={!this.dirty}>\n          {app.translator.trans('fof-masquerade.forum.buttons.save-profile')}\n        </Button>\n\n        {!!this.profileNowCompleted && (\n          <span class=\"Masquerade-NowCompleted\">\n            {app.translator.trans('fof-masquerade.forum.alerts.profile-completed', {\n              a: <Link href={app.route('index')} />,\n            })}\n          </span>\n        )}\n      </form>\n    );\n  }\n\n  field(field) {\n    const type = TypeFactory.typeForField({\n      field,\n      set: this.set.bind(this, field),\n      value: this.answerValues[field.id()],\n    });\n\n    return type.editorField();\n  }\n\n  load() {\n    this.answers = this.user.masqueradeAnswers();\n\n    if (this.answers === false) {\n      this.answers = [];\n      app.store.find('users', this.user.id(), { include: 'masqueradeAnswers' }).then(() => {\n        this.answers = this.user.masqueradeAnswers();\n        this.answerValues = {};\n\n        app.store.all('masquerade-field').forEach((field) => {\n          const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n          this.answerValues[field.id()] = answer ? answer.content() : '';\n        });\n\n        this.loading = false;\n        m.redraw();\n      });\n    } else {\n      this.loading = false;\n\n      app.store.all('masquerade-field').forEach((field) => {\n        const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n        this.answerValues[field.id()] = answer ? answer.content() : '';\n      });\n    }\n\n    m.redraw();\n  }\n\n  set(field, value) {\n    this.answerValues[field.id()] = value;\n    this.dirty = true;\n  }\n\n  update(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/masquerade/configure/' + this.user.id(),\n        body: this.answerValues,\n      })\n      .then((response) => {\n        this.dirty = false;\n\n        if (!this.profileCompleted) {\n          this.profileCompleted = true;\n          this.profileNowCompleted = true;\n        }\n\n        this.parseResponse(response);\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  parseResponse(response) {\n    console.log(response);\n    this.answers = app.store.pushPayload(response);\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import UserPage from 'flarum/forum/components/UserPage';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport ProfilePane from './ProfilePane';\nimport ProfileConfigurePane from './ProfileConfigurePane';\n\nexport default class RootMasqueradePane extends UserPage {\n  loading = true;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  pageContentComponent() {\n    if (!this.user) return null;\n\n    if (this.user.canEditMasqueradeProfile()) return <ProfileConfigurePane user={this.user} />;\n    else return <ProfilePane user={this.user} />;\n  }\n\n  show(user) {\n    super.show(user);\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  content() {\n    return (\n      <div class=\"MasqueradeRoot\">\n        {this.loading && <LoadingIndicator />}\n        {this.pageContentComponent()}\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","import app from 'flarum/forum/app';\nimport User from 'flarum/common/models/User';\nimport Field from './../lib/models/Field';\nimport Answer from './../lib/models/Answer';\nimport Model from 'flarum/common/Model';\n\nimport addProfilePane from './addProfilePane';\nimport mutateUserHero from './mutateUserHero';\n\n// Exports\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\nimport ProfilePane from './panes/ProfilePane';\nimport RootMasqueradePane from './panes/RootMasqueradePane';\nimport BaseField from './types/BaseField';\nimport BooleanField from './types/BooleanField';\nimport EmailField from './types/EmailField';\nimport SelectField from './types/SelectField';\nimport TypeFactory from './types/TypeFactory';\nimport UrlField from './types/UrlField';\n\napp.initializers.add('fof-masquerade', (app) => {\n  app.store.models['masquerade-field'] = Field;\n  app.store.models['masquerade-answer'] = Answer;\n\n  User.prototype.bioFields = Model.hasMany('bioFields');\n  User.prototype.masqueradeAnswers = Model.hasMany('masqueradeAnswers');\n  User.prototype.canEditMasqueradeProfile = Model.attribute('canEditMasqueradeProfile');\n\n  addProfilePane();\n\n  mutateUserHero();\n});\n\nconst components = {\n  ProfileConfigurePane,\n  ProfilePane,\n  RootMasqueradePane,\n};\n\nconst types = {\n  BaseField,\n  BooleanField,\n  EmailField,\n  SelectField,\n  TypeFactory,\n  UrlField,\n};\n\nexport { components, types };\n","import app from 'flarum/forum/app';\n\nimport { extend } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport RootMasqueradePane from './panes/RootMasqueradePane';\n\nexport default function addProfilePane() {\n  app.routes['fof-masquerade'] = {\n    path: '/u/:username/masquerade',\n    resolver: {\n      onmatch() {\n        if (!app.forum.attribute('canViewMasquerade')) throw new Error();\n\n        return RootMasqueradePane;\n      },\n    },\n  };\n\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (app.forum.attribute('canViewMasquerade') || this.user.canEditMasqueradeProfile()) {\n      const edit = this.user.canEditMasqueradeProfile();\n\n      items.add(\n        'masquerade',\n        LinkButton.component(\n          {\n            href: app.route('fof-masquerade', { username: this.user.slug() }),\n            icon: 'far fa-id-card',\n            'data-editProfile': edit,\n          },\n          app.translator.trans(`fof-masquerade.forum.buttons.${edit ? 'edit' : 'view'}-profile`)\n        ),\n        200\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport TypeFactory from './types/TypeFactory';\n\nexport default function mutateUserHero() {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    const answers = app.forum.attribute('canViewMasquerade') ? this.attrs.user.bioFields() || [] : [];\n\n    items.add(\n      'masquerade-bio',\n      <div>\n        {answers.map((answer) => {\n          const field = answer.attribute('field');\n          const type = TypeFactory.typeForField({\n            field,\n            value: answer.content(),\n          });\n\n          return type.answerField();\n        })}\n      </div>\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Field","_Model","_this","_len","arguments","length","args","Array","_key","apply","concat","name","Model","description","type","validation","required","prefix","icon","sort","deleted_at","answer","on_bio","apiEndpoint","this","exists","data","id","Answer","content","fieldId","field","computed","app","getById","userId","BaseField","_ref","set","_proto","readAttribute","object","attribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","m","class","editorInput","editorInputAttrs","className","oninput","event","target","answerField","iconName","hasAnswer","'['","answerContent","keys","isNoOptionSelectedValue","BooleanField","_BaseField","options","map","option","checked","selected","onclick","label","push","translator","trans","indexOf","EmailField","attrs","placeholder","email","segment","replace","join","Button","mailTo","window","location","NO_OPTION_SELECTED_KEY","SelectField","Select","onchange","validationIn","UrlField","to","open","TypeFactory","typeForField","_ref$set","undefined","identify","types","fieldAttribute","boolean","select","url","identified","fieldType","trim","ProfilePane","_Component","answers","user","oninit","vnode","loading","load","view","_this2","all","b","find","_a$field","_this3","masqueradeAnswers","include","then","redraw","Component","ProfileConfigurePane","enforceProfileCompletion","profileCompleted","profileNowCompleted","answerValues","dirty","onsubmit","update","bind","disabled","Link","href","_a$field2","e","preventDefault","method","body","response","parseResponse","console","log","pushPayload","RootMasqueradePane","_UserPage","loadUser","route","param","pageContentComponent","canEditMasqueradeProfile","show","LoadingIndicator","UserPage","add","store","models","User","bioFields","path","resolver","onmatch","Error","extend","items","edit","LinkButton","username","slug","UserCard","components"],"sourceRoot":""}