{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/external \"flarum.core.compat['common/Model']\"","webpack://@fof/masquerade/external \"flarum.core.compat['forum/app']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/extend']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/models/User']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Link']\"","webpack://@fof/masquerade/external \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/masquerade/./src/lib/models/Answer.js","webpack://@fof/masquerade/./src/forum/types/BaseField.js","webpack://@fof/masquerade/./src/forum/types/BooleanField.js","webpack://@fof/masquerade/./src/forum/types/EmailField.js","webpack://@fof/masquerade/./src/forum/types/SelectField.js","webpack://@fof/masquerade/./src/forum/types/UrlField.js","webpack://@fof/masquerade/./src/forum/types/TypeFactory.js","webpack://@fof/masquerade/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/forum/panes/ProfilePane.js","webpack://@fof/masquerade/./src/forum/mutateUserHero.js","webpack://@fof/masquerade/./src/forum/index.js","webpack://@fof/masquerade/./src/forum/addProfilePane.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Field","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","apiEndpoint","this","exists","data","id","Answer","content","field","userId","BaseField","set","readAttribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","editorInput","editorInputAttrs","className","oninput","event","target","answerField","iconName","hasAnswer","answerContent","Boolean","keys","length","isNoOptionSelectedValue","BooleanField","options","map","option","checked","selected","onclick","label","push","app","translator","trans","indexOf","EmailField","attrs","placeholder","email","segment","replace","join","Button","component","mailTo","window","location","Select","onchange","validationIn","UrlField","to","open","TypeFactory","typeForField","identify","types","fieldAttribute","boolean","select","SelectField","url","identified","fieldType","trim","ProfileConfigurePane","oninit","vnode","loading","loadUser","session","user","username","enforceProfileCompletion","forum","profileCompleted","profileNowCompleted","fields","answers","load","dirty","onsubmit","update","a","b","disabled","Link","href","route","request","method","then","parseResponse","e","preventDefault","body","response","redraw","store","pushPayload","UserPage","param","show","extend","UserCard","items","bioFields","add","initializers","models","User","hasMany","routes","path","ProfilePane","isOwnProfileAndCanHaveMasquerade","LinkButton","mutateUserHero"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['forum/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['forum/components/UserPage'];","import Model from 'flarum/common/Model';\n\nexport default class Field extends Model {\n  name = Model.attribute('name');\n  description = Model.attribute('description');\n  type = Model.attribute('type');\n  validation = Model.attribute('validation');\n  required = Model.attribute('required');\n  prefix = Model.attribute('prefix');\n  icon = Model.attribute('icon');\n  sort = Model.attribute('sort');\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\n  answer = Model.hasOne('answer');\n  on_bio = Model.attribute('on_bio');\n\n  apiEndpoint() {\n    return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['forum/components/UserCard'];","import Model from 'flarum/common/Model';\n\nexport default class Answer extends Model {\n  content = Model.attribute('content');\n  field = Model.hasOne('field');\n  userId = Model.attribute('user_id');\n\n  apiEndpoint() {\n    return '/masquerade/configure' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import icon from 'flarum/common/helpers/icon';\n\n/* global m */\n\nexport default class BaseField {\n  constructor({ field, set, value }) {\n    this.field = field;\n    this.set = set;\n    this.value = value;\n  }\n\n  readAttribute(object, attribute) {\n    if (typeof object[attribute] === 'function') {\n      return object[attribute]();\n    }\n\n    return object[attribute];\n  }\n\n  /**\n   * Gets all Laravel validation rules split by rule\n   * @returns {Array}\n   */\n  validationRules() {\n    return this.readAttribute(this.field, 'validation').split('|');\n  }\n\n  /**\n   * Gets a Laravel validation rule by name\n   * @param {string} ruleName\n   * @returns {string|null}\n   */\n  validationRule(ruleName) {\n    let ruleContent = null;\n\n    this.validationRules().forEach((rule) => {\n      const split = rule.split(':', 2);\n\n      if (split[0] === ruleName) {\n        ruleContent = split[1];\n      }\n    });\n\n    return ruleContent;\n  }\n\n  editorField() {\n    return m('.Form-group.Field', [\n      m('label', [this.field.icon() ? [icon(this.field.icon()), ' '] : null, this.field.name(), this.field.required() ? ' *' : null]),\n      m('.FormField', [\n        this.field.prefix() ? m('.prefix', this.field.prefix()) : null,\n        this.editorInput(),\n        this.field.description() ? m('.helpText', this.field.description()) : null,\n      ]),\n    ]);\n  }\n\n  editorInput() {\n    return m('input', this.editorInputAttrs());\n  }\n\n  editorInputAttrs() {\n    return {\n      className: 'FormControl',\n      oninput: (event) => {\n        this.set(event.target.value);\n      },\n      value: this.value,\n      required: this.field.required(),\n    };\n  }\n\n  answerField() {\n    const iconName = this.readAttribute(this.field, 'icon');\n\n    return (\n      <div className={`Masquerade-Bio-Set${this.hasAnswer() ? '' : ' Masquerade-Bio-Set--empty'}`}>\n        <span className=\"Masquerade-Bio-Field\">\n          {iconName && [icon(iconName), ' ']}\n          {this.readAttribute(this.field, 'name')}:{' '}\n        </span>\n        <span className=\"Masquerade-Bio-Answer\">{this.answerContent()}</span>\n      </div>\n    );\n  }\n\n  answerContent() {\n    return this.value;\n  }\n\n  hasAnswer() {\n    const answerContent = this.answerContent();\n\n    if (answerContent === null) {\n      return false;\n    }\n\n    if (typeof answerContent === 'object') {\n      return Boolean(Object.keys(answerContent).length);\n    }\n\n    return Boolean(answerContent?.length);\n  }\n\n  static isNoOptionSelectedValue(value) {\n    // The value can be null when coming from the API\n    // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\n    return value === null || value === '';\n  }\n}\n","import icon from 'flarum/common/helpers/icon';\nimport BaseField from './BaseField';\n\nexport default class BooleanField extends BaseField {\n  editorInput() {\n    return this.options().map((option) =>\n      m(\n        'div',\n        m('label', [\n          m('input[type=radio]', {\n            checked: option.selected(this.value),\n            onclick: () => {\n              this.set(option.key);\n            },\n          }),\n          ' ' + option.label,\n        ])\n      )\n    );\n  }\n\n  options() {\n    let options = [];\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options.push({\n        selected: (value) => BaseField.isNoOptionSelectedValue(value),\n        key: null,\n        label: app.translator.trans('fof-masquerade.forum.fields.select.none-optional'),\n      });\n    }\n\n    options.push({\n      selected: (value) => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\n      key: 'true',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.yes'),\n    });\n\n    options.push({\n      selected: (value) => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\n      key: 'false',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.no'),\n    });\n\n    // This is probably overkill because it looks like the backend casts the value anyway\n    if (!BaseField.isNoOptionSelectedValue(this.value) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value) === -1) {\n      options.push({\n        selected: () => true,\n        key: this.value,\n        label: '(invalid) ' + this.value,\n      });\n    }\n\n    return options;\n  }\n\n  answerContent() {\n    if (BaseField.isNoOptionSelectedValue(this.value)) {\n      return '';\n    }\n\n    return [1, '1', true, 'true', 'yes'].indexOf(this.value) !== -1\n      ? [icon('far fa-check-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.yes')]\n      : [icon('far fa-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.no')];\n  }\n}\n","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class EmailField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'email';\n    attrs.placeholder = 'you@example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    const email = value\n      .split(/@|\\./)\n      .map((segment) => {\n        return segment.replace(/(.{2})./g, '$1*');\n      })\n      .join('*');\n\n    return Button.component(\n      {\n        onclick: () => this.mailTo(),\n        className: 'Button Button--text',\n        icon: 'far fa-envelope',\n      },\n      email\n    );\n  }\n\n  mailTo() {\n    window.location = 'mailto:' + this.value;\n  }\n}\n","import Select from 'flarum/common/components/Select';\nimport BaseField from './BaseField';\n\nconst NO_OPTION_SELECTED_KEY = 'fof_masquerade_no_option_selected';\n\nexport default class EmailField extends BaseField {\n  editorInput() {\n    return Select.component({\n      onchange: (value) => {\n        if (value === NO_OPTION_SELECTED_KEY) {\n          value = null;\n        }\n\n        this.set(value);\n      },\n      value: BaseField.isNoOptionSelectedValue(this.value) ? NO_OPTION_SELECTED_KEY : this.value,\n      options: this.options(),\n    });\n  }\n\n  options() {\n    let options = {};\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-optional');\n    } else if (BaseField.isNoOptionSelectedValue(this.value)) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-required');\n    }\n\n    const validationIn = this.validationRule('in');\n\n    if (validationIn) {\n      validationIn.split(',').forEach((value) => {\n        options[value] = value;\n      });\n    }\n\n    if (!BaseField.isNoOptionSelectedValue(this.value) && typeof options[this.value] === 'undefined') {\n      options[this.value] = '(invalid) ' + this.value;\n    }\n\n    return options;\n  }\n}\n","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class UrlField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'url';\n    attrs.placeholder = 'https://example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    return Button.component(\n      {\n        onclick: () => this.to(),\n        className: 'Button Button--text',\n        icon: 'fas fa-link',\n      },\n      value.replace(/^https?:\\/\\//, '')\n    );\n  }\n\n  to() {\n    const popup = window.open();\n    popup.location = this.value;\n  }\n}\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport UrlField from './UrlField';\n\nexport default class TypeFactory {\n  static typeForField({ field, set, value }) {\n    let className = BaseField;\n\n    const type = this.identify(field);\n\n    if (type) {\n      className = this.types()[type];\n    }\n\n    return new className({\n      field,\n      set,\n      value,\n    });\n  }\n\n  static fieldAttribute(field, attribute) {\n    if (typeof field[attribute] === 'function') {\n      return field[attribute]();\n    }\n\n    return field[attribute];\n  }\n\n  static types() {\n    return {\n      boolean: BooleanField,\n      email: EmailField,\n      select: SelectField,\n      url: UrlField,\n    };\n  }\n\n  /**\n   * Identifies how to parse the field answer.\n   * @returns {null|string}\n   */\n  static identify(field) {\n    const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\n    let identified = null;\n\n    // If the field has a type we use it\n    const fieldType = this.fieldAttribute(field, 'type');\n    if (typeof this.types()[fieldType] !== 'undefined') {\n      return fieldType;\n    }\n\n    // If it's an advanced field with no type we then guess the best type\n    validation.forEach((rule) => {\n      rule = rule.trim();\n\n      if (typeof this.types()[rule] !== 'undefined') {\n        identified = rule;\n      }\n    });\n\n    return identified;\n  }\n}\n","import app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.loadUser(app.session.user.username());\n    this.enforceProfileCompletion = app.forum.attribute('masquerade.force-profile-completion') || false;\n    this.profileCompleted = app.forum.attribute('masquerade.profile-completed') || false;\n    this.profileNowCompleted = false; // Show \"after required\" text\n    this.fields = [];\n    this.answers = {};\n    this.load();\n\n    // Show disabled state if everything is saved\n    // Unless the profile isn't complete, in which case show enabled button so it's obvious you will need to save\n    this.dirty = !this.profileCompleted;\n  }\n\n  content() {\n    return m(\n      'form.ProfileConfigurePane',\n      {\n        onsubmit: this.update.bind(this),\n      },\n      [\n        this.enforceProfileCompletion && !this.profileCompleted\n          ? m('.Alert.Alert--Error', app.translator.trans('fof-masquerade.forum.alerts.profile-completion-required'))\n          : null,\n        m(\n          '.Fields',\n          this.fields\n            .sort((a, b) => a.sort() - b.sort())\n            .map((field) => {\n              if (!this.answers.hasOwnProperty(field.id())) {\n                this.answers[field.id()] = field.answer() ? field.answer().content() : '';\n              }\n\n              return this.field(field);\n            })\n        ),\n        Button.component(\n          {\n            type: 'submit',\n            className: 'Button Button--primary',\n            loading: this.loading,\n            disabled: !this.dirty,\n          },\n          app.translator.trans('fof-masquerade.forum.buttons.save-profile')\n        ),\n        this.profileNowCompleted\n          ? m(\n              'span.Masquerade-NowCompleted',\n              app.translator.trans('fof-masquerade.forum.alerts.profile-completed', {\n                a: m(Link, {\n                  href: app.route('index'),\n                }),\n              })\n            )\n          : null,\n      ]\n    );\n  }\n\n  field(field) {\n    const type = TypeFactory.typeForField({\n      field,\n      set: this.set.bind(this, field),\n      value: this.answers[field.id()],\n    });\n\n    return type.editorField();\n  }\n\n  load() {\n    app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n      })\n      .then(this.parseResponse.bind(this));\n  }\n\n  set(field, value) {\n    this.answers[field.id()] = value;\n    this.dirty = true;\n  }\n\n  update(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/masquerade/configure',\n        body: this.answers,\n      })\n      .then((response) => {\n        this.dirty = false;\n        if (!this.profileCompleted) {\n          this.profileCompleted = true;\n          this.profileNowCompleted = true;\n        }\n\n        this.parseResponse(response);\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  parseResponse(response) {\n    this.fields = app.store.pushPayload(response);\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import UserPage from 'flarum/forum/components/UserPage';\nimport TypeFactory from './../types/TypeFactory';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.fields = [];\n    this.answers = {};\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  content() {\n    return m('.Masquerade-Bio', [\n      m(\n        '.Fields',\n        this.fields\n          .sort((a, b) => a.sort() - b.sort())\n          .map((field) => {\n            // UserID check must be done with == because userId() is number while id() is string\n            this.answers[field.id()] = field.answer() && field.answer().userId() == this.user.id() ? field.answer().content() : null;\n\n            return this.field(field);\n          })\n      ),\n    ]);\n  }\n\n  field(field) {\n    const type = TypeFactory.typeForField({\n      field,\n      value: this.answers[field.id()],\n    });\n\n    return type.answerField();\n  }\n\n  load(user) {\n    app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/masquerade/profile/' + user.id(),\n      })\n      .then(this.parseResponse.bind(this));\n  }\n\n  show(user) {\n    this.load(user);\n\n    super.show(user);\n  }\n\n  parseResponse(response) {\n    this.answers = {};\n    this.fields = app.store.pushPayload(response);\n\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import { extend } from 'flarum/common/extend';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport TypeFactory from './types/TypeFactory';\n\nexport default function () {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    let answers = app.forum.attribute('canViewMasquerade') ? this.attrs.user.bioFields() || [] : [];\n\n    items.add(\n      'masquerade-bio',\n      m(\n        'div',\n        answers.map((answer) => {\n          const field = answer.attribute('field');\n          const type = TypeFactory.typeForField({\n            field,\n            value: answer.content(),\n          });\n\n          return type.answerField();\n        })\n      )\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport User from 'flarum/common/models/User';\nimport Field from './../lib/models/Field';\nimport Answer from './../lib/models/Answer';\nimport Model from 'flarum/common/Model';\n\nimport addProfilePane from './addProfilePane';\nimport mutateUserHero from './mutateUserHero';\n\napp.initializers.add('fof-masquerade', (app) => {\n  app.store.models['masquerade-field'] = Field;\n  app.store.models['masquerade-answer'] = Answer;\n\n  User.prototype.bioFields = Model.hasMany('bioFields');\n\n  addProfilePane();\n\n  mutateUserHero();\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\nimport ProfilePane from './panes/ProfilePane';\n\nexport default function () {\n  // The configure route must be registered first because otherwise there's a conflict between the two routes\n  app.routes['fof-masquerade-configure-profile'] = {\n    path: '/masquerade/configure',\n    component: ProfileConfigurePane,\n  };\n  app.routes['fof-masquerade-view-profile'] = {\n    path: '/masquerade/:username',\n    component: ProfilePane,\n  };\n\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const isOwnProfileAndCanHaveMasquerade = app.forum.attribute('canHaveMasquerade') && app.session.user.id() === this.user.id();\n\n    if (app.forum.attribute('canViewMasquerade') || isOwnProfileAndCanHaveMasquerade) {\n      const href = isOwnProfileAndCanHaveMasquerade\n        ? app.route('fof-masquerade-configure-profile')\n        : app.route('fof-masquerade-view-profile', { username: this.user.username() });\n\n      items.add(\n        'masquerade',\n        LinkButton.component(\n          {\n            href,\n            icon: 'far fa-id-card',\n          },\n          app.translator.trans(`fof-masquerade.forum.buttons.${isOwnProfileAndCanHaveMasquerade ? 'edit' : 'view'}-profile`)\n        ),\n        200\n      );\n    }\n  });\n}\n"],"sourceRoot":""}