{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/webpack/runtime/compat get default export","webpack://@fof/masquerade/webpack/runtime/define property getters","webpack://@fof/masquerade/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/masquerade/webpack/runtime/make namespace object","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/masquerade/./src/forum/types/BaseField.js","webpack://@fof/masquerade/./src/forum/types/BooleanField.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/masquerade/./src/forum/types/EmailField.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Select']\"","webpack://@fof/masquerade/./src/forum/types/SelectField.js","webpack://@fof/masquerade/./src/forum/types/UrlField.js","webpack://@fof/masquerade/./src/forum/types/TypeFactory.js","webpack://@fof/masquerade/./src/forum/panes/ProfilePane.tsx","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Link']\"","webpack://@fof/masquerade/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/forum/panes/RootMasqueradePane.tsx","webpack://@fof/masquerade/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/extenders']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/app']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/masquerade/./src/lib/models/Answer.ts","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/./src/common/extend.ts","webpack://@fof/masquerade/./src/forum/extend.ts","webpack://@fof/masquerade/./src/forum/panes/index.ts","webpack://@fof/masquerade/./src/forum/types/index.ts","webpack://@fof/masquerade/./src/forum/index.ts","webpack://@fof/masquerade/./src/forum/addProfilePane.js","webpack://@fof/masquerade/./src/forum/mutateUserHero.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import icon from 'flarum/common/helpers/icon';\n\n/* global m */\n\nexport default class BaseField {\n  constructor({ field, set, value }) {\n    this.field = field;\n    this.set = set;\n    this.value = value;\n  }\n\n  readAttribute(object, attribute) {\n    if (typeof object[attribute] === 'function') {\n      return object[attribute]();\n    }\n\n    return object[attribute];\n  }\n\n  /**\n   * Gets all Laravel validation rules split by rule\n   * @returns {Array}\n   */\n  validationRules() {\n    return this.readAttribute(this.field, 'validation').split('|');\n  }\n\n  /**\n   * Gets a Laravel validation rule by name\n   * @param {string} ruleName\n   * @returns {string|null}\n   */\n  validationRule(ruleName) {\n    let ruleContent = null;\n\n    this.validationRules().forEach((rule) => {\n      const split = rule.split(':', 2);\n\n      if (split[0] === ruleName) {\n        ruleContent = split[1];\n      }\n    });\n\n    return ruleContent;\n  }\n\n  editorField() {\n    return (\n      <div class=\"Form-group Field\">\n        <label>\n          {this.field.icon() ? [icon(this.field.icon()), ' '] : null} {this.field.name()} {this.field.required() ? '*' : null}\n        </label>\n\n        <div class=\"FormField\">\n          {this.field.prefix() ? m('.prefix', this.field.prefix()) : null}\n          {this.editorInput()}\n          {this.field.description() ? <div class=\"helpText\">{this.field.description()}</div> : null}\n        </div>\n      </div>\n    );\n  }\n\n  editorInput() {\n    return <input {...this.editorInputAttrs()} />;\n  }\n\n  editorInputAttrs() {\n    return {\n      className: 'FormControl',\n      oninput: (event) => {\n        this.set(event.target.value);\n      },\n      value: this.value,\n      required: this.field.required(),\n    };\n  }\n\n  answerField() {\n    const iconName = this.readAttribute(this.field, 'icon');\n\n    return (\n      <div className={`Masquerade-Bio-Set${this.hasAnswer() ? '' : ' Masquerade-Bio-Set--empty'}`}>\n        <span class=\"Masquerade-Bio-Field\">\n          {iconName && <>{icon(iconName)} </>}\n          {this.readAttribute(this.field, 'name')}:{' '}\n        </span>\n        <span class=\"Masquerade-Bio-Answer\">{this.answerContent()}</span>\n      </div>\n    );\n  }\n\n  answerContent() {\n    return this.value;\n  }\n\n  hasAnswer() {\n    const answerContent = this.answerContent();\n\n    if (answerContent === null) {\n      return false;\n    }\n\n    if (typeof answerContent === 'object') {\n      return !!Object.keys(answerContent).length;\n    }\n\n    return !!answerContent?.length;\n  }\n\n  static isNoOptionSelectedValue(value) {\n    // The value can be null when coming from the API\n    // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\n    return value === null || value === '';\n  }\n}\n","import icon from 'flarum/common/helpers/icon';\nimport BaseField from './BaseField';\n\nexport default class BooleanField extends BaseField {\n  editorInput() {\n    return this.options().map((option) =>\n      m(\n        'div',\n        m('label', [\n          m('input[type=radio]', {\n            checked: option.selected(this.value),\n            onclick: () => {\n              this.set(option.key);\n            },\n          }),\n          ' ' + option.label,\n        ])\n      )\n    );\n  }\n\n  options() {\n    let options = [];\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options.push({\n        selected: (value) => BaseField.isNoOptionSelectedValue(value),\n        key: null,\n        label: app.translator.trans('fof-masquerade.forum.fields.select.none-optional'),\n      });\n    }\n\n    options.push({\n      selected: (value) => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\n      key: 'true',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.yes'),\n    });\n\n    options.push({\n      selected: (value) => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\n      key: 'false',\n      label: app.translator.trans('fof-masquerade.forum.fields.boolean.no'),\n    });\n\n    // This is probably overkill because it looks like the backend casts the value anyway\n    if (!BaseField.isNoOptionSelectedValue(this.value) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value) === -1) {\n      options.push({\n        selected: () => true,\n        key: this.value,\n        label: '(invalid) ' + this.value,\n      });\n    }\n\n    return options;\n  }\n\n  answerContent() {\n    if (BaseField.isNoOptionSelectedValue(this.value)) {\n      return '';\n    }\n\n    return [1, '1', true, 'true', 'yes'].indexOf(this.value) !== -1\n      ? [icon('far fa-check-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.yes')]\n      : [icon('far fa-square'), ' ', app.translator.trans('fof-masquerade.forum.fields.boolean.no')];\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class EmailField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'email';\n    attrs.placeholder = 'you@example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    const email = value\n      .split(/@|\\./)\n      .map((segment) => {\n        return segment.replace(/(.{2})./g, '$1*');\n      })\n      .join('*');\n\n    return Button.component(\n      {\n        onclick: () => this.mailTo(),\n        className: 'Button Button--text',\n        icon: 'far fa-envelope',\n      },\n      email\n    );\n  }\n\n  mailTo() {\n    window.location = 'mailto:' + this.value;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","import app from 'flarum/forum/app';\nimport Select from 'flarum/common/components/Select';\nimport BaseField from './BaseField';\n\nconst NO_OPTION_SELECTED_KEY = 'fof_masquerade_no_option_selected';\n\nexport default class SelectField extends BaseField {\n  editorInput() {\n    return Select.component({\n      onchange: (value) => {\n        if (value === NO_OPTION_SELECTED_KEY) {\n          value = '';\n        }\n\n        this.set(value);\n      },\n      value: BaseField.isNoOptionSelectedValue(this.value) ? NO_OPTION_SELECTED_KEY : this.value,\n      options: this.options(),\n    });\n  }\n\n  options() {\n    let options = {};\n\n    if (!this.readAttribute(this.field, 'required')) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-optional');\n    } else if (BaseField.isNoOptionSelectedValue(this.value)) {\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-masquerade.forum.fields.select.none-required');\n    }\n\n    const validationIn = this.validationRule('in');\n\n    if (validationIn) {\n      validationIn.split(',').forEach((value) => {\n        options[value] = value;\n      });\n    }\n\n    if (!BaseField.isNoOptionSelectedValue(this.value) && typeof options[this.value] === 'undefined') {\n      options[this.value] = '(invalid) ' + this.value;\n    }\n\n    return options;\n  }\n}\n","import Button from 'flarum/common/components/Button';\nimport BaseField from './BaseField';\n\nexport default class UrlField extends BaseField {\n  editorInputAttrs() {\n    let attrs = super.editorInputAttrs();\n\n    attrs.type = 'url';\n    attrs.placeholder = 'https://example.com';\n\n    return attrs;\n  }\n\n  answerContent() {\n    const value = this.value;\n\n    if (!value) {\n      return null;\n    }\n\n    return Button.component(\n      {\n        onclick: () => this.to(),\n        className: 'Button Button--text',\n        icon: 'fas fa-link',\n      },\n      value.replace(/^https?:\\/\\//, '')\n    );\n  }\n\n  to() {\n    const popup = window.open();\n    popup.location = this.value;\n  }\n}\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport UrlField from './UrlField';\n\nexport default class TypeFactory {\n  static typeForField({ field, set = undefined, value }) {\n    let className = BaseField;\n\n    const type = this.identify(field);\n\n    if (type) {\n      className = this.types()[type];\n    }\n\n    return new className({\n      field,\n      set,\n      value,\n    });\n  }\n\n  static fieldAttribute(field, attribute) {\n    if (typeof field[attribute] === 'function') {\n      return field[attribute]();\n    }\n\n    return field[attribute];\n  }\n\n  static types() {\n    return {\n      boolean: BooleanField,\n      email: EmailField,\n      select: SelectField,\n      url: UrlField,\n    };\n  }\n\n  /**\n   * Identifies how to parse the field answer.\n   * @returns {null|string}\n   */\n  static identify(field) {\n    const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\n    let identified = null;\n\n    // If the field has a type we use it\n    const fieldType = this.fieldAttribute(field, 'type');\n    if (typeof this.types()[fieldType] !== 'undefined') {\n      return fieldType;\n    }\n\n    // If it's an advanced field with no type we then guess the best type\n    validation.forEach((rule) => {\n      rule = rule.trim();\n\n      if (typeof this.types()[rule] !== 'undefined') {\n        identified = rule;\n      }\n    });\n\n    return identified;\n  }\n}\n","import app from 'flarum/forum/app';\n\nimport Component from 'flarum/common/Component';\nimport TypeFactory from '../types/TypeFactory';\nimport type Answer from '../../lib/models/Answer';\nimport type Field from 'src/lib/models/Field';\nimport type User from 'flarum/common/models/User';\n\nexport default class ProfilePane extends Component {\n  answers!: Answer[];\n  user!: User;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.answers = [];\n    this.user = this.attrs.user;\n\n    this.load(this.user);\n  }\n\n  view() {\n    return (\n      <div class=\"Masquerade-Bio\">\n        <div class=\"Fields\">\n          {app.store\n            .all('masquerade-field')\n            .sort((a, b) => a.sort() - b.sort())\n            .map((field) => {\n              const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n              return this.field(field, answer?.content() || '');\n            })}\n        </div>\n      </div>\n    );\n  }\n\n  field(field: Field, content) {\n    const type = TypeFactory.typeForField({\n      field,\n      value: content,\n    });\n\n    return type.answerField();\n  }\n\n  load() {\n    this.answers = this.user.masqueradeAnswers();\n\n    if (this.answers === false) {\n      this.answers = [];\n      app.store.find('users', this.user.id(), { include: 'masqueradeAnswers' }).then(() => {\n        this.answers = this.user.masqueradeAnswers();\n        m.redraw();\n      });\n    }\n\n    m.redraw();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import app from 'flarum/forum/app';\n\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport TypeFactory from '../types/TypeFactory';\nimport Component from 'flarum/common/Component';\n\nexport default class ProfileConfigurePane extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loading = true;\n\n    this.enforceProfileCompletion = app.forum.attribute('masquerade.force-profile-completion') || false;\n    this.profileCompleted = app.forum.attribute('masquerade.profile-completed') || false;\n    this.profileNowCompleted = false; // Show \"after required\" text\n    this.answers = [];\n    this.answerValues = {};\n    this.user = this.attrs.user;\n    this.load();\n\n    // Show disabled state if everything is saved\n    // Unless the profile isn't complete, in which case show enabled button so it's obvious you will need to save\n    this.dirty = !this.profileCompleted;\n  }\n\n  view() {\n    return (\n      <form class=\"ProfileConfigurePane\" onsubmit={this.update.bind(this)}>\n        {!!(this.enforceProfileCompletion && !this.profileCompleted) && (\n          <div class=\"Alert Alert--Error\">{app.translator.trans('fof-masquerade.forum.alerts.profile-completion-required')}</div>\n        )}\n\n        <div class=\"Fields\">\n          {app.store\n            .all('masquerade-field')\n            .sort((a, b) => a.sort() - b.sort())\n            .map((field) => {\n              return this.field(field);\n            })}\n        </div>\n\n        <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading} disabled={!this.dirty}>\n          {app.translator.trans('fof-masquerade.forum.buttons.save-profile')}\n        </Button>\n\n        {!!this.profileNowCompleted && (\n          <span class=\"Masquerade-NowCompleted\">\n            {app.translator.trans('fof-masquerade.forum.alerts.profile-completed', {\n              a: <Link href={app.route('index')} />,\n            })}\n          </span>\n        )}\n      </form>\n    );\n  }\n\n  field(field) {\n    const type = TypeFactory.typeForField({\n      field,\n      set: this.set.bind(this, field),\n      value: this.answerValues[field.id()],\n    });\n\n    return type.editorField();\n  }\n\n  load() {\n    this.answers = this.user.masqueradeAnswers();\n\n    if (this.answers === false) {\n      this.answers = [];\n      app.store.find('users', this.user.id(), { include: 'masqueradeAnswers' }).then(() => {\n        this.answers = this.user.masqueradeAnswers();\n        this.answerValues = {};\n\n        app.store.all('masquerade-field').forEach((field) => {\n          const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n          this.answerValues[field.id()] = answer ? answer.content() : '';\n        });\n\n        this.loading = false;\n        m.redraw();\n      });\n    } else {\n      this.loading = false;\n\n      app.store.all('masquerade-field').forEach((field) => {\n        const answer = this.answers.find((a) => a.field()?.id() === field.id());\n\n        this.answerValues[field.id()] = answer ? answer.content() : '';\n      });\n    }\n\n    m.redraw();\n  }\n\n  set(field, value) {\n    this.answerValues[field.id()] = value;\n    this.dirty = true;\n  }\n\n  update(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/masquerade/configure/' + this.user.id(),\n        body: this.answerValues,\n      })\n      .then((response) => {\n        this.dirty = false;\n\n        if (!this.profileCompleted) {\n          this.profileCompleted = true;\n          this.profileNowCompleted = true;\n        }\n\n        this.parseResponse(response);\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  parseResponse(response) {\n    console.log(response);\n    this.answers = app.store.pushPayload(response);\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import UserPage from 'flarum/forum/components/UserPage';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport ProfilePane from './ProfilePane';\nimport ProfileConfigurePane from './ProfileConfigurePane';\n\nexport default class RootMasqueradePane extends UserPage {\n  loading = true;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  pageContentComponent() {\n    if (!this.user) return null;\n\n    if (this.user.canEditMasqueradeProfile()) return <ProfileConfigurePane user={this.user} />;\n    else return <ProfilePane user={this.user} />;\n  }\n\n  show(user) {\n    super.show(user);\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  content() {\n    return (\n      <div class=\"MasqueradeRoot\">\n        {this.loading && <LoadingIndicator />}\n        {this.pageContentComponent()}\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/computed'];","import app from 'flarum/common/app';\nimport Model from 'flarum/common/Model';\nimport computed from 'flarum/common/utils/computed';\n\nimport type Field from './Field';\n\nexport default class Answer extends Model {\n  content = Model.attribute('content');\n  fieldId = Model.attribute('fieldId');\n  field = computed<Field>('fieldId', (fieldId: string) => {\n    return app.store.getById('masquerade-field', fieldId);\n  });\n  userId = Model.attribute('user_id');\n}\n","import Model from 'flarum/common/Model';\n\nexport default class Field extends Model {\n  name = Model.attribute('name');\n  description = Model.attribute('description');\n  type = Model.attribute('type');\n  validation = Model.attribute('validation');\n  required = Model.attribute('required');\n  prefix = Model.attribute('prefix');\n  icon = Model.attribute('icon');\n  sort = Model.attribute('sort');\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\n  answer = Model.hasOne('answer');\n  on_bio = Model.attribute('on_bio');\n\n  apiEndpoint() {\n    return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport Field from '../lib/models/Field';\n\nexport default [\n  new Extend.Store() //\n    .add('masquerade-field', Field),\n];\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport Field from '../lib/models/Field';\nimport Answer from '../lib/models/Answer';\n\nimport { default as commonExtend } from '../common/extend';\n\nexport default [\n  ...commonExtend,\n\n  new Extend.Store() //\n    .add('masquerade-answer', Answer),\n\n  new Extend.Model(User) //\n    .hasMany<Field>('bioFields')\n    .hasMany<Answer>('masqueradeAnswers')\n    .attribute<boolean>('canEditMasqueradeProfile'),\n];\n","import ProfileConfigurePane from './ProfileConfigurePane';\nimport ProfilePane from './ProfilePane';\nimport RootMasqueradePane from './RootMasqueradePane';\n\nexport const panes = {\n  ProfileConfigurePane,\n  ProfilePane,\n  RootMasqueradePane,\n};\n","import BaseField from './BaseField';\nimport BooleanField from './BooleanField';\nimport EmailField from './EmailField';\nimport SelectField from './SelectField';\nimport TypeFactory from './TypeFactory';\nimport UrlField from './UrlField';\n\nexport const types = {\n  BaseField,\n  BooleanField,\n  EmailField,\n  SelectField,\n  TypeFactory,\n  UrlField,\n};\n","import app from 'flarum/forum/app';\nimport addProfilePane from './addProfilePane';\nimport mutateUserHero from './mutateUserHero';\n\napp.initializers.add('fof-masquerade', () => {\n  addProfilePane();\n  mutateUserHero();\n});\n\nexport { default as extend } from './extend';\nexport * from './panes';\nexport * from './types';\n","import app from 'flarum/forum/app';\n\nimport { extend } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport RootMasqueradePane from './panes/RootMasqueradePane';\n\nexport default function addProfilePane() {\n  app.routes['fof-masquerade'] = {\n    path: '/u/:username/masquerade',\n    resolver: {\n      onmatch() {\n        if (!app.forum.attribute('canViewMasquerade')) throw new Error();\n\n        return RootMasqueradePane;\n      },\n    },\n  };\n\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (app.forum.attribute('canViewMasquerade') || this.user.canEditMasqueradeProfile()) {\n      const edit = this.user.canEditMasqueradeProfile();\n\n      items.add(\n        'masquerade',\n        LinkButton.component(\n          {\n            href: app.route('fof-masquerade', { username: this.user.slug() }),\n            icon: 'far fa-id-card',\n            'data-editProfile': edit,\n          },\n          app.translator.trans(`fof-masquerade.forum.buttons.${edit ? 'edit' : 'view'}-profile`)\n        ),\n        200\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport TypeFactory from './types/TypeFactory';\n\nexport default function mutateUserHero() {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    const answers = app.forum.attribute('canViewMasquerade') ? this.attrs.user.bioFields() || [] : [];\n\n    items.add(\n      'masquerade-bio',\n      <div>\n        {answers.map((answer) => {\n          const field = answer.attribute('field');\n          const type = TypeFactory.typeForField({\n            field,\n            value: answer.content(),\n          });\n\n          return type.answerField();\n        })}\n      </div>\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","BaseField","_ref","field","set","this","_proto","readAttribute","object","attribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","m","class","icon","name","required","prefix","editorInput","description","editorInputAttrs","_this","className","oninput","event","target","answerField","iconName","hasAnswer","'['","answerContent","keys","length","isNoOptionSelectedValue","BooleanField","_BaseField","apply","arguments","options","map","option","checked","selected","onclick","label","push","app","translator","trans","indexOf","EmailField","attrs","type","placeholder","email","segment","replace","join","Button","mailTo","window","location","NO_OPTION_SELECTED_KEY","SelectField","Select","onchange","validationIn","UrlField","to","open","TypeFactory","typeForField","_ref$set","undefined","identify","types","fieldAttribute","boolean","select","url","validation","identified","fieldType","trim","ProfilePane","_Component","_len","args","Array","_key","concat","answers","user","oninit","vnode","loading","load","view","_this2","all","sort","b","answer","find","_a$field","id","content","_this3","masqueradeAnswers","include","then","redraw","Component","ProfileConfigurePane","enforceProfileCompletion","profileCompleted","profileNowCompleted","answerValues","dirty","onsubmit","update","disabled","Link","href","_a$field2","preventDefault","method","body","response","parseResponse","console","log","pushPayload","RootMasqueradePane","_UserPage","loadUser","route","param","pageContentComponent","canEditMasqueradeProfile","show","LoadingIndicator","UserPage","Answer","_Model","Model","fieldId","computed","getById","userId","Field","deleted_at","on_bio","apiEndpoint","exists","data","Extend","add","commonExtend","User","hasMany","panes","path","resolver","onmatch","Error","extend","items","edit","LinkButton","username","slug","UserCard","bioFields"],"sourceRoot":""}