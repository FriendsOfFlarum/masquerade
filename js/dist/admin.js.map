{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/external \"flarum.core.compat['admin/app']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/Model']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/Component']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/masquerade/external \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/masquerade/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/masquerade/external \"flarum.core.compat['admin/utils/saveSettings']\"","webpack://@fof/masquerade/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/masquerade/./src/admin/components/SelectFieldOptionEditor.js","webpack://@fof/masquerade/./src/admin/components/MasqueradePage.js","webpack://@fof/masquerade/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Field","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","apiEndpoint","this","exists","data","id","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","store","sortableElement","addEventListener","eventName","callback","length","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","getPropertyValue","parseInt","map","int","isNaN","reduce","sum","_getElementWidth","_getHandles","items","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","sortableContainer","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","arguments","now","Date","apply","_throttle","buttons","children","_a","_b","classList","remove","add","_removeItemEvents","_removeContainerEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","includes","_makePlaceholder","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","SelectFieldOptionEditor","oninit","vnode","newOption","view","app","translator","trans","option","optionIndex","oninput","updateOption","onclick","moveOption","deleteOption","onchange","addOption","updateRules","attrs","join","rules","rule","parts","moveIndex","newIndex","move","splice","push","Component","MasqueradePage","resetNew","loading","existing","loadExisting","enforceProfileCompletion","settings","sorting","$","updateSort","oncreate","onupdate","content","Switch","component","state","saveValue","saveSettings","field","addField","Button","className","deleteField","toggleField","withAttr","updateExistingFieldInput","a","href","Select","availableTypes","disabled","readyToAdd","updateExistingField","submitAddField","what","pushAttributes","request","url","forum","body","then","requestSuccess","parents","toggleClass","save","attributes","redraw","all","b","result","pushPayload","createRecord","email","boolean","select","null","ExtensionPage","initializers","models","extensionData","registerPage","registerPermission","label","permission","allowGuest"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","import Model from 'flarum/common/Model';\n\nexport default class Field extends Model {\n  name = Model.attribute('name');\n  description = Model.attribute('description');\n  type = Model.attribute('type');\n  validation = Model.attribute('validation');\n  required = Model.attribute('required');\n  prefix = Model.attribute('prefix');\n  icon = Model.attribute('icon');\n  sort = Model.attribute('sort');\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\n  answer = Model.hasOne('answer');\n  on_bio = Model.attribute('on_bio');\n\n  apiEndpoint() {\n    return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/utils/withAttr'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['admin/utils/saveSettings'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar _removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData,\n    _removeContainerEvents: _removeContainerEvents\n};\n\nexport default sortable;\n","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\n/* global m */\n\nexport default class SelectFieldOptionEditor extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.newOption = '';\n  }\n\n  view() {\n    return m('.Form-group', [\n      m('label', app.translator.trans('fof-masquerade.admin.fields.options')),\n      m(\n        'table',\n        m(\n          'tbody',\n          this.options().map((option, optionIndex) =>\n            m('tr', [\n              m(\n                'td',\n                m('input[type=text].FormControl', {\n                  oninput: (event) => {\n                    this.updateOption(optionIndex, event.target.value);\n                  },\n                  value: option,\n                })\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button',\n                  {\n                    onclick: () => {\n                      this.moveOption(optionIndex, -1);\n                    },\n                  },\n                  icon('fas fa-chevron-up')\n                )\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button',\n                  {\n                    onclick: () => {\n                      this.moveOption(optionIndex, 1);\n                    },\n                  },\n                  icon('fas fa-chevron-down')\n                )\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button.Button--danger',\n                  {\n                    onclick: () => {\n                      this.deleteOption(optionIndex);\n                    },\n                  },\n                  icon('fas fa-times')\n                )\n              ),\n            ])\n          )\n        )\n      ),\n      m('.helpText', app.translator.trans('fof-masquerade.admin.fields.option-comma-warning')),\n      m(\n        'table',\n        m('tbody'),\n        m('tr', [\n          m(\n            'td',\n            m('input[type=text].FormControl', {\n              onchange: (event) => {\n                this.newOption = event.target.value;\n              },\n              value: this.newOption,\n              placeholder: app.translator.trans('fof-masquerade.admin.fields.option-new'),\n            })\n          ),\n          m(\n            'td',\n            m(\n              'button.Button.Button--primary',\n              {\n                onclick: () => {\n                  this.addOption();\n                },\n              },\n              icon('fas fa-plus')\n            )\n          ),\n        ])\n      ),\n    ]);\n  }\n\n  updateRules(options) {\n    // We ignore other existing rules, they would probably be leftovers from another field type when changing types\n    this.attrs.onchange('in:' + options.join(','));\n  }\n\n  options() {\n    const rules = this.attrs.value.split('|');\n\n    let options = [];\n\n    rules.forEach((rule) => {\n      const parts = rule.split(':', 2);\n\n      if (parts[0] === 'in') {\n        options = parts[1].split(',');\n      }\n    });\n\n    return options;\n  }\n\n  updateOption(index, value) {\n    let options = this.options();\n\n    options[index] = value;\n\n    this.updateRules(options);\n  }\n\n  moveOption(index, moveIndex) {\n    let options = this.options();\n\n    const newIndex = index + moveIndex;\n\n    if (newIndex < 0 || newIndex > options.length - 1) {\n      return;\n    }\n\n    const move = options.splice(index, 1);\n\n    options.splice(newIndex, 0, move[0]);\n\n    this.updateRules(options);\n  }\n\n  deleteOption(index) {\n    let options = this.options();\n\n    options.splice(index, 1);\n\n    this.updateRules(options);\n  }\n\n  addOption() {\n    if (this.newOption === '') {\n      return;\n    }\n\n    let options = this.options();\n\n    options.push(this.newOption);\n\n    this.newOption = '';\n\n    this.updateRules(options);\n  }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/admin/app';\nimport icon from 'flarum/common/helpers/icon';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport Button from 'flarum/common/components/Button';\nimport saveSettings from 'flarum/admin/utils/saveSettings';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport SelectFieldOptionEditor from './SelectFieldOptionEditor';\n\n/* global m, $ */\n\nexport default class MasqueradePage extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.resetNew();\n    this.loading = false;\n    this.existing = [];\n    this.loadExisting();\n    this.enforceProfileCompletion = app.data.settings['masquerade.force-profile-completion'] === '1';\n  }\n\n  config() {\n    sortable(this.element.querySelector('.js-sortable-fields'), {\n      handle: 'legend',\n    })[0].addEventListener('sortupdate', () => {\n      const sorting = this.$('.js-sortable-fields > .Field')\n        .map(function () {\n          return $(this).data('id');\n        })\n        .get();\n\n      this.updateSort(sorting);\n    });\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config();\n  }\n\n  onupdate() {\n    this.config();\n  }\n\n  content() {\n    return m(\n      '.ExtensionPage-settings.ProfileConfigurePane',\n      m('.container', [\n        m('h2', app.translator.trans('fof-masquerade.admin.general-options')),\n        m(\n          '.Form-group',\n          Switch.component(\n            {\n              state: this.enforceProfileCompletion,\n              onchange: (value) => {\n                const saveValue = value ? '1' : '0';\n                saveSettings({\n                  'masquerade.force-profile-completion': saveValue,\n                });\n                this.enforceProfileCompletion = saveValue;\n              },\n            },\n            app.translator.trans('fof-masquerade.admin.fields.force-user-to-completion')\n          )\n        ),\n        m('h2', app.translator.trans('fof-masquerade.admin.fields.title')),\n        m(\n          'form.js-sortable-fields',\n          this.existing.map((field) => {\n            // Build array of fields to show.\n            return this.addField(field);\n          })\n        ),\n        this.addField(this.new),\n      ])\n    );\n  }\n\n  /**\n   * Creates a field in the DOM.\n   *\n   * @param field\n   * @returns {*}\n   */\n  addField(field) {\n    let exists = field.id();\n\n    return m(\n      'fieldset.Field',\n      {\n        'data-id': field.id(),\n        key: field.id(),\n      },\n      [\n        m('legend', [\n          exists\n            ? [\n                Button.component({\n                  className: 'Button Button--icon Button--danger',\n                  icon: 'fas fa-trash',\n                  onclick: this.deleteField.bind(this, field),\n                }),\n                ' ',\n              ]\n            : null,\n          m(\n            'span.Field-toggle',\n            {\n              onclick: (e) => this.toggleField(e),\n            },\n            [\n              app.translator.trans('fof-masquerade.admin.fields.' + (exists ? 'edit' : 'add'), {\n                field: field.name(),\n              }),\n              ' ',\n              icon('fas fa-caret-down'),\n            ]\n          ),\n        ]),\n        m('.Field-body', [\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.name')),\n            m('input.FormControl', {\n              value: field.name(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'name', field)),\n            }),\n            m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.name-help')),\n          ]),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.description')),\n            m('input.FormControl', {\n              value: field.description(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'description', field)),\n            }),\n            m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.description-help')),\n          ]),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.icon')),\n            m('input.FormControl', {\n              value: field.icon(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'icon', field)),\n            }),\n            m(\n              'span.helpText',\n              app.translator.trans('fof-masquerade.admin.fields.icon-help', {\n                a: <a href=\"https://fontawesome.com/icons?m=free\" target=\"_blank\" />,\n              })\n            ),\n          ]),\n          m(\n            '.Form-group',\n            Switch.component(\n              {\n                state: field.on_bio(),\n                onchange: this.updateExistingFieldInput.bind(this, 'on_bio', field),\n              },\n              app.translator.trans('fof-masquerade.admin.fields.on_bio')\n            )\n          ),\n          m(\n            '.Form-group',\n            Switch.component(\n              {\n                state: field.required(),\n                onchange: this.updateExistingFieldInput.bind(this, 'required', field),\n              },\n              app.translator.trans('fof-masquerade.admin.fields.required')\n            )\n          ),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.type')),\n            Select.component({\n              onchange: (value) => {\n                if (value === 'null') {\n                  value = null;\n                }\n\n                this.updateExistingFieldInput('type', field, value);\n              },\n              options: this.availableTypes(),\n              value: field.type(),\n            }),\n          ]),\n          field.type() === 'select'\n            ? SelectFieldOptionEditor.component({\n                onchange: (value) => {\n                  this.updateExistingFieldInput('validation', field, value);\n                },\n                value: field.validation(),\n              })\n            : null,\n          field.type() === null\n            ? m('.Form-group', [\n                m('label', app.translator.trans('fof-masquerade.admin.fields.validation')),\n                m('input.FormControl', {\n                  value: field.validation(),\n                  oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'validation', field)),\n                }),\n                m(\n                  'span.helpText',\n                  app.translator.trans('fof-masquerade.admin.fields.validation-help', {\n                    a: <a href=\"https://laravel.com/docs/5.2/validation#available-validation-rules\" target=\"_blank\" />,\n                  })\n                ),\n              ])\n            : null,\n          m(\n            '.Form-group',\n            m('.ButtonGroup', [\n              Button.component(\n                {\n                  className: 'Button Button--primary',\n                  loading: this.loading,\n                  disabled: !this.readyToAdd(field),\n                  onclick: exists ? this.updateExistingField.bind(this, field) : this.submitAddField.bind(this),\n                },\n                app.translator.trans('fof-masquerade.admin.buttons.' + (exists ? 'edit' : 'add') + '-field')\n              ),\n              exists\n                ? Button.component(\n                    {\n                      className: 'Button Button--danger',\n                      loading: this.loading,\n                      onclick: this.deleteField.bind(this, field),\n                    },\n                    app.translator.trans('fof-masquerade.admin.buttons.delete-field')\n                  )\n                : null,\n            ])\n          ),\n        ]),\n      ]\n    );\n  }\n\n  updateExistingFieldInput(what, field, value) {\n    field.pushAttributes({\n      [what]: value,\n    });\n  }\n\n  /**\n   * Sorts the fields.\n   *\n   * @param {Array} sorting\n   */\n  updateSort(sorting) {\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/masquerade/fields/order',\n        body: {\n          sort: sorting,\n        },\n      })\n      .then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Opens and closes field configuration sets.\n   *\n   * @param e\n   */\n  toggleField(e) {\n    $(e.target).parents('.Field').toggleClass('active');\n  }\n\n  /**\n   * Deletes a field configuration set.\n   *\n   * @param field\n   */\n  deleteField(field) {\n    field.delete().then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Saves the settings to the database and redraw the page\n   *\n   * @param e\n   */\n  submitAddField(e) {\n    e.preventDefault();\n\n    this.new\n      .save(this.new.data.attributes)\n      .then(this.requestSuccess.bind(this))\n      .then(() => {\n        this.resetNew();\n      });\n\n    m.redraw();\n  }\n\n  /**\n   * Updates the value of one field.\n   *\n   * @param field\n   */\n  updateExistingField(field) {\n    if (!field.id()) return;\n\n    field.save(field.data.attributes).then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Parses result to update DOM.\n   */\n  requestSuccess() {\n    this.existing = app.store.all('masquerade-field');\n\n    // Update order in case the store order doesn't reflect the true ordering\n    this.existing.sort((a, b) => {\n      if (a.sort() < b.sort()) return -1;\n      if (a.sort() > b.sort()) return 1;\n      return 0;\n    });\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  /**\n   * Retrieves list of fields.\n   */\n  loadExisting() {\n    this.loading = true;\n\n    return app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n      })\n      .then((result) => {\n        app.store.pushPayload(result);\n\n        this.requestSuccess();\n      });\n  }\n\n  /**\n   * Resets the new field.\n   */\n  resetNew() {\n    this.new = app.store.createRecord('masquerade-field', {\n      attributes: {\n        name: '',\n        description: '',\n        prefix: '',\n        icon: '',\n        required: false,\n        on_bio: false,\n        type: null,\n        validation: '',\n      },\n    });\n  }\n\n  /**\n   * Checks whether creation field is completed.\n   *\n   * @returns boolean\n   */\n  readyToAdd(field) {\n    if (field.name()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * List of field types availables\n   * @returns {Array}\n   */\n  availableTypes() {\n    return {\n      url: app.translator.trans('fof-masquerade.admin.types.url'),\n      email: app.translator.trans('fof-masquerade.admin.types.email'),\n      boolean: app.translator.trans('fof-masquerade.admin.types.boolean'),\n      select: app.translator.trans('fof-masquerade.admin.types.select'),\n      null: app.translator.trans('fof-masquerade.admin.types.advanced'),\n    };\n  }\n}\n","import app from 'flarum/admin/app';\nimport Field from './../lib/models/Field';\nimport MasqueradePage from './components/MasqueradePage';\n\napp.initializers.add('fof-masquerade', () => {\n  app.store.models['masquerade-field'] = Field;\n\n  app.extensionData\n    .for('fof-masquerade')\n    .registerPage(MasqueradePage)\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.view-profile'),\n        permission: 'fof.masquerade.view-profile',\n        allowGuest: true,\n      },\n      'view'\n    )\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.have-profile'),\n        permission: 'fof.masquerade.have-profile',\n      },\n      'start'\n    )\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.edit-others-profile'),\n        permission: 'fof.masquerade.edit-others-profile',\n      },\n      'moderate'\n    );\n});\n"],"sourceRoot":""}