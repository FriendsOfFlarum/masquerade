{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAzC,SAASC,EAAgBhB,EAAGiB,GAMzC,OALAD,EAAkBf,OAAOiB,gBAAkB,SAAyBlB,EAAGiB,GAErE,OADAjB,EAAEmB,UAAYF,EACPjB,CACR,EAEMgB,EAAgBhB,EAAGiB,EAC3B,CCNc,SAASG,EAAeC,EAAUC,GAC/CD,EAASd,UAAYN,OAAOsB,OAAOD,EAAWf,WAC9Cc,EAASd,UAAUiB,YAAcH,EACjCH,EAAeG,EAAUC,EAC1B,CCLD,MAAM,EAA+BT,OAAOC,KAAKC,OAAO,gB,aCEnCU,EAAAA,SAAAA,G,wIACnBC,KAAOC,IAAAA,UAAgB,Q,EACvBC,YAAcD,IAAAA,UAAgB,e,EAC9BE,KAAOF,IAAAA,UAAgB,Q,EACvBG,WAAaH,IAAAA,UAAgB,c,EAC7BI,SAAWJ,IAAAA,UAAgB,Y,EAC3BK,OAASL,IAAAA,UAAgB,U,EACzBM,KAAON,IAAAA,UAAgB,Q,EACvBO,KAAOP,IAAAA,UAAgB,Q,EACvBQ,WAAaR,IAAAA,UAAgB,aAAcA,IAAAA,e,EAC3CS,OAAST,IAAAA,OAAa,U,EACtBU,OAASV,IAAAA,UAAgB,U,4BAEzBW,YAAA,WACE,MAAO,sBAAwBC,KAAKC,OAAS,IAAMD,KAAKE,KAAKC,GAAK,GACnE,E,EAfkBjB,CAAcE,KCanC,SAASgB,EAAQC,EAAS7C,EAAKa,GAC3B,QAAciC,IAAVjC,EACA,OAAOgC,GAAWA,EAAQE,KAAOF,EAAQE,IAAIL,MAAQG,EAAQE,IAAIL,KAAK1C,GAGtE6C,EAAQE,IAAMF,EAAQE,KAAO,CAAC,EAC9BF,EAAQE,IAAIL,KAAOG,EAAQE,IAAIL,MAAQ,CAAC,EACxCG,EAAQE,IAAIL,KAAK1C,GAAOa,CAE/B,CAkBD,IAAImC,EAAW,SAAUC,EAAOC,GAC5B,KAAMD,aAAiBE,UAAYF,aAAiBG,gBAAkBH,aAAiBI,OACnF,MAAM,IAAIC,MAAM,gFAEpB,MAAwB,iBAAbJ,EACAG,MAAME,KAAKN,GAEfI,MAAME,KAAKN,GAAOO,QAAO,SAAUC,GAAQ,OAAyB,IAAlBA,EAAKC,UAAkBD,EAAKE,QAAQT,EAAY,GAC5G,EAGGU,EAAS,IAAIC,IAKbC,EAAuB,WACvB,SAASA,IACLtB,KAAKuB,QAAU,IAAIF,IACnBrB,KAAKwB,kBAAelB,EACpBN,KAAKyB,MAAQ,IAAIJ,GACpB,CAwHD,OAvHA3D,OAAOC,eAAe2D,EAAMtD,UAAW,SAAU,CAM7CH,IAAK,WAED,IAAI6D,EAAS,CAAC,EAKd,OAJA1B,KAAKuB,QAAQI,SAAQ,SAAUtD,EAAOb,GAClCkE,EAAOlE,GAAOa,CACjB,IAEMqD,CACV,EAMDE,IAAK,SAAUF,GACX,GAAsB,iBAAXA,EACP,MAAM,IAAIZ,MAAM,uEAGpB,IAAIe,EAAenE,OAAOoE,OAAO,CAAC,EAAGJ,GAErC1B,KAAKuB,QAAU,IAAIF,IAAI3D,OAAOqE,QAAQF,GACzC,EACDjE,YAAY,EACZoE,cAAc,IASlBV,EAAMtD,UAAUiE,UAAY,SAAUzE,EAAKa,GACvC,IAAK2B,KAAKuB,QAAQW,IAAI1E,GAClB,MAAM,IAAIsD,MAAM,6CAA+CtD,GAGnEwC,KAAKuB,QAAQK,IAAIpE,EAAKa,EACzB,EAODiD,EAAMtD,UAAUmE,UAAY,SAAU3E,GAClC,IAAKwC,KAAKuB,QAAQW,IAAI1E,GAClB,MAAM,IAAIsD,MAAM,yCAA2CtD,GAE/D,OAAOwC,KAAKuB,QAAQ1D,IAAIL,EAC3B,EACDE,OAAOC,eAAe2D,EAAMtD,UAAW,cAAe,CAMlDH,IAAK,WACD,OAAOmC,KAAKwB,YACf,EAODI,IAAK,SAAUQ,GACX,KAAMA,aAAuBC,cAAgC,OAAhBD,EACzC,MAAM,IAAItB,MAAM,kDAEpBd,KAAKwB,aAAeY,CACvB,EACDxE,YAAY,EACZoE,cAAc,IASlBV,EAAMtD,UAAUsE,QAAU,SAAU9E,EAAKa,GACrC,GAAmB,iBAARb,EACP,MAAM,IAAIsD,MAAM,6BAEpBd,KAAKyB,MAAMG,IAAIpE,EAAKa,EACvB,EAODiD,EAAMtD,UAAUuE,QAAU,SAAU/E,GAChC,GAAmB,iBAARA,EACP,MAAM,IAAIsD,MAAM,6BAEpB,OAAOd,KAAKyB,MAAM5D,IAAIL,EACzB,EAOD8D,EAAMtD,UAAUwE,WAAa,SAAUhF,GACnC,GAAmB,iBAARA,EACP,MAAM,IAAIsD,MAAM,6BAEpB,OAAOd,KAAKyB,MAAL,OAAkBjE,EAC5B,EACM8D,CACV,CA9H0B,GAmIvBmB,EAAS,SAAUC,GAEnB,KAAMA,aAA2BL,aAC7B,MAAM,IAAIvB,MAAM,oDAOpB,OAJKM,EAAOc,IAAIQ,IACZtB,EAAOQ,IAAIc,EAAiB,IAAIpB,GAG7BF,EAAOvD,IAAI6E,EACrB,EAOD,SAASC,EAAiBtC,EAASuC,EAAWC,GAC1C,GAAIxC,aAAmBQ,MACnB,IAAK,IAAIiC,EAAI,EAAGA,EAAIzC,EAAQ0C,SAAUD,EAClCH,EAAiBtC,EAAQyC,GAAIF,EAAWC,QAIhDxC,EAAQsC,iBAAiBC,EAAWC,GACpCJ,EAAMpC,GAASiC,QAAQ,QAAUM,EAAWC,EAC/C,CAKD,SAASG,EAAoB3C,EAASuC,GAClC,GAAIvC,aAAmBQ,MACnB,IAAK,IAAIiC,EAAI,EAAGA,EAAIzC,EAAQ0C,SAAUD,EAClCE,EAAoB3C,EAAQyC,GAAIF,QAIxCvC,EAAQ2C,oBAAoBJ,EAAWH,EAAMpC,GAASkC,QAAQ,QAAUK,IACxEH,EAAMpC,GAASmC,WAAW,QAAUI,EACvC,CAOD,SAASK,EAAa5C,EAAS6C,EAAW7E,GACtC,GAAIgC,aAAmBQ,MACnB,IAAK,IAAIiC,EAAI,EAAGA,EAAIzC,EAAQ0C,SAAUD,EAClCG,EAAa5C,EAAQyC,GAAII,EAAW7E,QAI5CgC,EAAQ8C,aAAaD,EAAW7E,EACnC,CAKD,SAAS+E,EAAgB/C,EAAS6C,GAC9B,GAAI7C,aAAmBQ,MACnB,IAAK,IAAIiC,EAAI,EAAGA,EAAIzC,EAAQ0C,SAAUD,EAClCM,EAAgB/C,EAAQyC,GAAII,QAIpC7C,EAAQ+C,gBAAgBF,EAC3B,CAMD,IA6aIG,EACAC,EACAC,EAMAC,EACAC,EACAC,EACAC,EAGAC,EAEAC,EA7bAC,EAAW,SAAUzD,GACrB,IAAKA,EAAQ0D,eAAqD,IAApC1D,EAAQ2D,iBAAiBjB,OACnD,MAAM,IAAIjC,MAAM,0CAEpB,IAAImD,EAAO5D,EAAQ2D,iBAAiB,GACpC,MAAO,CACHE,KAAMD,EAAKC,KAAOC,OAAOC,YACzBC,MAAOJ,EAAKI,MAAQF,OAAOC,YAC3BE,IAAKL,EAAKK,IAAMH,OAAOI,YACvBC,OAAQP,EAAKO,OAASL,OAAOI,YAEpC,EA6BGE,EAAU,SAAUpE,EAASqE,GAC7B,KAAMrE,aAAmBgC,cAAkBqC,aAAuB/D,UAAY+D,aAAuB9D,gBAAkB8D,aAAuB7D,QAC1I,MAAM,IAAIC,MAAM,uDAEpB,OAAOD,MAAME,KAAK2D,GAAaC,QAAQtE,EAC1C,EAQGuE,EAAW,SAAUvE,GACrB,KAAMA,aAAmBgC,aACrB,MAAM,IAAIvB,MAAM,kCAEpB,OAA8B,OAAvBT,EAAQwE,UAClB,EASGC,EAAa,SAAUC,EAAeC,EAAYC,GAClD,KAAMF,aAAyB1C,aAAkB0C,EAAchB,yBAAyB1B,aACpF,MAAM,IAAIvB,MAAM,qCAEpBiE,EAAchB,cAAcmB,aAAaF,EAA0B,WAAbC,EAAwBF,EAAgBA,EAAcI,mBAC/G,EAYGC,EAAc,SAAUC,EAAQhF,GAAW,OAAOyE,EAAWO,EAAQhF,EAAS,QAAW,EAuFzFiF,EAAqB,SAAUjF,GAC/B,KAAMA,aAAmBgC,aACrB,MAAM,IAAIvB,MAAM,wCAGpB,IAAIyE,EAAQpB,OAAOqB,iBAAiBnF,GAEpC,MAA6C,eAAzCkF,EAAME,iBAAiB,cAChBC,SAASH,EAAME,iBAAiB,UAAW,IAG/C,CAAC,SAAU,cAAe,kBAC5BE,KAAI,SAAUnI,GACf,IAAIoI,EAAMF,SAASH,EAAME,iBAAiBjI,GAAM,IAChD,OAAOqI,MAAMD,GAAO,EAAIA,CAC3B,IACIE,QAAO,SAAUC,EAAK1H,GAAS,OAAO0H,EAAM1H,CAAQ,GAC5D,EAOG2H,EAAoB,SAAU3F,GAC9B,KAAMA,aAAmBgC,aACrB,MAAM,IAAIvB,MAAM,wCAGpB,IAAIyE,EAAQpB,OAAOqB,iBAAiBnF,GAEpC,MAAO,CAAC,QAAS,eAAgB,iBAC5BsF,KAAI,SAAUnI,GACf,IAAIoI,EAAMF,SAASH,EAAME,iBAAiBjI,GAAM,IAChD,OAAOqI,MAAMD,GAAO,EAAIA,CAC3B,IACIE,QAAO,SAAUC,EAAK1H,GAAS,OAAO0H,EAAM1H,CAAQ,GAC5D,EAQG4H,EAAe,SAAUC,EAAOxF,GAChC,KAAMwF,aAAiBrF,OACnB,MAAM,IAAIC,MAAM,4DAEpB,MAAwB,iBAAbJ,EACAwF,EAEJA,EAEFlF,QAAO,SAAUC,GAClB,OAAOA,EAAKkF,cAAczF,aAAqB2B,aAC1CpB,EAAKmF,YAAcnF,EAAKmF,WAAWD,cAAczF,aAAqB2B,WAC9E,IAEIsD,KAAI,SAAU1E,GACf,OAAOA,EAAKkF,cAAczF,IAAcO,EAAKmF,YAAcnF,EAAKmF,WAAWD,cAAczF,EAC5F,GACJ,EAMG2F,EAAkB,SAAUC,GAC5B,OAAQA,EAAMC,cAAgBD,EAAMC,eAAe,IAAOD,EAAMjB,MACnE,EAUGmB,EAAmB,SAAUC,EAAgBC,EAAeJ,GAC5D,MAAO,CACHjG,QAASoG,EACTE,KAAML,EAAMM,MAAQF,EAAcxC,KAClC2C,KAAMP,EAAMQ,MAAQJ,EAAcpC,IAEzC,EA6CGyC,EAAmB,SAAUC,EAAaC,GAE1C,IAA+B,IAA3BD,EAAYE,WAAqB,CACjC,IAAIC,EAAa1E,EAAMuE,GAAa7E,UAAU,cAE9C,GAAmB,OAAfgF,IAAsC,IAAfA,GAA8C,iBAAfA,EACtD,MAAM,IAAIrG,MAAM,oGAEpB,GAAmB,OAAfqG,EACA,OAAsB,IAAfA,GAAwBA,EAAWC,MAAM,KAAKpG,QAAO,SAAUqG,GAClE,OAAOA,EAAItE,OAAS,GAAKkE,EAAO9F,QAAQkG,EAC3C,IAAEtE,OAAS,EAGhB,GAAIiE,IAAgBC,EAChB,OAAO,EAGX,QAAoD3G,IAAhDmC,EAAMuE,GAAa7E,UAAU,gBAAgF,OAAhDM,EAAMuE,GAAa7E,UAAU,eAC1F,OAAOM,EAAMuE,GAAa7E,UAAU,iBAAmBM,EAAMwE,GAAQ9E,UAAU,cAEtF,CACD,OAAO,CACV,EAKGmF,EAAuB,CACvBpB,MAAO,KAEPqB,YAAa,KAEbC,aAAc,KACdL,WAAY,KACZM,MAAM,EACNrF,YAAa,KACbsF,iBAAkB,uBAClBC,cAAe,oBACfC,YAAY,EACZC,0BAA0B,EAC1BC,SAAU,EACVC,aAAc,IACdC,SAAU,EACVC,oBAAgB3H,EAChB4H,yBAAqB5H,EACrB6H,gBAAiB,KACjBC,YAAa,YAqGbC,EAAoB,SAAUnC,GAC9BlD,EAAoBkD,EAAO,aAC3BlD,EAAoBkD,EAAO,WAC3BlD,EAAoBkD,EAAO,YAC3BlD,EAAoBkD,EAAO,aAC3BlD,EAAoBkD,EAAO,QAC3BlD,EAAoBkD,EAAO,cAC3BlD,EAAoBkD,EAAO,aAC9B,EAEGoC,EAAyB,SAAU9E,EAAiBI,GAChDJ,GACAR,EAAoBQ,EAAiB,aAErCI,GAAsBA,IAAsBJ,GAC5CR,EAAoBY,EAAmB,YAE9C,EAuBG2E,EAAsB,SAAUC,GArtBpC,IAAoBnI,KAstBLmI,GArtBCjI,YACDF,EAAQE,IAAIL,KAqtBvBkD,EAAgBoF,EAAU,kBAC7B,EAKGC,EAAkB,SAAUvC,GAC5B9C,EAAgB8C,EAAO,gBACvB9C,EAAgB8C,EAAO,eACvB9C,EAAgB8C,EAAO,aACvB9C,EAAgB8C,EAAO,OAC1B,EAOD,SAASwC,EAAarI,EAASiG,GAC3B,GAAIA,EAAMC,aACN,OAAOD,EAAMC,eAAeoC,MAAK,SAAUC,GAAM,OAAOA,EAAG1B,UAAa,IAE5E,MAA8B,IAAvB7G,EAAQ6G,YACX7G,EAAUA,EAAQ0D,cAEtB,OAAO1D,CACV,CAOD,SAASwI,EAAgBnG,EAAiBrC,GACtC,IAAIyI,EAAU1I,EAAQsC,EAAiB,QAEnCqG,EADQvI,EAAQkC,EAAgBsG,SAAUF,EAAQ5C,OACjClF,QAAO,SAAUiI,GAClC,OAAOA,EAAIC,SAAS7I,IAAa4I,EAAI7C,YAAc6C,EAAI7C,WAAW8C,SAAS7I,EAC9E,IACD,OAAO0I,EAAShG,OAAS,EAAIgG,EAAS,GAAK1I,CAC9C,CAKD,IAwBI8I,EAAkB,SAAUzG,GAC5B,IAAI0G,EAAOhJ,EAAQsC,EAAiB,QAChCwD,EAAQ1F,EAAQkC,EAAgBsG,SAAUI,EAAKlD,OAC/CmD,EAAUpD,EAAYC,EAAOkD,EAAKE,QACtCrG,EAAaP,EAAiB,kBAAmB,QACjDtC,EAAQsC,EAAiB,YAAa,SACtCO,EAAaoG,EAAS,YAAa,SAKT,IAAtBD,EAAK5B,cAE0B,mBADjB+B,UAAYpF,OAAOoF,UAAUC,cAAc,QACvCC,UACd9G,EAAiB0G,EAAS,aAAa,WACnC,IAA6B,IAAzBnD,EAAMvB,QAAQ3E,MACdA,KAAKyJ,eAEJ,CAED,IADA,IAAIC,EAAS1J,KAAK+D,eACgB,IAA3BmC,EAAMvB,QAAQ+E,IACjBA,EAASA,EAAO3F,cAEpB2F,EAAOD,UACV,CACJ,GAGZ,EAsCD,SAASjB,EAASmB,EAAkBb,GAEhC,IAAIc,EAASC,OAAOf,GAWpB,OAVAA,EAAUA,GAAW,CAAC,EAEU,iBAArBa,IACPA,EAAmBJ,SAASO,iBAAiBH,IAG7CA,aAA4BtH,cAC5BsH,EAAmB,CAACA,IAExBA,EAAmB9I,MAAM7C,UAAU+L,MAAM7L,KAAKyL,GAC1C,YAAYK,KAAKJ,GACVD,EAAiBhE,KAAI,SAAUsE,GAClC,IAAIb,EAAOhJ,EAAQ6J,EAAmB,QACtC,OAtiBM,SAAUA,EAAmBC,EAAsBC,GAIjE,QAH6B,IAAzBD,IAAmCA,EAAuB,SAAUE,EAAgBH,GAAqB,OAAOG,CAAiB,QACnG,IAA9BD,IAAwCA,EAA4B,SAAUE,GAAuB,OAAOA,CAAsB,KAEhIJ,aAA6B5H,cAAkD,IAAjC4H,EAAkB/C,WAClE,MAAM,IAAIpG,MAAM,6DAGpB,GAAoC,mBAAzBoJ,GAA4E,mBAA9BC,EACrD,MAAM,IAAIrJ,MAAM,uEAGpB,IACIG,EADUb,EAAQ6J,EAAmB,QACtB/D,MAEfA,EAAQ1F,EAAQyJ,EAAkBjB,SAAU/H,GAC5CqJ,EAAkBpE,EAAMP,KAAI,SAAU1E,GACtC,MAAO,CACHyI,OAAQO,EACRM,KAAMtJ,EACNuJ,KAAMvJ,EAAKwJ,UACXC,MAAOjG,EAAOxD,EAAMiF,GAE3B,IAMD,MAAO,CACHyE,UAAWR,EALC,CACZI,KAAMN,EACNW,UAAWN,EAAgBvH,SAI3BmD,MAAOoE,EAAgB3E,KAAI,SAAU1E,GAAQ,OAAOiJ,EAAqBjJ,EAAMgJ,EAAqB,IAE3G,CAqgBkBY,CAAWZ,EAAmBb,EAAKnB,eAAgBmB,EAAKlB,oBAClE,KAELyB,EAAiBhI,SAAQ,SAAUe,GAC/B,GAAI,yBAAyBsH,KAAKJ,GAC9B,OAAOpB,EAASoB,GAAQlH,GAG5B,CAAC,cAAe,gBAAgBf,SAAQ,SAAUmJ,GAC1CpN,OAAOM,UAAUC,eAAeC,KAAK4K,EAASgC,IAAqC,OAAvBhC,EAAQgC,IACpEC,QAAQC,KAAK,8DAAiEF,EAAY,yGAEjG,IAEDhC,EAAUpL,OAAOoE,OAAO,CAAC,EAAGwF,EAAsB7E,EAAMC,GAAiBhB,OAAQoH,GAEjFrG,EAAMC,GAAiBhB,OAASoH,EAEhC1I,EAAQsC,EAAiB,OAAQoG,GAEjCpG,EAAgBwE,YAAa,EAvDf,SAAUxE,GAC5B,IAAI0G,EAAOhJ,EAAQsC,EAAiB,QAChCwD,EAAQ1F,EAAQkC,EAAgBsG,SAAUI,EAAKlD,OAC/CmD,EAAUpD,EAAYC,EAAOkD,EAAKE,QACtClJ,EAAQsC,EAAiB,YAAa,SAEtC2F,EAAkBnC,GAClBoC,EAAuB9E,EAAiBI,GACxCZ,EAAoBqG,EAAS,aAE7BrG,EAAoBN,EAAiB,YACrCM,EAAoBN,EAAiB,aACrCM,EAAoBN,EAAiB,OACxC,CA4COuI,CAAgBvI,GAEhB,IAEIwI,EAFAC,EAAY3K,EAAQkC,EAAgBsG,SAAUF,EAAQ5C,OAG1D,GAA4B,OAAxB4C,EAAQ1G,kBAAgD9B,IAAxBwI,EAAQ1G,YAA2B,CACnE,IAAIgJ,EAAgB7B,SAASC,cAAc9G,EAAgB2I,SACvDvC,EAAQ1G,uBAAuBC,YAC/B+I,EAAcE,YAAYxC,EAAQ1G,aAGlCgJ,EAAcG,UAAYzC,EAAQ1G,YAEtC8I,EAAoBE,EAAcpC,SAAS,EAC9C,CAEDvG,EAAMC,GAAiBN,YAliBP,SAAUM,EAAiBN,EAAasF,GAC5D,IAAI8D,EAEJ,QADyB,IAArB9D,IAA+BA,EAAmB,0BAChDhF,aAA2BL,aAC7B,MAAM,IAAIvB,MAAM,mDAGpB,KAAMsB,aAAuBC,mBAAgC/B,IAAhB8B,EACzC,MAAM,IAAItB,MAAM,6EAoBpB,YAjBoBR,IAAhB8B,IACI,CAAC,KAAM,MAAMqJ,SAAS/I,EAAgB2I,SACtCjJ,EAAcmH,SAASC,cAAc,MAEhC,CAAC,QAAS,SAASiC,SAAS/I,EAAgB2I,UACjDjJ,EAAcmH,SAASC,cAAc,OAEzB+B,UAAY,0BAGxBnJ,EAAcmH,SAASC,cAAc,QAIb,iBAArB9B,IACN8D,EAAKpJ,EAAYsJ,WAAWC,IAAIC,MAAMJ,EAAI9D,EAAiBN,MAAM,MAE/DhF,CACV,CAqgB4CyJ,CAAiBnJ,EAAiBwI,EAAmBpC,EAAQpB,kBAClGtH,EAAQsC,EAAiB,QAASoG,EAAQ5C,OACtC4C,EAAQ3B,WACR/G,EAAQsC,EAAiB,aAAcoG,EAAQ3B,YAE1C2B,EAAQvB,aACbnH,EAAQsC,EAAiB,cAAeoG,EAAQvB,aAEpD4B,EAAgBzG,GAChBO,EAAakI,EAAW,OAAQ,UAChClI,EAAakI,EAAW,eAAgB,SA7SxB,SAAUlB,EAAmB6B,GACjD,GAAgE,iBAArDrJ,EAAMwH,GAAmB9H,UAAU,cAA4B,CACtE,IAAI4J,EAAiBtJ,EAAMwH,GAAmB9H,UAAU,cAAciF,MAAM,MAE7D,IAAX0E,GACAnJ,EAAiBsH,EAAmB,YArChD,SAAoB+B,EAAIC,GACpB,IAAIC,EAAQlM,KAOZ,QANkB,IAAdiM,IAAwBA,EAAY,KAMf,iBAAdA,EACP,MAAM,IAAInL,MAAM,kEAEpB,IAAIqL,EAAqB,KACzB,OAAO,WAEH,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUvJ,OAAQsJ,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,IAAIE,EAAMC,KAAKD,OACY,OAAvBJ,GAA+BI,EAAMJ,GAAsBF,KAC3DE,EAAqBI,EACrBP,EAAGJ,MAAMM,EAAOE,GAEvB,CACJ,CAc4DK,EAAU,SAAUnG,GAE3C,IAAlBA,EAAMoG,SACNlM,EAAQyJ,EAAkBjB,SAAUvG,EAAMwH,GAAmB9H,UAAU,UAAUR,SAAQ,SAAUV,GAC/F,IAAIuK,EAAImB,EACJ1L,IAASqF,EAAMjB,QACdmG,EAAKvK,EAAKyK,WAAWkB,OAAOhB,MAAMJ,EAAIO,IAGtCY,EAAK1L,EAAKyK,WAAWC,IAAIC,MAAMe,EAAIZ,EAE3C,GAER,GAAEtJ,EAAMwH,GAAmB9H,UAAU,kBAEtCQ,EAAiBsH,EAAmB,cAAc,WAC9CzJ,EAAQyJ,EAAkBjB,SAAUvG,EAAMwH,GAAmB9H,UAAU,UAAUR,SAAQ,SAAUV,GAC/F,IAAIuK,GACHA,EAAKvK,EAAKyK,WAAWkB,OAAOhB,MAAMJ,EAAIO,EAC1C,GACJ,MAID/I,EAAoBiH,EAAmB,aACvCjH,EAAoBiH,EAAmB,cAE9C,CACJ,CA8QO4C,CAAiBnK,GAAiB,GAMlCC,EAAiBD,EAAiB,aAAa,SAAUoK,GAErD,IAAIzH,EAASgB,EAAeyG,GAC5B,IAA0B,IAAtBzH,EAAO6B,aAGX4F,EAAEC,6BACGjE,EAAQQ,QAAWjE,EAAOlE,QAAQ2H,EAAQQ,UAAiD,UAArCjE,EAAO2H,aAAa,cAA/E,CAGA,IAAI/C,EAAoBvB,EAAarD,EAAQyH,GACzCG,EAAWpE,EAAgBoB,EAAmB5E,GAElD1B,EAA0BnD,EAAQyJ,EAAkBjB,SAAUF,EAAQ5C,OACtEzC,EAAcE,EAAwBgB,QAAQsI,GAC9CvJ,EAAqBe,EAAOwI,EAAUhD,EAAkBjB,UACxDxF,EAAkByG,EAlcV,SAAU3D,EAAOG,EAAgB0B,GAEjD,KAAM7B,aAAiB4G,OACnB,MAAM,IAAIpM,MAAM,4DAGpB,KAAM2F,aAA0BpE,aAC5B,MAAM,IAAIvB,MAAM,qEAOpB,GAJKqH,IACDA,EAAkB3B,GAGlBF,EAAM6G,cAAgB7G,EAAM6G,aAAaC,aAAc,CAEvD,IAEIC,EAAYlF,EAAgB1B,EAFZ3C,EAAQ2C,GAEmCH,GAE/D,KAAM+G,EAAUhN,mBAAmBgC,cAA0C,iBAAnBgL,EAAU1G,MAA+C,iBAAnB0G,EAAUxG,KACtG,MAAM,IAAI/F,MAAM,uIAGpBwF,EAAM6G,aAAaG,cAAgB,WAEnChH,EAAM6G,aAAa7K,QAAQ,aAAc+D,EAAeC,GAAOnG,IAE/DmG,EAAM6G,aAAaC,aAAaC,EAAUhN,QAASgN,EAAU1G,KAAM0G,EAAUxG,KAChF,CACJ,CAsaWuG,CAAaN,EAAGG,EAAUnE,EAAQX,iBAElC7E,EAAiBgC,EAAkB2H,GACnC1J,EAAgByC,EAAiBiH,GACjCA,EAASvB,UAAUC,IAAI7C,EAAQnB,eAC/BtE,EAvPO,SAAUkK,EAAa/E,GACtC,IAAIgF,EAAQD,EAQZ,OAP0C,IAAtC9K,EAAM+F,GAAUrG,UAAU,UAE1Bc,EADAuK,EAAQD,EAAYE,WAAU,GACV,cAAe,QACnCF,EAAYxJ,cAAcuH,YAAYkC,GACtCA,EAAMjI,MAAMmI,QAAU,OACtBF,EAAMG,WAAaJ,EAAYhI,MAAMmI,SAElCF,CACV,CA6OsBI,CAAaX,EAAUhD,GAClChH,EAAaI,EAAU,eAAgB,QAEvC4G,EAAkB4D,cAAc,IAAIC,YAAY,YAAa,CACzDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWnH,GAEfvC,KAAMoC,EACN4K,eAAgB5I,KAzBvB,CA4BJ,IAID1C,EAAiBD,EAAiB,aAAa,SAAUoK,GACrD,IAAIzH,EAASgB,EAAeyG,GACxB7C,EAAoBvB,EAAarD,EAAQyH,GACzC7C,GAAqBA,IAAsBrG,IAC3CC,EAA+BrD,EAAQyJ,EAAkBjB,SAAU5I,EAAQ6J,EAAmB,UACzFjJ,QAAO,SAAUC,GAAQ,OAAOA,IAASwB,EAAMC,GAAiBN,WAAc,IAC/E0G,EAAQjB,0BACRoC,EAAkByB,UAAUC,IAAI7C,EAAQjB,0BAE5CoC,EAAkB4D,cAAc,IAAIC,YAAY,YAAa,CACzDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWnH,GAEfwD,YAAa,CACT2D,UAAWV,EACXiE,kBAAmBrK,GAEvB5C,KAAMoC,EACN4K,eAAgB5I,MAGxB1C,EAAiBsH,EAAmB,aAAa,SAAU6C,GAGvD,IAAIqB,EAAYrB,EAAEsB,eAAiBtB,EAAEuB,YAChCvB,EAAEwB,cAAcpF,SAASiF,KACtBrF,EAAQjB,0BACRoC,EAAkByB,UAAUkB,OAAO9D,EAAQjB,0BAE/CoC,EAAkB4D,cAAc,IAAIC,YAAY,YAAa,CACzDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWV,GAEfhJ,KAAMoC,EACN4K,eAAgB5I,MAI/B,KAELzB,EAAoBqG,CACvB,IAMDtH,EAAiBD,EAAiB,WAAW,SAAUoK,GACnD,GAAKzJ,EAAL,CAGAA,EAASqI,UAAUkB,OAAO9D,EAAQnB,eAClC1E,EAAaI,EAAU,eAAgB,SACM,SAAzCA,EAAS2J,aAAa,gBAA8D,SAAjC5M,EAAQiD,EAAU,YACrEA,EAASuJ,SAEbvJ,EAASkC,MAAMmI,QAAUrK,EAASsK,kBAC3BtK,EAASsK,WAChB,IAAIY,EAAqB1N,MAAME,KAAKK,EAAOoN,UAAU7I,KAAI,SAAUzF,GAAQ,OAAOA,EAAKkC,WAAc,IAChGpB,QAAO,SAAUoB,GAAe,OAAOA,aAAuBC,WAAc,IAC5ErB,OAAO4D,GAAS,GACjB2J,GACAA,EAAmB3B,SAGvBlK,EAAgBmL,cAAc,IAAIC,YAAY,WAAY,CACtDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWnH,GAEfvC,KAAMoC,MAGdO,EAAoB,KACpBP,EAAW,KACXC,EAAiB,KACjBC,EAAgB,IA5Bf,CA6BJ,IAKDZ,EAAiBD,EAAiB,QAAQ,SAAUoK,GAChD,GAAK/F,EAAgBrE,EAAiBW,EAASU,eAA/C,CAGA+I,EAAE2B,iBACF3B,EAAE4B,kBACFtO,EAAQiD,EAAU,UAAW,QAE7B,IAAIkL,EAAqB1N,MAAME,KAAKK,EAAOoN,UAAU7I,KAAI,SAAUzF,GAC/D,OAAOA,EAAKkC,WACf,IAEIpB,QAAO,SAAUoB,GAAe,OAAOA,aAAuBC,WAAc,IAE5ErB,OAAO4D,GAAS,GAErBQ,EAAYmJ,EAAoBlL,GAEhCkL,EAAmB3B,SAInBlK,EAAgBmL,cAAc,IAAIC,YAAY,WAAY,CACtDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWnH,GAEfvC,KAAMoC,MAGd,IAAIjB,EAAcK,EAAMC,GAAiBN,YACrCuM,EAAcnO,EAAQgD,EAAgBwF,SAAUF,EAAQ5C,OACvDlF,QAAO,SAAUC,GAAQ,OAAOA,IAASmB,CAAc,IACxDwM,GAA2C,IAApB5O,KAAKkH,WAAsBlH,KAAOA,KAAK+D,cAC9D8K,EAAmBrO,EAAQoO,EAAqB5F,SAAU5I,EAAQwO,EAAsB,UACvF5N,QAAO,SAAUC,GAAQ,OAAOA,IAASmB,CAAc,IACxD0M,EAA0BrK,EAAOpB,EAAUxC,MAAME,KAAKsC,EAASU,cAAciF,UAC5EhI,QAAO,SAAUC,GAAQ,OAAOA,IAASmB,CAAc,KACxD2M,EAAmBtK,EAAOpB,EAAUwL,GACpC/F,EAAQjB,0BACR+G,EAAqBlD,UAAUkB,OAAO9D,EAAQjB,0BAM9CnE,IAAuBoL,GAA2BtL,IAAoBoL,GACtElM,EAAgBmL,cAAc,IAAIC,YAAY,aAAc,CACxDC,OAAQ,CACJ9G,OAAQ,CACJ+G,aAActK,EACdgH,MAAOjH,EACPkH,UAAWnH,EACX0K,kBAAmBvK,EACnBuC,MAAOyI,GAEX3H,YAAa,CACT0D,MAAOqE,EACPf,aAAcc,EACdnE,UAAWiE,EACXV,kBAAmBrK,EACnBqC,MAAO2I,GAEX5N,KAAMoC,KA9DjB,CAkEJ,IACD,IAj3BmB2L,EAAMC,EAEzBC,EA+2BIC,GAj3BeH,EAi3BoB,SAAUtM,EAAiBrC,EAASuG,EAAOE,GAC9E,GAAKzD,EAUL,GANIyF,EAAQsG,uBACR3M,EAAMC,GAAiBN,YAAYmD,MAAM8J,OAAS/L,EAAiB,KACnEb,EAAMC,GAAiBN,YAAYmD,MAAM+J,MAAQ/L,EAAgB,MAIjE1C,MAAME,KAAK2B,EAAgBsG,UAAUrE,QAAQtE,IAAY,EAAG,CAC5D,IAAIkP,EAAajK,EAAkBjF,GAC/BmP,EAAYxJ,EAAiB3F,GAC7BoP,EAAmBhL,EAAOhC,EAAMC,GAAiBN,YAAa/B,EAAQ0D,cAAciF,UACpF0G,EAAYjL,EAAOpE,EAASA,EAAQ0D,cAAciF,UAEtD,GAAIuG,EAAajM,GAAkBkM,EAAYjM,EAAe,CAE1D,IAAIoM,EAAmBJ,EAAajM,EAChCsM,EAAqBJ,EAAYjM,EACjCsM,EAAY/L,EAAQzD,GAASiE,IAC7BwL,EAAahM,EAAQzD,GAAS6D,KAClC,GAAIuL,EAAmBC,IACO,aAAxB5G,EAAQV,aAA8BtB,EAAQ+I,GACnB,eAAxB/G,EAAQV,aAAgCxB,EAAQkJ,GACrD,OAEJ,GAAIL,EAAmBC,IACO,aAAxB5G,EAAQV,aAA8BtB,EAAQ+I,EAAYN,EAAaI,GAC5C,eAAxB7G,EAAQV,aAAgCxB,EAAQkJ,EAAaN,EAAYI,GAC9E,MAEP,MAC2BtP,IAAxB+C,EAASsK,aACTtK,EAASsK,WAAatK,EAASkC,MAAMmI,SAEV,SAA3BrK,EAASkC,MAAMmI,UACfrK,EAASkC,MAAMmI,QAAU,QAK7B,IAAIqC,GAAa,EACjB,IACI,IAAIC,EAAwBlM,EAAQzD,GAASiE,IAAMjE,EAAQ4P,aAAe,EACtEC,EAA0BpM,EAAQzD,GAAS6D,KAAO7D,EAAQ8P,YAAc,EAC5EJ,EAAsC,aAAxBjH,EAAQV,aAA+BtB,GAASkJ,GACjC,eAAxBlH,EAAQV,aAAiCxB,GAASsJ,CAI1D,CAFD,MAAOpD,GACHiD,EAAaN,EAAmBC,CACnC,CACGK,EACA3K,EAAY/E,EAASoC,EAAMC,GAAiBN,aA52B7C,SAAUiD,EAAQhF,GAAkByE,EAAWO,EAAQhF,EAAS,SAAY,CA+2B3E6E,CAAa7E,EAASoC,EAAMC,GAAiBN,aAGjDvB,MAAME,KAAKK,EAAOoN,UAEbxN,QAAO,SAAUd,GAAQ,YAA4BI,IAArBJ,EAAKkC,WAA4B,IAEjET,SAAQ,SAAUzB,GACfA,EAAKkC,cAAgBK,EAAMC,GAAiBN,aAC5ClC,EAAKkC,YAAYwK,QAExB,GACJ,KACI,CAED,IAAIwD,EAAevP,MAAME,KAAKK,EAAOoN,UAChCxN,QAAO,SAAUd,GAAQ,YAA4BI,IAArBJ,EAAKkC,WAA4B,IACjEuD,KAAI,SAAUzF,GACf,OAAOA,EAAKkC,WACf,KAEsC,IAAnCgO,EAAazL,QAAQtE,IAAmBqC,IAAoBrC,GAAYG,EAAQH,EAAQ2I,SAAUF,EAAQ5C,OAAOnD,SACjHqN,EAAazO,SAAQ,SAAUtB,GAAW,OAAOA,EAAQuM,QAAW,IACpEvM,EAAQiL,YAAY7I,EAAMC,GAAiBN,aAElD,CACJ,OAn8BQ,KADgB6M,EAo8BtBnG,EAAQhB,YAn8BQmH,EAAO,GAEvB,WAEH,IADA,IAAI7C,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUvJ,OAAQsJ,IACpCD,EAAKC,GAAMC,UAAUD,GAEzBgE,aAAanB,GACbA,EAAUoB,YAAW,WACjBtB,EAAKpD,WAAM,EAAQQ,EACtB,GAAE6C,EACN,GA07BOsB,EAAkB,SAAUzD,GAC5B,IAAIzM,EAAUyM,EAAEzH,OACZ3C,GAAyC,IAAvBrC,EAAQ6G,WAAsB7G,EAAUqI,EAAarI,EAASyM,GAEpF,GADAzM,EAAUwI,EAAgBnG,EAAiBrC,GACtCgD,GAAa0D,EAAgBrE,EAAiBW,EAASU,gBAA4D,SAA1C3D,EAAQsC,EAAiB,aAAvG,CAGA,IAAIoG,EAAU1I,EAAQsC,EAAiB,QACnCgD,SAASoD,EAAQd,WAAaxH,EAAQkC,EAAgBsG,SAAU5I,EAAQsC,EAAiB,UAAUK,QAAU2C,SAASoD,EAAQd,WAAa3E,EAASU,gBAAkBrB,IAG1KoK,EAAE2B,iBACF3B,EAAE4B,kBACF5B,EAAEK,aAAaqD,YAA0D,IAA7C/N,EAAMC,GAAiBP,UAAU,QAAmB,OAAS,OACzFgN,EAAuBzM,EAAiBrC,EAASyM,EAAElG,MAAOkG,EAAEhG,OAR3D,CASJ,EACDnE,EAAiBwI,EAAUsF,OAAO/N,GAAkB,WAAY6N,GAChE5N,EAAiBwI,EAAUsF,OAAO/N,GAAkB,YAAa6N,EACpE,IACM5G,EACV,CACDnB,EAASkI,QAAU,SAAUhO,IArdN,SAAUA,GAC7B,IAAI0G,EAAOhJ,EAAQsC,EAAiB,SAAW,CAAC,EAC5CwD,EAAQ1F,EAAQkC,EAAgBsG,SAAUI,EAAKlD,OAC/CmD,EAAUpD,EAAYC,EAAOkD,EAAKE,QAEtCtG,EAAoBN,EAAiB,YACrCM,EAAoBN,EAAiB,aACrCM,EAAoBN,EAAiB,aACrCM,EAAoBN,EAAiB,WACrCM,EAAoBN,EAAiB,QAErC6F,EAAoB7F,GAEpBM,EAAoBqG,EAAS,aAC7BhB,EAAkBnC,GAClBuC,EAAgBvC,GAChBoC,EAAuB9E,EAAiBI,GAExClB,EAAgBwE,YAAa,CAChC,CAmcGyJ,CAAiBjO,EACpB,EACD8F,EAASsD,OAAS,SAAUpJ,GACxByG,EAAgBzG,EACnB,EACD8F,EAASoI,QAAU,SAAUlO,IAlaN,SAAUA,GAC7B,IAAI0G,EAAOhJ,EAAQsC,EAAiB,QAChCwD,EAAQ1F,EAAQkC,EAAgBsG,SAAUI,EAAKlD,OAC/CmD,EAAUpD,EAAYC,EAAOkD,EAAKE,QACtCrG,EAAaP,EAAiB,kBAAmB,QACjDtC,EAAQsC,EAAiB,YAAa,QACtCO,EAAaoG,EAAS,YAAa,SACnCrG,EAAoBqG,EAAS,YAChC,CA2ZGwH,CAAiBnO,EACpB,EAED8F,EAASsI,UAAY,CAEjBrP,MAAOrB,EACPiI,kBAAmBA,EACnBI,gBAAiBA,EACjBF,oBAAqBA,EACrBD,uBAAwBA,GAG5B,UCzwCM,EAA+BhK,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,4B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,yB,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,oB,ICMnCuS,GAAAA,SAAAA,G,oFACnBC,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEbjR,KAAKkR,UAAY,EAClB,E,EAEDC,KAAA,WAAO,WACL,OAAOC,EAAE,cAAe,CACtBA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,wCAChCD,EACE,QACAA,EACE,QACApR,KAAK8I,UAAUnD,KAAI,SAAC2L,EAAQC,GAAT,OACjBH,EAAE,KAAM,CACNA,EACE,KACAA,EAAE,+BAAgC,CAChCI,QAAS,SAAClL,GACR,EAAKmL,aAAaF,EAAajL,EAAMjB,OAAOhH,MAC7C,EACDA,MAAOiT,KAGXF,EACE,KACAA,EACE,gBACA,CACEM,QAAS,WACP,EAAKC,WAAWJ,GAAc,EAC/B,GAEH7R,IAAK,uBAGT0R,EACE,KACAA,EACE,gBACA,CACEM,QAAS,WACP,EAAKC,WAAWJ,EAAa,EAC9B,GAEH7R,IAAK,yBAGT0R,EACE,KACAA,EACE,+BACA,CACEM,QAAS,WACP,EAAKE,aAAaL,EACnB,GAEH7R,IAAK,mBA5CM,MAmDvB0R,EAAE,YAAaC,IAAAA,WAAAA,MAAqB,qDACpCD,EACE,QACAA,EAAE,SACFA,EAAE,KAAM,CACNA,EACE,KACAA,EAAE,+BAAgC,CAChCS,SAAU,SAACvL,GACT,EAAK4K,UAAY5K,EAAMjB,OAAOhH,KAC/B,EACDA,MAAO2B,KAAKkR,UACZ9O,YAAaiP,IAAAA,WAAAA,MAAqB,6CAGtCD,EACE,KACAA,EACE,gCACA,CACEM,QAAS,WACP,EAAKI,WACN,GAEHpS,IAAK,qBAMhB,E,EAEDqS,YAAA,SAAYjJ,GAEV9I,KAAKgS,MAAMH,SAAS,MAAQ/I,EAAQmJ,KAAK,KAC1C,E,EAEDnJ,QAAA,WACE,IAAMoJ,EAAQlS,KAAKgS,MAAM3T,MAAM+I,MAAM,KAEjC0B,EAAU,GAUd,OARAoJ,EAAMvQ,SAAQ,SAACwQ,GACb,IAAMC,EAAQD,EAAK/K,MAAM,IAAK,GAEb,OAAbgL,EAAM,KACRtJ,EAAUsJ,EAAM,GAAGhL,MAAM,KAE5B,IAEM0B,CACR,E,EAED2I,aAAA,SAAa/G,EAAOrM,GAClB,IAAIyK,EAAU9I,KAAK8I,UAEnBA,EAAQ4B,GAASrM,EAEjB2B,KAAK+R,YAAYjJ,EAClB,E,EAED6I,WAAA,SAAWjH,EAAO2H,GAChB,IAAIvJ,EAAU9I,KAAK8I,UAEbwJ,EAAW5H,EAAQ2H,EAEzB,KAAIC,EAAW,GAAKA,EAAWxJ,EAAQ/F,OAAS,GAAhD,CAIA,IAAMwP,EAAOzJ,EAAQ0J,OAAO9H,EAAO,GAEnC5B,EAAQ0J,OAAOF,EAAU,EAAGC,EAAK,IAEjCvS,KAAK+R,YAAYjJ,EANhB,CAOF,E,EAED8I,aAAA,SAAalH,GACX,IAAI5B,EAAU9I,KAAK8I,UAEnBA,EAAQ0J,OAAO9H,EAAO,GAEtB1K,KAAK+R,YAAYjJ,EAClB,E,EAEDgJ,UAAA,WACE,GAAuB,KAAnB9R,KAAKkR,UAAT,CAIA,IAAIpI,EAAU9I,KAAK8I,UAEnBA,EAAQ2J,KAAKzS,KAAKkR,WAElBlR,KAAKkR,UAAY,GAEjBlR,KAAK+R,YAAYjJ,EARhB,CASF,E,EAlKkBiI,C,OAAgC2B,ICQhCC,GAAAA,SAAAA,G,oFACnB3B,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEbjR,KAAK4S,WACL5S,KAAK6S,SAAU,EACf7S,KAAK8S,SAAW,GAChB9S,KAAK+S,eACL/S,KAAKgT,yBAAwF,MAA7D3B,IAAAA,KAAAA,SAAAA,sCACjC,E,EAED3P,OAAA,WAAS,WACP8G,EAASxI,KAAKK,QAAQ8F,cAAc,uBAAwB,CAC1DmD,OAAQ,WACP,GAAG3G,iBAAiB,cAAc,WACnC,IAAMsQ,EAAU,EAAKC,EAAE,gCACpBvN,KAAI,WACH,OAAOuN,EAAElT,MAAME,KAAK,KACrB,IACArC,MAEH,EAAKsV,WAAWF,EACjB,GACF,E,EAEDG,SAAA,SAASnC,GACP,YAAMmC,SAAN,UAAenC,GAEfjR,KAAK0B,QACN,E,EAED2R,SAAA,WACErT,KAAK0B,QACN,E,EAED4R,QAAA,WAAU,WACR,OAAOlC,EACL,+CACAA,EAAE,aAAc,CACdA,EAAE,KAAMC,IAAAA,WAAAA,MAAqB,yCAC7BD,EACE,cACAmC,KAAAA,UACE,CACEC,MAAOxT,KAAKgT,yBACZnB,SAAU,SAACxT,GACT,IAAMoV,EAAYpV,EAAQ,IAAM,IAChCqV,KAAa,CACX,sCAAuCD,IAEzC,EAAKT,yBAA2BS,CACjC,GAEHpC,IAAAA,WAAAA,MAAqB,0DAGzBD,EAAE,KAAMC,IAAAA,WAAAA,MAAqB,sCAC7BD,EACE,0BACApR,KAAK8S,SAASnN,KAAI,SAACgO,GAEjB,OAAO,EAAKC,SAASD,EACtB,KAEH3T,KAAK4T,SAAS5T,KAAA,OAGnB,E,EAQD4T,SAAA,SAASD,GAAO,WACV1T,EAAS0T,EAAMxT,KAEnB,OAAOiR,EACL,iBACA,CACE,UAAWuC,EAAMxT,KACjB3C,IAAKmW,EAAMxT,MAEb,CACEiR,EAAE,SAAU,CACVnR,EACI,CACE4T,KAAAA,UAAiB,CACfC,UAAW,qCACXpU,KAAM,eACNgS,QAAS1R,KAAK+T,YAAYC,KAAKhU,KAAM2T,KAEvC,KAEF,KACJvC,EACE,oBACA,CACEM,QAAS,SAAC5E,GAAD,OAAO,EAAKmH,YAAYnH,EAAxB,GAEX,CACEuE,IAAAA,WAAAA,MAAqB,gCAAkCpR,EAAS,OAAS,OAAQ,CAC/E0T,MAAOA,EAAMxU,SAEf,IACAO,IAAK,yBAIX0R,EAAE,cAAe,CACfA,EAAE,cAAe,CACfA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,qCAChCD,EAAE,oBAAqB,CACrB/S,MAAOsV,EAAMxU,OACbqS,QAAS0C,KAAS,QAASlU,KAAKmU,yBAAyBH,KAAKhU,KAAM,OAAQ2T,MAE9EvC,EAAE,gBAAiBC,IAAAA,WAAAA,MAAqB,4CAE1CD,EAAE,cAAe,CACfA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,4CAChCD,EAAE,oBAAqB,CACrB/S,MAAOsV,EAAMtU,cACbmS,QAAS0C,KAAS,QAASlU,KAAKmU,yBAAyBH,KAAKhU,KAAM,cAAe2T,MAErFvC,EAAE,gBAAiBC,IAAAA,WAAAA,MAAqB,mDAE1CD,EAAE,cAAe,CACfA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,qCAChCD,EAAE,oBAAqB,CACrB/S,MAAOsV,EAAMjU,OACb8R,QAAS0C,KAAS,QAASlU,KAAKmU,yBAAyBH,KAAKhU,KAAM,OAAQ2T,MAE9EvC,EACE,gBACAC,IAAAA,WAAAA,MAAqB,wCAAyC,CAC5DhU,EAAG,OAAG+W,KAAK,uCAAuC/O,OAAO,gBAI/D+L,EACE,cACAmC,KAAAA,UACE,CACEC,MAAOG,EAAM7T,SACb+R,SAAU7R,KAAKmU,yBAAyBH,KAAKhU,KAAM,SAAU2T,IAE/DtC,IAAAA,WAAAA,MAAqB,wCAGzBD,EACE,cACAmC,KAAAA,UACE,CACEC,MAAOG,EAAMnU,WACbqS,SAAU7R,KAAKmU,yBAAyBH,KAAKhU,KAAM,WAAY2T,IAEjEtC,IAAAA,WAAAA,MAAqB,0CAGzBD,EAAE,cAAe,CACfA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,qCAChCgD,KAAAA,UAAiB,CACfxC,SAAU,SAACxT,GACK,SAAVA,IACFA,EAAQ,MAGV,EAAK8V,yBAAyB,OAAQR,EAAOtV,EAC9C,EACDyK,QAAS9I,KAAKsU,iBACdjW,MAAOsV,EAAMrU,WAGA,WAAjBqU,EAAMrU,OACFyR,GAAwBwD,UAAU,CAChC1C,SAAU,SAACxT,GACT,EAAK8V,yBAAyB,aAAcR,EAAOtV,EACpD,EACDA,MAAOsV,EAAMpU,eAEf,KACa,OAAjBoU,EAAMrU,OACF8R,EAAE,cAAe,CACfA,EAAE,QAASC,IAAAA,WAAAA,MAAqB,2CAChCD,EAAE,oBAAqB,CACrB/S,MAAOsV,EAAMpU,aACbiS,QAAS0C,KAAS,QAASlU,KAAKmU,yBAAyBH,KAAKhU,KAAM,aAAc2T,MAEpFvC,EACE,gBACAC,IAAAA,WAAAA,MAAqB,8CAA+C,CAClEhU,EAAG,OAAG+W,KAAK,qEAAqE/O,OAAO,gBAI7F,KACJ+L,EACE,cACAA,EAAE,eAAgB,CAChByC,KAAAA,UACE,CACEC,UAAW,yBACXjB,QAAS7S,KAAK6S,QACd2B,UAAWxU,KAAKyU,WAAWd,GAC3BjC,QAASzR,EAASD,KAAK0U,oBAAoBV,KAAKhU,KAAM2T,GAAS3T,KAAK2U,eAAeX,KAAKhU,OAE1FqR,IAAAA,WAAAA,MAAqB,iCAAmCpR,EAAS,OAAS,OAAS,WAErFA,EACI4T,KAAAA,UACE,CACEC,UAAW,wBACXjB,QAAS7S,KAAK6S,QACdnB,QAAS1R,KAAK+T,YAAYC,KAAKhU,KAAM2T,IAEvCtC,IAAAA,WAAAA,MAAqB,8CAEvB,WAMf,E,EAED8C,yBAAA,SAAyBS,EAAMjB,EAAOtV,GAAO,MAC3CsV,EAAMkB,iBAAN,MACGD,GAAOvW,EADV,GAGD,E,EAOD8U,WAAA,SAAWF,GACT5B,IAAAA,QACW,CACPzH,OAAQ,OACRkL,IAAKzD,IAAAA,MAAAA,UAAoB,UAAY,2BACrC0D,KAAM,CACJpV,KAAMsT,KAGT+B,KAAKhV,KAAKiV,eAAejB,KAAKhU,MAClC,E,EAODiU,YAAA,SAAYnH,GACVoG,EAAEpG,EAAEzH,QAAQ6P,QAAQ,UAAUC,YAAY,SAC3C,E,EAODpB,YAAA,SAAYJ,GACVA,EAAK,SAAUqB,KAAKhV,KAAKiV,eAAejB,KAAKhU,MAC9C,E,EAOD2U,eAAA,SAAe7H,GAAG,WAChBA,EAAE2B,iBAEFzO,KAAA,IACGoV,KAAKpV,KAAA,IAASE,KAAKmV,YACnBL,KAAKhV,KAAKiV,eAAejB,KAAKhU,OAC9BgV,MAAK,WACJ,EAAKpC,UACN,IAEHxB,EAAEkE,QACH,E,EAODZ,oBAAA,SAAoBf,GACbA,EAAMxT,MAEXwT,EAAMyB,KAAKzB,EAAMzT,KAAKmV,YAAYL,KAAKhV,KAAKiV,eAAejB,KAAKhU,MACjE,E,EAKDiV,eAAA,WACEjV,KAAK8S,SAAWzB,IAAAA,MAAAA,IAAc,oBAG9BrR,KAAK8S,SAASnT,MAAK,SAACtC,EAAGkY,GACrB,OAAIlY,EAAEsC,OAAS4V,EAAE5V,QAAgB,EAC7BtC,EAAEsC,OAAS4V,EAAE5V,OAAe,EACzB,CACR,IAEDK,KAAK6S,SAAU,EACfzB,EAAEkE,QACH,E,EAKDvC,aAAA,WAAe,WAGb,OAFA/S,KAAK6S,SAAU,EAERxB,IAAAA,QACI,CACPzH,OAAQ,MACRkL,IAAKzD,IAAAA,MAAAA,UAAoB,UAAY,uBAEtC2D,MAAK,SAACQ,GACLnE,IAAAA,MAAAA,YAAsBmE,GAEtB,EAAKP,gBACN,GACJ,E,EAKDrC,SAAA,WACE5S,KAAA,IAAWqR,IAAAA,MAAAA,aAAuB,mBAAoB,CACpDgE,WAAY,CACVlW,KAAM,GACNE,YAAa,GACbI,OAAQ,GACRC,KAAM,GACNF,UAAU,EACVM,QAAQ,EACRR,KAAM,KACNC,WAAY,KAGjB,E,EAODkV,WAAA,SAAWd,GACT,QAAIA,EAAMxU,MAKX,E,EAMDmV,eAAA,WACE,MAAO,CACLQ,IAAKzD,IAAAA,WAAAA,MAAqB,kCAC1BoE,MAAOpE,IAAAA,WAAAA,MAAqB,oCAC5BqE,QAASrE,IAAAA,WAAAA,MAAqB,sCAC9BsE,OAAQtE,IAAAA,WAAAA,MAAqB,qCAC7BuE,KAAMvE,IAAAA,WAAAA,MAAqB,uCAE9B,E,EAtXkBsB,CAAuBkD,KCV5CxE,IAAAA,aAAAA,IAAqB,kBAAkB,WACrCA,IAAAA,MAAAA,OAAAA,oBAAuCnS,EAEvCmS,IAAAA,cAAAA,IACO,kBACJyE,aAAanD,IACboD,mBACC,CACErW,KAAM,iBACNsW,MAAO3E,IAAAA,WAAAA,MAAqB,iDAC5B4E,WAAY,8BACZC,YAAY,GAEd,QAEDH,mBACC,CACErW,KAAM,iBACNsW,MAAO3E,IAAAA,WAAAA,MAAqB,iDAC5B4E,WAAY,+BAEd,SAEDF,mBACC,CACErW,KAAM,iBACNsW,MAAO3E,IAAAA,WAAAA,MAAqB,wDAC5B4E,WAAY,sCAEd,WAEL,G","sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/webpack/runtime/compat get default export","webpack://@fof/masquerade/webpack/runtime/define property getters","webpack://@fof/masquerade/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/masquerade/webpack/runtime/make namespace object","webpack://@fof/masquerade/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/masquerade/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Select']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['admin/utils/saveSettings']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/masquerade/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/masquerade/./src/admin/components/SelectFieldOptionEditor.js","webpack://@fof/masquerade/./src/admin/components/MasqueradePage.js","webpack://@fof/masquerade/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\n\nexport default class Field extends Model {\n  name = Model.attribute('name');\n  description = Model.attribute('description');\n  type = Model.attribute('type');\n  validation = Model.attribute('validation');\n  required = Model.attribute('required');\n  prefix = Model.attribute('prefix');\n  icon = Model.attribute('icon');\n  sort = Model.attribute('sort');\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\n  answer = Model.hasOne('answer');\n  on_bio = Model.attribute('on_bio');\n\n  apiEndpoint() {\n    return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar _removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData,\n    _removeContainerEvents: _removeContainerEvents\n};\n\nexport default sortable;\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/utils/saveSettings'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/withAttr'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\n/* global m */\n\nexport default class SelectFieldOptionEditor extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.newOption = '';\n  }\n\n  view() {\n    return m('.Form-group', [\n      m('label', app.translator.trans('fof-masquerade.admin.fields.options')),\n      m(\n        'table',\n        m(\n          'tbody',\n          this.options().map((option, optionIndex) =>\n            m('tr', [\n              m(\n                'td',\n                m('input[type=text].FormControl', {\n                  oninput: (event) => {\n                    this.updateOption(optionIndex, event.target.value);\n                  },\n                  value: option,\n                })\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button',\n                  {\n                    onclick: () => {\n                      this.moveOption(optionIndex, -1);\n                    },\n                  },\n                  icon('fas fa-chevron-up')\n                )\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button',\n                  {\n                    onclick: () => {\n                      this.moveOption(optionIndex, 1);\n                    },\n                  },\n                  icon('fas fa-chevron-down')\n                )\n              ),\n              m(\n                'td',\n                m(\n                  'button.Button.Button--danger',\n                  {\n                    onclick: () => {\n                      this.deleteOption(optionIndex);\n                    },\n                  },\n                  icon('fas fa-times')\n                )\n              ),\n            ])\n          )\n        )\n      ),\n      m('.helpText', app.translator.trans('fof-masquerade.admin.fields.option-comma-warning')),\n      m(\n        'table',\n        m('tbody'),\n        m('tr', [\n          m(\n            'td',\n            m('input[type=text].FormControl', {\n              onchange: (event) => {\n                this.newOption = event.target.value;\n              },\n              value: this.newOption,\n              placeholder: app.translator.trans('fof-masquerade.admin.fields.option-new'),\n            })\n          ),\n          m(\n            'td',\n            m(\n              'button.Button.Button--primary',\n              {\n                onclick: () => {\n                  this.addOption();\n                },\n              },\n              icon('fas fa-plus')\n            )\n          ),\n        ])\n      ),\n    ]);\n  }\n\n  updateRules(options) {\n    // We ignore other existing rules, they would probably be leftovers from another field type when changing types\n    this.attrs.onchange('in:' + options.join(','));\n  }\n\n  options() {\n    const rules = this.attrs.value.split('|');\n\n    let options = [];\n\n    rules.forEach((rule) => {\n      const parts = rule.split(':', 2);\n\n      if (parts[0] === 'in') {\n        options = parts[1].split(',');\n      }\n    });\n\n    return options;\n  }\n\n  updateOption(index, value) {\n    let options = this.options();\n\n    options[index] = value;\n\n    this.updateRules(options);\n  }\n\n  moveOption(index, moveIndex) {\n    let options = this.options();\n\n    const newIndex = index + moveIndex;\n\n    if (newIndex < 0 || newIndex > options.length - 1) {\n      return;\n    }\n\n    const move = options.splice(index, 1);\n\n    options.splice(newIndex, 0, move[0]);\n\n    this.updateRules(options);\n  }\n\n  deleteOption(index) {\n    let options = this.options();\n\n    options.splice(index, 1);\n\n    this.updateRules(options);\n  }\n\n  addOption() {\n    if (this.newOption === '') {\n      return;\n    }\n\n    let options = this.options();\n\n    options.push(this.newOption);\n\n    this.newOption = '';\n\n    this.updateRules(options);\n  }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/admin/app';\nimport icon from 'flarum/common/helpers/icon';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport Button from 'flarum/common/components/Button';\nimport saveSettings from 'flarum/admin/utils/saveSettings';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport SelectFieldOptionEditor from './SelectFieldOptionEditor';\n\n/* global m, $ */\n\nexport default class MasqueradePage extends ExtensionPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.resetNew();\n    this.loading = false;\n    this.existing = [];\n    this.loadExisting();\n    this.enforceProfileCompletion = app.data.settings['masquerade.force-profile-completion'] === '1';\n  }\n\n  config() {\n    sortable(this.element.querySelector('.js-sortable-fields'), {\n      handle: 'legend',\n    })[0].addEventListener('sortupdate', () => {\n      const sorting = this.$('.js-sortable-fields > .Field')\n        .map(function () {\n          return $(this).data('id');\n        })\n        .get();\n\n      this.updateSort(sorting);\n    });\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config();\n  }\n\n  onupdate() {\n    this.config();\n  }\n\n  content() {\n    return m(\n      '.ExtensionPage-settings.ProfileConfigurePane',\n      m('.container', [\n        m('h2', app.translator.trans('fof-masquerade.admin.general-options')),\n        m(\n          '.Form-group',\n          Switch.component(\n            {\n              state: this.enforceProfileCompletion,\n              onchange: (value) => {\n                const saveValue = value ? '1' : '0';\n                saveSettings({\n                  'masquerade.force-profile-completion': saveValue,\n                });\n                this.enforceProfileCompletion = saveValue;\n              },\n            },\n            app.translator.trans('fof-masquerade.admin.fields.force-user-to-completion')\n          )\n        ),\n        m('h2', app.translator.trans('fof-masquerade.admin.fields.title')),\n        m(\n          'form.js-sortable-fields',\n          this.existing.map((field) => {\n            // Build array of fields to show.\n            return this.addField(field);\n          })\n        ),\n        this.addField(this.new),\n      ])\n    );\n  }\n\n  /**\n   * Creates a field in the DOM.\n   *\n   * @param field\n   * @returns {*}\n   */\n  addField(field) {\n    let exists = field.id();\n\n    return m(\n      'fieldset.Field',\n      {\n        'data-id': field.id(),\n        key: field.id(),\n      },\n      [\n        m('legend', [\n          exists\n            ? [\n                Button.component({\n                  className: 'Button Button--icon Button--danger',\n                  icon: 'fas fa-trash',\n                  onclick: this.deleteField.bind(this, field),\n                }),\n                ' ',\n              ]\n            : null,\n          m(\n            'span.Field-toggle',\n            {\n              onclick: (e) => this.toggleField(e),\n            },\n            [\n              app.translator.trans('fof-masquerade.admin.fields.' + (exists ? 'edit' : 'add'), {\n                field: field.name(),\n              }),\n              ' ',\n              icon('fas fa-caret-down'),\n            ]\n          ),\n        ]),\n        m('.Field-body', [\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.name')),\n            m('input.FormControl', {\n              value: field.name(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'name', field)),\n            }),\n            m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.name-help')),\n          ]),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.description')),\n            m('input.FormControl', {\n              value: field.description(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'description', field)),\n            }),\n            m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.description-help')),\n          ]),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.icon')),\n            m('input.FormControl', {\n              value: field.icon(),\n              oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'icon', field)),\n            }),\n            m(\n              'span.helpText',\n              app.translator.trans('fof-masquerade.admin.fields.icon-help', {\n                a: <a href=\"https://fontawesome.com/icons?m=free\" target=\"_blank\" />,\n              })\n            ),\n          ]),\n          m(\n            '.Form-group',\n            Switch.component(\n              {\n                state: field.on_bio(),\n                onchange: this.updateExistingFieldInput.bind(this, 'on_bio', field),\n              },\n              app.translator.trans('fof-masquerade.admin.fields.on_bio')\n            )\n          ),\n          m(\n            '.Form-group',\n            Switch.component(\n              {\n                state: field.required(),\n                onchange: this.updateExistingFieldInput.bind(this, 'required', field),\n              },\n              app.translator.trans('fof-masquerade.admin.fields.required')\n            )\n          ),\n          m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.type')),\n            Select.component({\n              onchange: (value) => {\n                if (value === 'null') {\n                  value = null;\n                }\n\n                this.updateExistingFieldInput('type', field, value);\n              },\n              options: this.availableTypes(),\n              value: field.type(),\n            }),\n          ]),\n          field.type() === 'select'\n            ? SelectFieldOptionEditor.component({\n                onchange: (value) => {\n                  this.updateExistingFieldInput('validation', field, value);\n                },\n                value: field.validation(),\n              })\n            : null,\n          field.type() === null\n            ? m('.Form-group', [\n                m('label', app.translator.trans('fof-masquerade.admin.fields.validation')),\n                m('input.FormControl', {\n                  value: field.validation(),\n                  oninput: withAttr('value', this.updateExistingFieldInput.bind(this, 'validation', field)),\n                }),\n                m(\n                  'span.helpText',\n                  app.translator.trans('fof-masquerade.admin.fields.validation-help', {\n                    a: <a href=\"https://laravel.com/docs/5.2/validation#available-validation-rules\" target=\"_blank\" />,\n                  })\n                ),\n              ])\n            : null,\n          m(\n            '.Form-group',\n            m('.ButtonGroup', [\n              Button.component(\n                {\n                  className: 'Button Button--primary',\n                  loading: this.loading,\n                  disabled: !this.readyToAdd(field),\n                  onclick: exists ? this.updateExistingField.bind(this, field) : this.submitAddField.bind(this),\n                },\n                app.translator.trans('fof-masquerade.admin.buttons.' + (exists ? 'edit' : 'add') + '-field')\n              ),\n              exists\n                ? Button.component(\n                    {\n                      className: 'Button Button--danger',\n                      loading: this.loading,\n                      onclick: this.deleteField.bind(this, field),\n                    },\n                    app.translator.trans('fof-masquerade.admin.buttons.delete-field')\n                  )\n                : null,\n            ])\n          ),\n        ]),\n      ]\n    );\n  }\n\n  updateExistingFieldInput(what, field, value) {\n    field.pushAttributes({\n      [what]: value,\n    });\n  }\n\n  /**\n   * Sorts the fields.\n   *\n   * @param {Array} sorting\n   */\n  updateSort(sorting) {\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/masquerade/fields/order',\n        body: {\n          sort: sorting,\n        },\n      })\n      .then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Opens and closes field configuration sets.\n   *\n   * @param e\n   */\n  toggleField(e) {\n    $(e.target).parents('.Field').toggleClass('active');\n  }\n\n  /**\n   * Deletes a field configuration set.\n   *\n   * @param field\n   */\n  deleteField(field) {\n    field.delete().then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Saves the settings to the database and redraw the page\n   *\n   * @param e\n   */\n  submitAddField(e) {\n    e.preventDefault();\n\n    this.new\n      .save(this.new.data.attributes)\n      .then(this.requestSuccess.bind(this))\n      .then(() => {\n        this.resetNew();\n      });\n\n    m.redraw();\n  }\n\n  /**\n   * Updates the value of one field.\n   *\n   * @param field\n   */\n  updateExistingField(field) {\n    if (!field.id()) return;\n\n    field.save(field.data.attributes).then(this.requestSuccess.bind(this));\n  }\n\n  /**\n   * Parses result to update DOM.\n   */\n  requestSuccess() {\n    this.existing = app.store.all('masquerade-field');\n\n    // Update order in case the store order doesn't reflect the true ordering\n    this.existing.sort((a, b) => {\n      if (a.sort() < b.sort()) return -1;\n      if (a.sort() > b.sort()) return 1;\n      return 0;\n    });\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  /**\n   * Retrieves list of fields.\n   */\n  loadExisting() {\n    this.loading = true;\n\n    return app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n      })\n      .then((result) => {\n        app.store.pushPayload(result);\n\n        this.requestSuccess();\n      });\n  }\n\n  /**\n   * Resets the new field.\n   */\n  resetNew() {\n    this.new = app.store.createRecord('masquerade-field', {\n      attributes: {\n        name: '',\n        description: '',\n        prefix: '',\n        icon: '',\n        required: false,\n        on_bio: false,\n        type: null,\n        validation: '',\n      },\n    });\n  }\n\n  /**\n   * Checks whether creation field is completed.\n   *\n   * @returns boolean\n   */\n  readyToAdd(field) {\n    if (field.name()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * List of field types availables\n   * @returns {Array}\n   */\n  availableTypes() {\n    return {\n      url: app.translator.trans('fof-masquerade.admin.types.url'),\n      email: app.translator.trans('fof-masquerade.admin.types.email'),\n      boolean: app.translator.trans('fof-masquerade.admin.types.boolean'),\n      select: app.translator.trans('fof-masquerade.admin.types.select'),\n      null: app.translator.trans('fof-masquerade.admin.types.advanced'),\n    };\n  }\n}\n","import app from 'flarum/admin/app';\nimport Field from './../lib/models/Field';\nimport MasqueradePage from './components/MasqueradePage';\n\napp.initializers.add('fof-masquerade', () => {\n  app.store.models['masquerade-field'] = Field;\n\n  app.extensionData\n    .for('fof-masquerade')\n    .registerPage(MasqueradePage)\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.view-profile'),\n        permission: 'fof.masquerade.view-profile',\n        allowGuest: true,\n      },\n      'view'\n    )\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.have-profile'),\n        permission: 'fof.masquerade.have-profile',\n      },\n      'start'\n    )\n    .registerPermission(\n      {\n        icon: 'far fa-id-card',\n        label: app.translator.trans('fof-masquerade.admin.permissions.edit-others-profile'),\n        permission: 'fof.masquerade.edit-others-profile',\n      },\n      'moderate'\n    );\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Field","name","Model","description","type","validation","required","prefix","icon","sort","deleted_at","answer","on_bio","apiEndpoint","this","exists","data","id","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","store","sortableElement","addEventListener","eventName","callback","i","length","removeEventListener","addAttribute","attribute","setAttribute","removeAttribute","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","getPropertyValue","parseInt","map","int","isNaN","reduce","sum","_getElementWidth","_getHandles","items","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","_removeItemEvents","_removeContainerEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","children","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","sortableContainer","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","_a","includes","classList","add","apply","_makePlaceholder","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","arguments","now","Date","_throttle","buttons","_b","remove","enableHoverClass","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","SelectFieldOptionEditor","oninit","vnode","newOption","view","m","app","option","optionIndex","oninput","updateOption","onclick","moveOption","deleteOption","onchange","addOption","updateRules","attrs","join","rules","rule","parts","moveIndex","newIndex","move","splice","push","Component","MasqueradePage","resetNew","loading","existing","loadExisting","enforceProfileCompletion","sorting","$","updateSort","oncreate","onupdate","content","Switch","state","saveValue","saveSettings","field","addField","Button","className","deleteField","bind","toggleField","withAttr","updateExistingFieldInput","href","Select","availableTypes","component","disabled","readyToAdd","updateExistingField","submitAddField","what","pushAttributes","url","body","then","requestSuccess","parents","toggleClass","save","attributes","redraw","b","result","email","boolean","select","null","ExtensionPage","registerPage","registerPermission","label","permission","allowGuest"],"sourceRoot":""}