{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/external \"flarum.core.compat['app']\"","webpack://@fof/masquerade/external \"flarum.core.compat['Model']\"","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['extend']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['Component']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/masquerade/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/masquerade/./src/admin/components/SelectFieldOptionEditor.js","webpack://@fof/masquerade/./src/admin/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/admin/addProfileConfigurePane.js","webpack://@fof/masquerade/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Field","apiEndpoint","this","exists","data","id","mixin","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","addData","element","undefined","h5s","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","delete","store","sortableElement","addEventListener","eventName","callback","length","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","target","_getElementHeight","style","getComputedStyle","map","int","parseInt","getPropertyValue","isNaN","reduce","sum","_getElementWidth","_getHandles","items","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","sortableContainer","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","arguments","now","Date","apply","_throttle","buttons","children","_a","_b","classList","remove","add","_removeItemEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","slice","test","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","includes","_makePlaceholder","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","SelectFieldOptionEditor","init","newOption","prop","view","app","translator","trans","option","optionIndex","oninput","withAttr","updateOption","onclick","moveOption","deleteOption","onchange","addOption","updateRules","props","join","rules","rule","parts","moveIndex","newIndex","move","splice","push","Component","ProfileConfigurePane","resetNew","loading","existing","loadExisting","enforceProfileCompletion","settings","sorting","$","updateSort","Switch","component","state","updateSetting","field","addField","onsubmit","submitAddField","setting","saveSettings","Button","className","deleteField","toggleField","updateExistingFieldInput","a","href","Select","availableTypes","disabled","readyToAdd","updateExistingField","what","pushAttributes","request","url","forum","then","requestSuccess","parents","toggleClass","redraw","result","model","pushPayload","all","b","email","boolean","select","null","routes","path","extensionSettings","route","extend","AdminNav","AdminLinkButton","initializers","models","PermissionGrid","label","permission","allowGuest","addProfileConfigurePane"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/mixin'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    type: Model.attribute('type'),\n    validation: Model.attribute('validation'),\n    required: Model.attribute('required'),\n    prefix: Model.attribute('prefix'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    answer: Model.hasOne('answer'),\n    on_bio: Model.attribute('on_bio')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['utils/saveSettings'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nexport default sortable;\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport icon from 'flarum/helpers/icon';\n\n/* global m */\n\nexport default class SelectFieldOptionEditor extends Component {\n    init() {\n        this.newOption = m.prop('');\n    }\n\n    view() {\n        return m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.options')),\n            m('table', m('tbody', this.options().map((option, optionIndex) => m('tr', [\n                m('td', m('input[type=text].FormControl', {\n                    oninput: m.withAttr('value', value => {\n                        this.updateOption(optionIndex, value);\n                    }),\n                    value: option,\n                })),\n                m('td', m('button.Button', {\n                    onclick: () => {\n                        this.moveOption(optionIndex, -1);\n                    },\n                }, icon('fas fa-chevron-up'))),\n                m('td', m('button.Button', {\n                    onclick: () => {\n                        this.moveOption(optionIndex, 1);\n                    },\n                }, icon('fas fa-chevron-down'))),\n                m('td', m('button.Button.Button--danger', {\n                    onclick: () => {\n                        this.deleteOption(optionIndex);\n                    },\n                }, icon('fas fa-close'))),\n            ])))),\n            m('.helpText', app.translator.trans('fof-masquerade.admin.fields.option-comma-warning')),\n            m('table', m('tbody'), m('tr', [\n                m('td', m('input[type=text].FormControl', {\n                    onchange: m.withAttr('value', this.newOption),\n                    value: this.newOption(),\n                    placeholder: app.translator.trans('fof-masquerade.admin.fields.option-new'),\n                })),\n                m('td', m('button.Button.Button--primary', {\n                    onclick: () => {\n                        this.addOption();\n                    },\n                }, icon('fas fa-plus'))),\n            ])),\n        ]);\n    }\n\n    updateRules(options) {\n        // We ignore other existing rules, they would probably be leftovers from another field type when changing types\n        this.props.onchange('in:' + options.join(','));\n    }\n\n    options() {\n        const rules = this.props.value.split('|');\n\n        let options = [];\n\n        rules.forEach(rule => {\n            const parts = rule.split(':', 2);\n\n            if (parts[0] === 'in') {\n                options = parts[1].split(',');\n            }\n        });\n\n        return options;\n    }\n\n    updateOption(index, value) {\n        let options = this.options();\n\n        options[index] = value;\n\n        this.updateRules(options);\n    }\n\n    moveOption(index, moveIndex) {\n        let options = this.options();\n\n        const newIndex = index + moveIndex;\n\n        if (newIndex < 0 || newIndex > options.length - 1) {\n            return;\n        }\n\n        const move = options.splice(index, 1);\n\n        options.splice(newIndex, 0, move[0]);\n\n        this.updateRules(options);\n    }\n\n    deleteOption(index) {\n        let options = this.options();\n\n        options.splice(index, 1);\n\n        this.updateRules(options);\n    }\n\n    addOption() {\n        if (this.newOption() === '') {\n            return;\n        }\n\n        let options = this.options();\n\n        options.push(this.newOption());\n\n        this.newOption('');\n\n        this.updateRules(options);\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport Button from 'flarum/components/Button';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport SelectFieldOptionEditor from '../components/SelectFieldOptionEditor';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends Component {\n\n    /**\n     * Sets up the component.\n     */\n    init() {\n        this.resetNew();\n        this.loading = false;\n        this.existing = [];\n        this.loadExisting();\n        this.enforceProfileCompletion = m.prop(app.data.settings['masquerade.force-profile-completion'] == 1);\n    }\n\n    /**\n     * Configures the component.\n     */\n    config() {\n        sortable(this.element.querySelector('.js-sortable-fields'), {\n            handle: 'legend',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-sortable-fields > .Field')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    /**\n     * Generates the component view.\n     *\n     * @returns {*}\n     */\n    view() {\n        return m('.ProfileConfigurePane', m('.container', [\n            m('h1', app.translator.trans('fof-masquerade.admin.title')),\n            m('h2', app.translator.trans('fof-masquerade.admin.general-options')),\n            m('form', [\n                m('.Form-group', Switch.component({\n                    state: this.enforceProfileCompletion(),\n                    onchange: this.updateSetting.bind(this, this.enforceProfileCompletion, 'masquerade.force-profile-completion'),\n                    children: app.translator.trans('fof-masquerade.admin.fields.force-user-to-completion'),\n                })),\n            ]),\n            m('h2', app.translator.trans('fof-masquerade.admin.fields.title')),\n            m('form.js-sortable-fields', this.existing.map(field => {\n                // Build array of fields to show.\n                return this.addField(field);\n            })),\n            m('form', {\n                onsubmit: this.submitAddField.bind(this),\n            }, [\n                this.addField(this.new),\n            ]),\n        ]));\n    }\n\n    /**\n     * Updates setting in database.\n     * @param prop\n     * @param setting\n     * @param value\n     */\n    updateSetting(prop, setting, value) {\n        saveSettings({\n            [setting]: value,\n        });\n\n        prop(value);\n    }\n\n    /**\n     * Creates a field in the DOM.\n     *\n     * @param field\n     * @returns {*}\n     */\n    addField(field) {\n        let exists = field.id();\n\n        return m('fieldset.Field', {\n            'data-id': field.id(),\n            key: field.id(),\n        }, [\n            m('legend', [\n                exists ? [Button.component({\n                    className: 'Button Button--icon Button--danger',\n                    icon: \"fas fa-trash\",\n                    onclick: this.deleteField.bind(this, field),\n                }), ' '] : null,\n                m('span.Field-toggle', {\n                    onclick: (e) => this.toggleField(e),\n                }, [\n                    app.translator.trans('fof-masquerade.admin.fields.' + (exists ? 'edit' : 'add'), {\n                        field: field.name(),\n                    }),\n                    ' ',\n                    icon('fas fa-caret-down'),\n                ]),\n            ]),\n            m('.Field-body', [\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.name')),\n                    m('input.FormControl', {\n                        value: field.name(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'name', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.name-help')),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.description')),\n                    m('input.FormControl', {\n                        value: field.description(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'description', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.description-help')),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.icon')),\n                    m('input.FormControl', {\n                        value: field.icon(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'icon', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.icon-help', {\n                        a: <a href=\"https://fontawesome.com/icons?m=free\" target=\"_blank\"/>,\n                    })),\n                ]),\n                m('.Form-group', Switch.component({\n                    state: field.on_bio(),\n                    onchange: this.updateExistingFieldInput.bind(this, 'on_bio', field),\n                    children: app.translator.trans('fof-masquerade.admin.fields.on_bio'),\n                })),\n                m('.Form-group', Switch.component({\n                    state: field.required(),\n                    onchange: this.updateExistingFieldInput.bind(this, 'required', field),\n                    children: app.translator.trans('fof-masquerade.admin.fields.required'),\n                })),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.type')),\n                    Select.component({\n                        onchange: value => {\n                            if (value === 'null') {\n                                value = null;\n                            }\n\n                            this.updateExistingFieldInput('type', field, value);\n                        },\n                        options: this.availableTypes(),\n                        value: field.type(),\n                    }),\n                ]),\n                (field.type() === 'select' ? SelectFieldOptionEditor.component({\n                    onchange: value => {\n                        this.updateExistingFieldInput('validation', field, value);\n                    },\n                    value: field.validation(),\n                }) : null),\n                (field.type() === null ? m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.validation')),\n                    m('input.FormControl', {\n                        value: field.validation(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'validation', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.validation-help', {\n                        a: <a href=\"https://laravel.com/docs/5.2/validation#available-validation-rules\"\n                              target=\"_blank\"/>,\n                    })),\n                ]) : null),\n                m('.Form-group', m('.ButtonGroup', [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary',\n                        children: app.translator.trans('fof-masquerade.admin.buttons.' + (exists ? 'edit' : 'add') + '-field'),\n                        loading: this.loading,\n                        disabled: !this.readyToAdd(field),\n                        onclick: this.updateExistingField.bind(this, field)\n                    }),\n                    (exists ? Button.component({\n                        type: 'submit',\n                        className: 'Button Button--danger',\n                        children: app.translator.trans('fof-masquerade.admin.buttons.delete-field'),\n                        loading: this.loading,\n                        onclick: this.deleteField.bind(this, field),\n                    }) : null),\n                ])),\n            ]),\n        ]);\n    }\n\n    updateExistingFieldInput(what, field, value) {\n        let exists = field.id();\n\n        if (exists) {\n            field.pushAttributes({\n                [what]: value\n            })\n        } else {\n            field[what](value);\n        }\n    }\n\n    /**\n     * Sorts the fields.\n     *\n     * @param {Array} sorting\n     */\n    updateSort(sorting) {\n        let data = {\n            sort: sorting\n        };\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/order',\n            data\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Opens and closes field configuration sets.\n     *\n     * @param e\n     */\n    toggleField(e) {\n        $(e.target).parents('.Field').toggleClass('active');\n    }\n\n    /**\n     * Deletes a field configuration set.\n     *\n     * @param field\n     */\n    deleteField(field) {\n        app.request({\n            method: 'DELETE',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/' + field.id(),\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Saves the settings to the database and redraw the page\n     *\n     * @param e\n     */\n    submitAddField(e) {\n        e.preventDefault();\n\n        let data = this.new;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n            data,\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n\n        this.resetNew();\n\n        m.redraw();\n    }\n\n    /**\n     * Updates the value of one field.\n     *\n     * @param field\n     */\n    updateExistingField(field) {\n        if (!field.id()) return;\n\n        let data = field.data;\n\n        app.request({\n            // We use PATCH and not PUT because the endpoint allows filling only some of the fields\n            // (even if here we always pass all the attributes)\n            method: 'PATCH',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/' + field.id(),\n            data,\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Parses result to update DOM.\n     *\n     * @param result\n     */\n    requestSuccess(result) {\n        let model = app.store.pushPayload(result);\n\n        // In case we've updated/deleted one instance delete it if necessary.\n        if (!(model instanceof Array) && model.deleted_at()) {\n            app.store.remove(model);\n        }\n\n        this.existing = app.store.all('masquerade-field');\n\n        // Update order in case the store order doesn't reflect the true ordering\n        this.existing.sort((a, b) => {\n            if (a.sort() < b.sort()) return -1;\n            if (a.sort() > b.sort()) return 1;\n            return 0;\n        });\n\n        this.loading = false;\n        m.redraw()\n    }\n\n    /**\n     * Retrieves list of fields.\n     */\n    loadExisting() {\n        this.loading = true;\n\n        return app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Resets the new field.\n     */\n    resetNew() {\n        this.new = {\n            // id() does not hold any value, but it's necessary to keep it because it's called to make the difference\n            // between the simple object holding the new field's value and the model holding an existing field's value\n            'id': m.prop(),\n            'name': m.prop(''),\n            'description': m.prop(''),\n            'prefix': m.prop(''),\n            'icon': m.prop(''),\n            'required': m.prop(false),\n            'on_bio': m.prop(false),\n            'type': m.prop(null),\n            'validation': m.prop(''),\n        };\n    }\n\n    /**\n     * Checks whether creation field is completed.\n     *\n     * @returns boolean\n     */\n    readyToAdd(field) {\n        if (field.name()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * List of field types availables\n     * @returns {Array}\n     */\n    availableTypes() {\n        return {\n            url: app.translator.trans('fof-masquerade.admin.types.url'),\n            email: app.translator.trans('fof-masquerade.admin.types.email'),\n            boolean: app.translator.trans('fof-masquerade.admin.types.boolean'),\n            select: app.translator.trans('fof-masquerade.admin.types.select'),\n            null: app.translator.trans('fof-masquerade.admin.types.advanced'),\n        };\n    }\n}\n","import {extend} from \"flarum/extend\";\nimport AdminNav from \"flarum/components/AdminNav\";\nimport AdminLinkButton from \"flarum/components/AdminLinkButton\";\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\n\nexport default function () {\n    // create the route\n    app.routes['fof-masquerade-configure-profile'] = {path: '/fof/masquerade/configure', component: ProfileConfigurePane.component()};\n\n    // bind the route we created to the three dots settings button\n    app.extensionSettings['fof-masquerade'] = () => m.route(app.route('fof-masquerade-configure-profile'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        // add the Image Upload tab to the admin navigation menu\n        items.add('fof-masquerade-configure-profile', AdminLinkButton.component({\n            href: app.route('fof-masquerade-configure-profile'),\n            icon: 'far fa-id-card',\n            children: 'Masquerade',\n            description: app.translator.trans('fof-masquerade.admin.menu.description')\n        }));\n    });\n}\n","import {extend} from \"flarum/extend\";\nimport app from \"flarum/app\";\nimport PermissionGrid from \"flarum/components/PermissionGrid\";\nimport Field from \"./../lib/models/Field\";\nimport addProfileConfigurePane from './addProfileConfigurePane';\n\napp.initializers.add('fof-masquerade', app => {\n    app.store.models['masquerade-field'] = Field;\n\n    // add the permission option for viewing a masquerade profile\n    extend(PermissionGrid.prototype, 'viewItems', items => {\n        items.add('masquerade-view-profile', {\n            icon: 'far fa-id-card',\n            label: app.translator.trans('fof-masquerade.admin.permissions.view-profile'),\n            permission: 'fof.masquerade.view-profile',\n            allowGuest: true\n        });\n    });\n    // add the permission option for creating a masquerade profile\n    extend(PermissionGrid.prototype, 'startItems', items => {\n        items.add('masquerade-have-profile', {\n            icon: 'far fa-id-card',\n            label: app.translator.trans('fof-masquerade.admin.permissions.have-profile'),\n            permission: 'fof.masquerade.have-profile'\n        });\n    });\n\n    addProfileConfigurePane();\n});\n"],"sourceRoot":""}