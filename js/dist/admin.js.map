{"version":3,"sources":["webpack://@fof/masquerade/webpack/bootstrap","webpack://@fof/masquerade/./admin.js","webpack://@fof/masquerade/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/masquerade/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/masquerade/./src/admin/addProfileConfigurePane.js","webpack://@fof/masquerade/./src/admin/components/SelectFieldOptionEditor.js","webpack://@fof/masquerade/./src/admin/index.js","webpack://@fof/masquerade/./src/admin/panes/ProfileConfigurePane.js","webpack://@fof/masquerade/./src/lib/models/Field.js","webpack://@fof/masquerade/external \"flarum.core.compat['Component']\"","webpack://@fof/masquerade/external \"flarum.core.compat['Model']\"","webpack://@fof/masquerade/external \"flarum.core.compat['app']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Button']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Select']\"","webpack://@fof/masquerade/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/masquerade/external \"flarum.core.compat['extend']\"","webpack://@fof/masquerade/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/masquerade/external \"flarum.core.compat['utils/saveSettings']\""],"names":["app","routes","path","component","ProfileConfigurePane","extensionSettings","m","route","extend","AdminNav","prototype","items","add","AdminLinkButton","href","icon","children","description","translator","trans","SelectFieldOptionEditor","init","newOption","prop","view","options","map","option","optionIndex","oninput","withAttr","value","updateOption","onclick","moveOption","deleteOption","onchange","placeholder","addOption","updateRules","props","join","rules","split","forEach","rule","parts","index","moveIndex","newIndex","length","move","splice","push","Component","initializers","store","models","Field","PermissionGrid","label","permission","allowGuest","addProfileConfigurePane","resetNew","loading","existing","loadExisting","enforceProfileCompletion","data","settings","config","sortable","element","querySelector","handle","addEventListener","sorting","$","get","updateSort","Switch","state","updateSetting","bind","field","addField","onsubmit","submitAddField","setting","saveSettings","exists","id","key","Button","className","deleteField","e","toggleField","name","updateExistingFieldInput","a","on_bio","required","Select","availableTypes","type","validation","disabled","readyToAdd","updateExistingField","what","pushAttributes","sort","request","method","url","forum","attribute","then","requestSuccess","target","parents","toggleClass","preventDefault","redraw","result","model","pushPayload","Array","deleted_at","remove","all","b","email","select","text","apiEndpoint","mixin","Model","prefix","transformDate","answer","hasOne"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sDAAsD,EAAE;AAC7G,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,iCAAiC;AACjC,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,WAAW,kBAAkB;AAC7B,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,+CAA+C,8CAA8C;AAC7F;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,8CAA8C,6CAA6C;;AAE3F;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA,0CAA0C,sEAAsE,uBAAuB,GAAG;AAC1I,+CAA+C,6DAA6D,4BAA4B,GAAG;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sDAAsD,EAAE;AAC5G;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,wDAAwD,sBAAsB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAoD,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,yBAAyB,EAAE;AACjH,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6DAA6D,yBAAyB,EAAE;AACxF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nexport default sortable;\n","import {extend} from \"flarum/extend\";\nimport AdminNav from \"flarum/components/AdminNav\";\nimport AdminLinkButton from \"flarum/components/AdminLinkButton\";\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\n\nexport default function () {\n    // create the route\n    app.routes['fof-masquerade-configure-profile'] = {path: '/fof/masquerade/configure', component: ProfileConfigurePane.component()};\n\n    // bind the route we created to the three dots settings button\n    app.extensionSettings['fof-masquerade'] = () => m.route(app.route('fof-masquerade-configure-profile'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        // add the Image Upload tab to the admin navigation menu\n        items.add('fof-masquerade-configure-profile', AdminLinkButton.component({\n            href: app.route('fof-masquerade-configure-profile'),\n            icon: 'far fa-id-card',\n            children: 'Masquerade',\n            description: app.translator.trans('fof-masquerade.admin.menu.description')\n        }));\n    });\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport icon from 'flarum/helpers/icon';\n\n/* global m */\n\nexport default class SelectFieldOptionEditor extends Component {\n    init() {\n        this.newOption = m.prop('');\n    }\n\n    view() {\n        return m('.Form-group', [\n            m('label', app.translator.trans('fof-masquerade.admin.fields.options')),\n            m('table', m('tbody', this.options().map((option, optionIndex) => m('tr', [\n                m('td', m('input[type=text].FormControl', {\n                    oninput: m.withAttr('value', value => {\n                        this.updateOption(optionIndex, value);\n                    }),\n                    value: option,\n                })),\n                m('td', m('button.Button', {\n                    onclick: () => {\n                        this.moveOption(optionIndex, -1);\n                    },\n                }, icon('fas fa-chevron-up'))),\n                m('td', m('button.Button', {\n                    onclick: () => {\n                        this.moveOption(optionIndex, 1);\n                    },\n                }, icon('fas fa-chevron-down'))),\n                m('td', m('button.Button.Button--danger', {\n                    onclick: () => {\n                        this.deleteOption(optionIndex);\n                    },\n                }, icon('fas fa-close'))),\n            ])))),\n            m('.helpText', app.translator.trans('fof-masquerade.admin.fields.option-comma-warning')),\n            m('table', m('tbody'), m('tr', [\n                m('td', m('input[type=text].FormControl', {\n                    onchange: m.withAttr('value', this.newOption),\n                    value: this.newOption(),\n                    placeholder: app.translator.trans('fof-masquerade.admin.fields.option-new'),\n                })),\n                m('td', m('button.Button.Button--primary', {\n                    onclick: () => {\n                        this.addOption();\n                    },\n                }, icon('fas fa-plus'))),\n            ])),\n        ]);\n    }\n\n    updateRules(options) {\n        // We ignore other existing rules, they would probably be leftovers from another field type when changing types\n        this.props.onchange('in:' + options.join(','));\n    }\n\n    options() {\n        const rules = this.props.value.split('|');\n\n        let options = [];\n\n        rules.forEach(rule => {\n            const parts = rule.split(':', 2);\n\n            if (parts[0] === 'in') {\n                options = parts[1].split(',');\n            }\n        });\n\n        return options;\n    }\n\n    updateOption(index, value) {\n        let options = this.options();\n\n        options[index] = value;\n\n        this.updateRules(options);\n    }\n\n    moveOption(index, moveIndex) {\n        let options = this.options();\n\n        const newIndex = index + moveIndex;\n\n        if (newIndex < 0 || newIndex > options.length - 1) {\n            return;\n        }\n\n        const move = options.splice(index, 1);\n\n        options.splice(newIndex, 0, move[0]);\n\n        this.updateRules(options);\n    }\n\n    deleteOption(index) {\n        let options = this.options();\n\n        options.splice(index, 1);\n\n        this.updateRules(options);\n    }\n\n    addOption() {\n        if (this.newOption() === '') {\n            return;\n        }\n\n        let options = this.options();\n\n        options.push(this.newOption());\n\n        this.newOption('');\n\n        this.updateRules(options);\n    }\n}\n","import {extend} from \"flarum/extend\";\nimport app from \"flarum/app\";\nimport PermissionGrid from \"flarum/components/PermissionGrid\";\nimport Field from \"./../lib/models/Field\";\nimport addProfileConfigurePane from './addProfileConfigurePane';\n\napp.initializers.add('fof-masquerade', app => {\n    app.store.models['masquerade-field'] = Field;\n\n    // add the permission option for viewing a masquerade profile\n    extend(PermissionGrid.prototype, 'viewItems', items => {\n        items.add('masquerade-view-profile', {\n            icon: 'far fa-id-card',\n            label: app.translator.trans('fof-masquerade.admin.permissions.view-profile'),\n            permission: 'fof.masquerade.view-profile',\n            allowGuest: true\n        });\n    });\n    // add the permission option for creating a masquerade profile\n    extend(PermissionGrid.prototype, 'startItems', items => {\n        items.add('masquerade-have-profile', {\n            icon: 'far fa-id-card',\n            label: app.translator.trans('fof-masquerade.admin.permissions.have-profile'),\n            permission: 'fof.masquerade.have-profile'\n        });\n    });\n\n    addProfileConfigurePane();\n});\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport Button from 'flarum/components/Button';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport SelectFieldOptionEditor from '../components/SelectFieldOptionEditor';\n\n/* global m */\n\nexport default class ProfileConfigurePane extends Component {\n\n    /**\n     * Sets up the component.\n     */\n    init() {\n        this.resetNew();\n        this.loading = false;\n        this.existing = [];\n        this.loadExisting();\n        this.enforceProfileCompletion = m.prop(app.data.settings['masquerade.force-profile-completion'] == 1);\n    }\n\n    /**\n     * Configures the component.\n     */\n    config() {\n        sortable(this.element.querySelector('.js-sortable-fields'), {\n            handle: 'legend',\n        })[0].addEventListener('sortupdate', () => {\n            const sorting = this.$('.js-sortable-fields > .Field')\n                .map(function () {\n                    return $(this).data('id');\n                })\n                .get();\n\n            this.updateSort(sorting);\n        });\n    }\n\n    /**\n     * Generates the component view.\n     *\n     * @returns {*}\n     */\n    view() {\n        return m('.ProfileConfigurePane', m('.container', [\n            m('h1', app.translator.trans('fof-masquerade.admin.title')),\n            m('h2', app.translator.trans('fof-masquerade.admin.general-options')),\n            m('form', [\n                m('.Form-group', Switch.component({\n                    state: this.enforceProfileCompletion(),\n                    onchange: this.updateSetting.bind(this, this.enforceProfileCompletion, 'masquerade.force-profile-completion'),\n                    children: app.translator.trans('fof-masquerade.admin.fields.force-user-to-completion'),\n                })),\n            ]),\n            m('h2', app.translator.trans('fof-masquerade.admin.fields.title')),\n            m('form.js-sortable-fields', this.existing.map(field => {\n                // Build array of fields to show.\n                return this.addField(field);\n            })),\n            m('form', {\n                onsubmit: this.submitAddField.bind(this),\n            }, [\n                this.addField(this.new),\n            ]),\n        ]));\n    }\n\n    /**\n     * Updates setting in database.\n     * @param prop\n     * @param setting\n     * @param value\n     */\n    updateSetting(prop, setting, value) {\n        saveSettings({\n            [setting]: value,\n        });\n\n        prop(value);\n    }\n\n    /**\n     * Creates a field in the DOM.\n     *\n     * @param field\n     * @returns {*}\n     */\n    addField(field) {\n        let exists = field.id();\n\n        return m('fieldset.Field', {\n            'data-id': field.id(),\n            key: field.id(),\n        }, [\n            m('legend', [\n                exists ? [Button.component({\n                    className: 'Button Button--icon Button--danger',\n                    icon: \"fas fa-trash\",\n                    onclick: this.deleteField.bind(this, field),\n                }), ' '] : null,\n                m('span.Field-toggle', {\n                    onclick: (e) => this.toggleField(e),\n                }, [\n                    app.translator.trans('fof-masquerade.admin.fields.' + (exists ? 'edit' : 'add'), {\n                        field: field.name(),\n                    }),\n                    ' ',\n                    icon('fas fa-caret-down'),\n                ]),\n            ]),\n            m('.Field-body', [\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.name')),\n                    m('input.FormControl', {\n                        value: field.name(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'name', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.name-help')),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.description')),\n                    m('input.FormControl', {\n                        value: field.description(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'description', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.description-help')),\n                ]),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.icon')),\n                    m('input.FormControl', {\n                        value: field.icon(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'icon', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.icon-help', {\n                        a: <a href=\"https://fontawesome.com/icons?m=free\" target=\"_blank\"/>,\n                    })),\n                ]),\n                m('.Form-group', Switch.component({\n                    state: field.on_bio(),\n                    onchange: this.updateExistingFieldInput.bind(this, 'on_bio', field),\n                    children: app.translator.trans('fof-masquerade.admin.fields.on_bio'),\n                })),\n                m('.Form-group', Switch.component({\n                    state: field.required(),\n                    onchange: this.updateExistingFieldInput.bind(this, 'required', field),\n                    children: app.translator.trans('fof-masquerade.admin.fields.required'),\n                })),\n                m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.type')),\n                    Select.component({\n                        onchange: value => {\n                            if (value === 'null') {\n                                value = null;\n                            }\n\n                            this.updateExistingFieldInput('type', field, value);\n                        },\n                        options: this.availableTypes(),\n                        value: field.type(),\n                    }),\n                ]),\n                (field.type() === 'select' ? SelectFieldOptionEditor.component({\n                    onchange: value => {\n                        this.updateExistingFieldInput('validation', field, value);\n                    },\n                    value: field.validation(),\n                }) : null),\n                (field.type() === null ? m('.Form-group', [\n                    m('label', app.translator.trans('fof-masquerade.admin.fields.validation')),\n                    m('input.FormControl', {\n                        value: field.validation(),\n                        oninput: m.withAttr('value', this.updateExistingFieldInput.bind(this, 'validation', field)),\n                    }),\n                    m('span.helpText', app.translator.trans('fof-masquerade.admin.fields.validation-help', {\n                        a: <a href=\"https://laravel.com/docs/5.2/validation#available-validation-rules\"\n                              target=\"_blank\"/>,\n                    })),\n                ]) : null),\n                m('.Form-group', m('.ButtonGroup', [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary',\n                        children: app.translator.trans('fof-masquerade.admin.buttons.' + (exists ? 'edit' : 'add') + '-field'),\n                        loading: this.loading,\n                        disabled: !this.readyToAdd(field),\n                        onclick: this.updateExistingField.bind(this, field)\n                    }),\n                    (exists ? Button.component({\n                        type: 'submit',\n                        className: 'Button Button--danger',\n                        children: app.translator.trans('fof-masquerade.admin.buttons.delete-field'),\n                        loading: this.loading,\n                        onclick: this.deleteField.bind(this, field),\n                    }) : null),\n                ])),\n            ]),\n        ]);\n    }\n\n    updateExistingFieldInput(what, field, value) {\n        let exists = field.id();\n\n        if (exists) {\n            field.pushAttributes({\n                [what]: value\n            })\n        } else {\n            field[what](value);\n        }\n    }\n\n    /**\n     * Sorts the fields.\n     *\n     * @param {Array} sorting\n     */\n    updateSort(sorting) {\n        let data = {\n            sort: sorting\n        };\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/order',\n            data\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Opens and closes field configuration sets.\n     *\n     * @param e\n     */\n    toggleField(e) {\n        $(e.target).parents('.Field').toggleClass('active');\n    }\n\n    /**\n     * Deletes a field configuration set.\n     *\n     * @param field\n     */\n    deleteField(field) {\n        app.request({\n            method: 'DELETE',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/' + field.id(),\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Saves the settings to the database and redraw the page\n     *\n     * @param e\n     */\n    submitAddField(e) {\n        e.preventDefault();\n\n        let data = this.new;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n            data,\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n\n        this.resetNew();\n\n        m.redraw();\n    }\n\n    /**\n     * Updates the value of one field.\n     *\n     * @param field\n     */\n    updateExistingField(field) {\n        if (!field.id()) return;\n\n        let data = field.data;\n\n        app.request({\n            // We use PATCH and not PUT because the endpoint allows filling only some of the fields\n            // (even if here we always pass all the attributes)\n            method: 'PATCH',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields/' + field.id(),\n            data,\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Parses result to update DOM.\n     *\n     * @param result\n     */\n    requestSuccess(result) {\n        let model = app.store.pushPayload(result);\n\n        // In case we've updated/deleted one instance delete it if necessary.\n        if (!(model instanceof Array) && model.deleted_at()) {\n            app.store.remove(model);\n        }\n\n        this.existing = app.store.all('masquerade-field');\n\n        // Update order in case the store order doesn't reflect the true ordering\n        this.existing.sort((a, b) => {\n            if (a.sort() < b.sort()) return -1;\n            if (a.sort() > b.sort()) return 1;\n            return 0;\n        });\n\n        this.loading = false;\n        m.redraw()\n    }\n\n    /**\n     * Retrieves list of fields.\n     */\n    loadExisting() {\n        this.loading = true;\n\n        return app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/masquerade/fields',\n        }).then(\n            this.requestSuccess.bind(this)\n        );\n    }\n\n    /**\n     * Resets the new field.\n     */\n    resetNew() {\n        this.new = {\n            // id() does not hold any value, but it's necessary to keep it because it's called to make the difference\n            // between the simple object holding the new field's value and the model holding an existing field's value\n            'id': m.prop(),\n            'name': m.prop(''),\n            'description': m.prop(''),\n            'prefix': m.prop(''),\n            'icon': m.prop(''),\n            'required': m.prop(false),\n            'on_bio': m.prop(false),\n            'type': m.prop(null),\n            'validation': m.prop(''),\n        };\n    }\n\n    /**\n     * Checks whether creation field is completed.\n     *\n     * @returns boolean\n     */\n    readyToAdd(field) {\n        if (field.name()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * List of field types availables\n     * @returns {Array}\n     */\n    availableTypes() {\n        return {\n            url: app.translator.trans('fof-masquerade.admin.types.url'),\n            email: app.translator.trans('fof-masquerade.admin.types.email'),\n            boolean: app.translator.trans('fof-masquerade.admin.types.boolean'),\n            select: app.translator.trans('fof-masquerade.admin.types.select'),\n            text: app.translator.trans('fof-masquerade.admin.types.text'),\n            null: app.translator.trans('fof-masquerade.admin.types.advanced'),\n        };\n    }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    type: Model.attribute('type'),\n    validation: Model.attribute('validation'),\n    required: Model.attribute('required'),\n    prefix: Model.attribute('prefix'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    answer: Model.hasOne('answer'),\n    on_bio: Model.attribute('on_bio')\n}) {\n    /**\n     * Construct a path to the API endpoint for this resource.\n     *\n     * @return {String}\n     * @protected\n     */\n    apiEndpoint() {\n        return '/masquerade/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['utils/saveSettings'];"],"sourceRoot":""}